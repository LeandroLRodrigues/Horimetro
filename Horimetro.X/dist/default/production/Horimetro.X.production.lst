

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Apr 01 11:01:46 2022

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1180                           INDF equ 00h ;# 
  1181  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1182                           TMR0 equ 01h ;# 
  1183  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1184                           PCL equ 02h ;# 
  1185  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1186                           STATUS equ 03h ;# 
  1187  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1188                           FSR equ 04h ;# 
  1189  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1190                           PORTA equ 05h ;# 
  1191  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1192                           PORTB equ 06h ;# 
  1193  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1194                           PORTC equ 07h ;# 
  1195  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1196                           PORTD equ 08h ;# 
  1197  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1198                           PORTE equ 09h ;# 
  1199  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1200                           PCLATH equ 0Ah ;# 
  1201  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1202                           INTCON equ 0Bh ;# 
  1203  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1204                           PIR1 equ 0Ch ;# 
  1205  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1206                           PIR2 equ 0Dh ;# 
  1207  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1208                           TMR1 equ 0Eh ;# 
  1209  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1210                           TMR1L equ 0Eh ;# 
  1211  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1212                           TMR1H equ 0Fh ;# 
  1213  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1214                           T1CON equ 010h ;# 
  1215  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1216                           TMR2 equ 011h ;# 
  1217  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1218                           T2CON equ 012h ;# 
  1219  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1220                           SSPBUF equ 013h ;# 
  1221  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1222                           SSPCON equ 014h ;# 
  1223  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1224                           CCPR1 equ 015h ;# 
  1225  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1226                           CCPR1L equ 015h ;# 
  1227  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1228                           CCPR1H equ 016h ;# 
  1229  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1230                           CCP1CON equ 017h ;# 
  1231  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1232                           RCSTA equ 018h ;# 
  1233  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1234                           TXREG equ 019h ;# 
  1235  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1236                           RCREG equ 01Ah ;# 
  1237  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1238                           CCPR2 equ 01Bh ;# 
  1239  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1240                           CCPR2L equ 01Bh ;# 
  1241  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1242                           CCPR2H equ 01Ch ;# 
  1243  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1244                           CCP2CON equ 01Dh ;# 
  1245  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1246                           ADRESH equ 01Eh ;# 
  1247  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1248                           ADCON0 equ 01Fh ;# 
  1249  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1250                           OPTION_REG equ 081h ;# 
  1251  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1252                           TRISA equ 085h ;# 
  1253  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1254                           TRISB equ 086h ;# 
  1255  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1256                           TRISC equ 087h ;# 
  1257  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1258                           TRISD equ 088h ;# 
  1259  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1260                           TRISE equ 089h ;# 
  1261  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1262                           PIE1 equ 08Ch ;# 
  1263  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1264                           PIE2 equ 08Dh ;# 
  1265  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1266                           PCON equ 08Eh ;# 
  1267  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1268                           OSCCON equ 08Fh ;# 
  1269  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1270                           OSCTUNE equ 090h ;# 
  1271  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1272                           SSPCON2 equ 091h ;# 
  1273  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1274                           PR2 equ 092h ;# 
  1275  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1276                           SSPADD equ 093h ;# 
  1277  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1278                           SSPMSK equ 093h ;# 
  1279  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1280                           MSK equ 093h ;# 
  1281  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1282                           SSPSTAT equ 094h ;# 
  1283  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1284                           WPUB equ 095h ;# 
  1285  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1286                           IOCB equ 096h ;# 
  1287  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1288                           VRCON equ 097h ;# 
  1289  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1290                           TXSTA equ 098h ;# 
  1291  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1292                           SPBRG equ 099h ;# 
  1293  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1294                           SPBRGH equ 09Ah ;# 
  1295  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1296                           PWM1CON equ 09Bh ;# 
  1297  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1298                           ECCPAS equ 09Ch ;# 
  1299  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1300                           PSTRCON equ 09Dh ;# 
  1301  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1302                           ADRESL equ 09Eh ;# 
  1303  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1304                           ADCON1 equ 09Fh ;# 
  1305  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1306                           WDTCON equ 0105h ;# 
  1307  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1308                           CM1CON0 equ 0107h ;# 
  1309  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1310                           CM2CON0 equ 0108h ;# 
  1311  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1312                           CM2CON1 equ 0109h ;# 
  1313  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1314                           EEDATA equ 010Ch ;# 
  1315  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1316                           EEDAT equ 010Ch ;# 
  1317  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1318                           EEADR equ 010Dh ;# 
  1319  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1320                           EEDATH equ 010Eh ;# 
  1321  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1322                           EEADRH equ 010Fh ;# 
  1323  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1324                           SRCON equ 0185h ;# 
  1325  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1326                           BAUDCTL equ 0187h ;# 
  1327  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1328                           ANSEL equ 0188h ;# 
  1329  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1330                           ANSELH equ 0189h ;# 
  1331  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1332                           EECON1 equ 018Ch ;# 
  1333  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1334                           EECON2 equ 018Dh ;# 
  1335  018D                     	FNCALL	_main,_T0_init
  1336                           	FNCALL	_main,_T0_pause
  1337                           	FNCALL	_main,_T0_play
  1338                           	FNCALL	_main,_T0_start
  1339                           	FNCALL	_main,_b0
  1340                           	FNCALL	_main,_botao_init
  1341                           	FNCALL	_main,_lcd_init
  1342                           	FNCALL	_main,_lcd_num
  1343                           	FNCALL	_main,_lcd_print
  1344                           	FNCALL	_main,_tempo
  1345                           	FNCALL	_tempo,_T0_start
  1346                           	FNCALL	_tempo,_T0_status
  1347                           	FNCALL	_tempo,___awmod
  1348                           	FNCALL	_lcd_print,_lcd_dataReg
  1349                           	FNCALL	_lcd_print,_lcd_lincol
  1350                           	FNCALL	_lcd_num,___awdiv
  1351                           	FNCALL	_lcd_num,___awmod
  1352                           	FNCALL	_lcd_num,_lcd_dataReg
  1353                           	FNCALL	_lcd_num,_lcd_lincol
  1354                           	FNCALL	_lcd_lincol,_lcd_instReg
  1355                           	FNCALL	_lcd_init,_delay
  1356                           	FNCALL	_lcd_init,_lcd_instReg
  1357                           	FNROOT	_main
  1358                           	FNCALL	_isr,_T0_int
  1359                           	FNCALL	_isr,_T1_int
  1360                           	FNCALL	_isr,_T2_int
  1361                           	FNCALL	intlevel1,_isr
  1362                           	global	intlevel1
  1363                           	FNROOT	intlevel1
  1364                           	global	_b1Anterior
  1365                           	global	_b0Anterior
  1366                           	global	_T2count
  1367                           	global	_T1count
  1368                           	global	_T0count
  1369                           	global	_dia
  1370                           	global	_seg
  1371                           	global	_min
  1372                           	global	_hor
  1373                           	global	_PORTD
  1374                           _PORTD	set	0x8
  1375  0008                     	global	_PORTDbits
  1376                           _PORTDbits	set	0x8
  1377  0008                     	global	_PIR1bits
  1378                           _PIR1bits	set	0xC
  1379  000C                     	global	_T2CONbits
  1380                           _T2CONbits	set	0x12
  1381  0012                     	global	_TMR2
  1382                           _TMR2	set	0x11
  1383  0011                     	global	_TMR1L
  1384                           _TMR1L	set	0xE
  1385  000E                     	global	_TMR1H
  1386                           _TMR1H	set	0xF
  1387  000F                     	global	_T1CONbits
  1388                           _T1CONbits	set	0x10
  1389  0010                     	global	_TMR0
  1390                           _TMR0	set	0x1
  1391  0001                     	global	_INTCONbits
  1392                           _INTCONbits	set	0xB
  1393  000B                     	global	_TRISDbits
  1394                           _TRISDbits	set	0x88
  1395  0088                     	global	_PR2
  1396                           _PR2	set	0x92
  1397  0092                     	global	_PIE1bits
  1398                           _PIE1bits	set	0x8C
  1399  008C                     	global	_OPTION_REGbits
  1400                           _OPTION_REGbits	set	0x81
  1401  0081                     psect	strings,class=STRING,delta=2,noexec
  1402                           global __pstrings
  1403                           __pstrings:
  1404  047E                     stringtab:
  1405  047E                     	global    __stringtab
  1406                           __stringtab:
  1407  047E                     ;	String table - string pointers are 1 byte each
  1408                           stringcode:stringdir:
  1409  047E                     movlw high(stringdir)
      + 047E                     stringdir:	
  1410  047E  3004               movwf pclath
  1411  047F  008A               movf fsr,w
  1412  0480  0804               incf fsr
  1413  0481  0A84               	addwf pc
  1414  0482  0782               	global __stringbase
  1415                           __stringbase:
  1416  0483                     	retlw	0
  1417  0483  3400               psect	strings
  1418                           	global    __end_of__stringtab
  1419                           __end_of__stringtab:
  1420  0484                     	
  1421                           STR_1:	
  1422  0484                     	retlw	84	;'T'
  1423  0484  3454               	retlw	49	;'1'
  1424  0485  3431               	retlw	58	;':'
  1425  0486  343A               	retlw	32	;' '
  1426  0487  3420               	retlw	32	;' '
  1427  0488  3420               	retlw	58	;':'
  1428  0489  343A               	retlw	32	;' '
  1429  048A  3420               	retlw	32	;' '
  1430  048B  3420               	retlw	58	;':'
  1431  048C  343A               	retlw	32	;' '
  1432  048D  3420               	retlw	32	;' '
  1433  048E  3420               	retlw	32	;' '
  1434  048F  3420               	retlw	0
  1435  0490  3400               psect	strings
  1436                           ; #config settings
  1437                           global __CFG_FOSC$INTRC_NOCLKOUT
  1438                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1439  0000                     global __CFG_WDTE$OFF
  1440                           __CFG_WDTE$OFF equ 0x0
  1441  0000                     global __CFG_PWRTE$OFF
  1442                           __CFG_PWRTE$OFF equ 0x0
  1443  0000                     global __CFG_MCLRE$OFF
  1444                           __CFG_MCLRE$OFF equ 0x0
  1445  0000                     global __CFG_CP$OFF
  1446                           __CFG_CP$OFF equ 0x0
  1447  0000                     global __CFG_CPD$OFF
  1448                           __CFG_CPD$OFF equ 0x0
  1449  0000                     global __CFG_BOREN$OFF
  1450                           __CFG_BOREN$OFF equ 0x0
  1451  0000                     global __CFG_IESO$OFF
  1452                           __CFG_IESO$OFF equ 0x0
  1453  0000                     global __CFG_FCMEN$OFF
  1454                           __CFG_FCMEN$OFF equ 0x0
  1455  0000                     global __CFG_LVP$OFF
  1456                           __CFG_LVP$OFF equ 0x0
  1457  0000                     global __CFG_BOR4V$BOR40V
  1458                           __CFG_BOR4V$BOR40V equ 0x0
  1459  0000                     global __CFG_WRT$OFF
  1460                           __CFG_WRT$OFF equ 0x0
  1461  0000                     	file	"C:\Users\21193459\AppData\Local\Temp\s2gk."
  1462                           	line	#
  1463                           psect cinit,class=CODE,delta=2
  1464                           global start_initialization
  1465                           start_initialization:
  1466  000F                     
  1467                           global __initialization
  1468                           __initialization:
  1469  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1470                           global __pbssCOMMON
  1471                           __pbssCOMMON:
  1472  007A                     _b1Anterior:
  1473  007A                            ds      1
  1474  007A                     
  1475                           _b0Anterior:
  1476  007B                            ds      1
  1477  007B                     
  1478                           psect	bssBANK0,class=BANK0,space=1,noexec
  1479                           global __pbssBANK0
  1480                           __pbssBANK0:
  1481  0034                     _T2count:
  1482  0034                            ds      2
  1483  0034                     
  1484                           _T1count:
  1485  0036                            ds      2
  1486  0036                     
  1487                           _T0count:
  1488  0038                            ds      2
  1489  0038                     
  1490                           _dia:
  1491  003A                            ds      1
  1492  003A                     
  1493                           _seg:
  1494  003B                            ds      1
  1495  003B                     
  1496                           _min:
  1497  003C                            ds      1
  1498  003C                     
  1499                           _hor:
  1500  003D                            ds      1
  1501  003D                     
  1502                           	file	"C:\Users\21193459\AppData\Local\Temp\s2gk."
  1503                           	line	#
  1504                           ; Clear objects allocated to COMMON
  1505                           psect cinit,class=CODE,delta=2,merge=1
  1506                           	clrf	((__pbssCOMMON)+0)&07Fh
  1507  000F  01FA               	clrf	((__pbssCOMMON)+1)&07Fh
  1508  0010  01FB               ; Clear objects allocated to BANK0
  1509                           psect cinit,class=CODE,delta=2,merge=1
  1510                           	bcf	status, 5	;RP0=0, select bank0
  1511  0011  1283               	bcf	status, 6	;RP1=0, select bank0
  1512  0012  1303               	clrf	((__pbssBANK0)+0)&07Fh
  1513  0013  01B4               	clrf	((__pbssBANK0)+1)&07Fh
  1514  0014  01B5               	clrf	((__pbssBANK0)+2)&07Fh
  1515  0015  01B6               	clrf	((__pbssBANK0)+3)&07Fh
  1516  0016  01B7               	clrf	((__pbssBANK0)+4)&07Fh
  1517  0017  01B8               	clrf	((__pbssBANK0)+5)&07Fh
  1518  0018  01B9               	clrf	((__pbssBANK0)+6)&07Fh
  1519  0019  01BA               	clrf	((__pbssBANK0)+7)&07Fh
  1520  001A  01BB               	clrf	((__pbssBANK0)+8)&07Fh
  1521  001B  01BC               	clrf	((__pbssBANK0)+9)&07Fh
  1522  001C  01BD               psect cinit,class=CODE,delta=2,merge=1
  1523                           global end_of_initialization,__end_of__initialization
  1524                           
  1525                           ;End of C runtime variable initialization code
  1526                           
  1527                           end_of_initialization:
  1528  001D                     __end_of__initialization:
  1529  001D                     clrf status
  1530  001D  0183               ljmp _main	;jump to C main() function
  1531  001E  120A  118A  290F   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1532                           global __pcstackCOMMON
  1533                           __pcstackCOMMON:
  1534  0070                     ?_lcd_init:	; 1 bytes @ 0x0
  1535  0070                     ?_T0_init:	; 1 bytes @ 0x0
  1536  0070                     ?_botao_init:	; 1 bytes @ 0x0
  1537  0070                     ?_b0:	; 1 bytes @ 0x0
  1538  0070                     ?_T0_play:	; 1 bytes @ 0x0
  1539  0070                     ?_T0_pause:	; 1 bytes @ 0x0
  1540  0070                     ?_tempo:	; 1 bytes @ 0x0
  1541  0070                     ?_main:	; 1 bytes @ 0x0
  1542  0070                     ?_T0_int:	; 1 bytes @ 0x0
  1543  0070                     ??_T0_int:	; 1 bytes @ 0x0
  1544  0070                     ?_T1_int:	; 1 bytes @ 0x0
  1545  0070                     ??_T1_int:	; 1 bytes @ 0x0
  1546  0070                     ?_T2_int:	; 1 bytes @ 0x0
  1547  0070                     ??_T2_int:	; 1 bytes @ 0x0
  1548  0070                     ?_isr:	; 1 bytes @ 0x0
  1549  0070                     ??_isr:	; 1 bytes @ 0x0
  1550  0070                     ?_lcd_instReg:	; 1 bytes @ 0x0
  1551  0070                     ?_lcd_dataReg:	; 1 bytes @ 0x0
  1552  0070                     	ds	2
  1553  0070                     ??_T0_init:	; 1 bytes @ 0x2
  1554  0072                     ??_botao_init:	; 1 bytes @ 0x2
  1555  0072                     ?_T0_start:	; 1 bytes @ 0x2
  1556  0072                     ??_b0:	; 1 bytes @ 0x2
  1557  0072                     ??_T0_play:	; 1 bytes @ 0x2
  1558  0072                     ??_T0_pause:	; 1 bytes @ 0x2
  1559  0072                     ?_delay:	; 1 bytes @ 0x2
  1560  0072                     ??_lcd_instReg:	; 1 bytes @ 0x2
  1561  0072                     ??_lcd_dataReg:	; 1 bytes @ 0x2
  1562  0072                     	global	?_T0_status
  1563                           ?_T0_status:	; 2 bytes @ 0x2
  1564  0072                     	global	?___awdiv
  1565                           ?___awdiv:	; 2 bytes @ 0x2
  1566  0072                     	global	?___awmod
  1567                           ?___awmod:	; 2 bytes @ 0x2
  1568  0072                     	global	T0_start@c
  1569                           T0_start@c:	; 2 bytes @ 0x2
  1570  0072                     	global	delay@t
  1571                           delay@t:	; 2 bytes @ 0x2
  1572  0072                     	global	___awdiv@divisor
  1573                           ___awdiv@divisor:	; 2 bytes @ 0x2
  1574  0072                     	global	___awmod@divisor
  1575                           ___awmod@divisor:	; 2 bytes @ 0x2
  1576  0072                     	ds	2
  1577  0072                     ??_T0_start:	; 1 bytes @ 0x4
  1578  0074                     ??_T0_status:	; 1 bytes @ 0x4
  1579  0074                     ??_delay:	; 1 bytes @ 0x4
  1580  0074                     	global	lcd_instReg@i
  1581                           lcd_instReg@i:	; 1 bytes @ 0x4
  1582  0074                     	global	lcd_dataReg@d
  1583                           lcd_dataReg@d:	; 1 bytes @ 0x4
  1584  0074                     	global	___awdiv@dividend
  1585                           ___awdiv@dividend:	; 2 bytes @ 0x4
  1586  0074                     	global	___awmod@dividend
  1587                           ___awmod@dividend:	; 2 bytes @ 0x4
  1588  0074                     	ds	1
  1589  0074                     ??_lcd_init:	; 1 bytes @ 0x5
  1590  0075                     ?_lcd_lincol:	; 1 bytes @ 0x5
  1591  0075                     	global	lcd_lincol@col
  1592                           lcd_lincol@col:	; 1 bytes @ 0x5
  1593  0075                     	ds	1
  1594  0075                     ??_lcd_lincol:	; 1 bytes @ 0x6
  1595  0076                     ??___awdiv:	; 1 bytes @ 0x6
  1596  0076                     ??___awmod:	; 1 bytes @ 0x6
  1597  0076                     	ds	1
  1598  0076                     	global	lcd_lincol@lin
  1599                           lcd_lincol@lin:	; 1 bytes @ 0x7
  1600  0077                     	global	___awmod@counter
  1601                           ___awmod@counter:	; 1 bytes @ 0x7
  1602  0077                     	ds	1
  1603  0077                     ?_lcd_print:	; 1 bytes @ 0x8
  1604  0078                     	global	lcd_print@col
  1605                           lcd_print@col:	; 1 bytes @ 0x8
  1606  0078                     	global	___awmod@sign
  1607                           ___awmod@sign:	; 1 bytes @ 0x8
  1608  0078                     	ds	1
  1609  0078                     	global	lcd_print@str
  1610                           lcd_print@str:	; 1 bytes @ 0x9
  1611  0079                     	ds	1
  1612  0079                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1613                           global __pcstackBANK0
  1614                           __pcstackBANK0:
  1615  0020                     ??_lcd_print:	; 1 bytes @ 0x0
  1616  0020                     ??_tempo:	; 1 bytes @ 0x0
  1617  0020                     	global	___awdiv@counter
  1618                           ___awdiv@counter:	; 1 bytes @ 0x0
  1619  0020                     	ds	1
  1620  0020                     	global	lcd_print@pos
  1621                           lcd_print@pos:	; 1 bytes @ 0x1
  1622  0021                     	global	___awdiv@sign
  1623                           ___awdiv@sign:	; 1 bytes @ 0x1
  1624  0021                     	ds	1
  1625  0021                     	global	lcd_print@lin
  1626                           lcd_print@lin:	; 1 bytes @ 0x2
  1627  0022                     	global	___awdiv@quotient
  1628                           ___awdiv@quotient:	; 2 bytes @ 0x2
  1629  0022                     	ds	2
  1630  0022                     ?_lcd_num:	; 1 bytes @ 0x4
  1631  0024                     	global	lcd_num@col
  1632                           lcd_num@col:	; 1 bytes @ 0x4
  1633  0024                     	ds	1
  1634  0024                     	global	lcd_num@num
  1635                           lcd_num@num:	; 2 bytes @ 0x5
  1636  0025                     	ds	2
  1637  0025                     	global	lcd_num@tam
  1638                           lcd_num@tam:	; 1 bytes @ 0x7
  1639  0027                     	ds	1
  1640  0027                     ??_lcd_num:	; 1 bytes @ 0x8
  1641  0028                     	ds	3
  1642  0028                     	global	lcd_num@lin
  1643                           lcd_num@lin:	; 1 bytes @ 0xB
  1644  002B                     	ds	1
  1645  002B                     	global	lcd_num@size
  1646                           lcd_num@size:	; 1 bytes @ 0xC
  1647  002C                     	ds	1
  1648  002C                     	global	lcd_num@sinal
  1649                           lcd_num@sinal:	; 1 bytes @ 0xD
  1650  002D                     	ds	1
  1651  002D                     	global	lcd_num@div
  1652                           lcd_num@div:	; 2 bytes @ 0xE
  1653  002E                     	ds	2
  1654  002E                     ??_main:	; 1 bytes @ 0x10
  1655  0030                     	ds	4
  1656  0030                     ;!
  1657                           ;!Data Sizes:
  1658                           ;!    Strings     13
  1659                           ;!    Constant    0
  1660                           ;!    Data        0
  1661                           ;!    BSS         12
  1662                           ;!    Persistent  0
  1663                           ;!    Stack       0
  1664                           ;!
  1665                           ;!Auto Spaces:
  1666                           ;!    Space          Size  Autos    Used
  1667                           ;!    COMMON           14     10      12
  1668                           ;!    BANK0            80     20      30
  1669                           ;!    BANK1            80      0       0
  1670                           ;!    BANK3            96      0       0
  1671                           ;!    BANK2            96      0       0
  1672                           
  1673                           ;!
  1674                           ;!Pointer List with Targets:
  1675                           ;!
  1676                           ;!    lcd_print@str	PTR const unsigned char  size(1) Largest target is 13
  1677                           ;!		 -> STR_1(CODE[13]), 
  1678                           ;!
  1679                           
  1680                           
  1681                           ;!
  1682                           ;!Critical Paths under _main in COMMON
  1683                           ;!
  1684                           ;!    _main->_lcd_print
  1685                           ;!    _tempo->___awmod
  1686                           ;!    _lcd_print->_lcd_lincol
  1687                           ;!    _lcd_num->___awmod
  1688                           ;!    _lcd_lincol->_lcd_instReg
  1689                           ;!    _lcd_init->_delay
  1690                           ;!    _lcd_init->_lcd_instReg
  1691                           ;!
  1692                           ;!Critical Paths under _isr in COMMON
  1693                           ;!
  1694                           ;!    None.
  1695                           ;!
  1696                           ;!Critical Paths under _main in BANK0
  1697                           ;!
  1698                           ;!    _main->_lcd_num
  1699                           ;!    _lcd_num->___awdiv
  1700                           ;!
  1701                           ;!Critical Paths under _isr in BANK0
  1702                           ;!
  1703                           ;!    None.
  1704                           ;!
  1705                           ;!Critical Paths under _main in BANK1
  1706                           ;!
  1707                           ;!    None.
  1708                           ;!
  1709                           ;!Critical Paths under _isr in BANK1
  1710                           ;!
  1711                           ;!    None.
  1712                           ;!
  1713                           ;!Critical Paths under _main in BANK3
  1714                           ;!
  1715                           ;!    None.
  1716                           ;!
  1717                           ;!Critical Paths under _isr in BANK3
  1718                           ;!
  1719                           ;!    None.
  1720                           ;!
  1721                           ;!Critical Paths under _main in BANK2
  1722                           ;!
  1723                           ;!    None.
  1724                           ;!
  1725                           ;!Critical Paths under _isr in BANK2
  1726                           ;!
  1727                           ;!    None.
  1728                           
  1729 ;;
  1730 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1731 ;;
  1732                           
  1733                           ;!
  1734                           ;!Call Graph Tables:
  1735                           ;!
  1736                           ;! ---------------------------------------------------------------------------------
  1737                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1738                           ;! ---------------------------------------------------------------------------------
  1739                           ;! (0) _main                                                 4     4      0    5481
  1740                           ;!                                             16 BANK0      4     4      0
  1741                           ;!                            _T0_init
  1742                           ;!                           _T0_pause
  1743                           ;!                            _T0_play
  1744                           ;!                           _T0_start
  1745                           ;!                                 _b0
  1746                           ;!                         _botao_init
  1747                           ;!                           _lcd_init
  1748                           ;!                            _lcd_num
  1749                           ;!                          _lcd_print
  1750                           ;!                              _tempo
  1751                           ;! ---------------------------------------------------------------------------------
  1752                           ;! (1) _tempo                                                4     4      0     628
  1753                           ;!                                              0 BANK0      4     4      0
  1754                           ;!                           _T0_start
  1755                           ;!                          _T0_status
  1756                           ;!                            ___awmod
  1757                           ;! ---------------------------------------------------------------------------------
  1758                           ;! (2) _T0_status                                            2     0      2       0
  1759                           ;!                                              2 COMMON     2     0      2
  1760                           ;! ---------------------------------------------------------------------------------
  1761                           ;! (2) _T0_start                                             2     0      2     174
  1762                           ;!                                              2 COMMON     2     0      2
  1763                           ;! ---------------------------------------------------------------------------------
  1764                           ;! (1) _lcd_print                                            5     3      2     760
  1765                           ;!                                              8 COMMON     2     0      2
  1766                           ;!                                              0 BANK0      3     3      0
  1767                           ;!                        _lcd_dataReg
  1768                           ;!                         _lcd_lincol
  1769                           ;! ---------------------------------------------------------------------------------
  1770                           ;! (1) _lcd_num                                             12     8      4    3492
  1771                           ;!                                              4 BANK0     12     8      4
  1772                           ;!                            ___awdiv
  1773                           ;!                            ___awmod
  1774                           ;!                        _lcd_dataReg
  1775                           ;!                         _lcd_lincol
  1776                           ;! ---------------------------------------------------------------------------------
  1777                           ;! (2) _lcd_lincol                                           3     2      1     372
  1778                           ;!                                              5 COMMON     3     2      1
  1779                           ;!                        _lcd_instReg
  1780                           ;! ---------------------------------------------------------------------------------
  1781                           ;! (2) _lcd_dataReg                                          3     3      0      44
  1782                           ;!                                              2 COMMON     3     3      0
  1783                           ;! ---------------------------------------------------------------------------------
  1784                           ;! (2) ___awmod                                              7     3      4     454
  1785                           ;!                                              2 COMMON     7     3      4
  1786                           ;! ---------------------------------------------------------------------------------
  1787                           ;! (2) ___awdiv                                              9     5      4    1165
  1788                           ;!                                              2 COMMON     5     1      4
  1789                           ;!                                              0 BANK0      4     4      0
  1790                           ;! ---------------------------------------------------------------------------------
  1791                           ;! (1) _lcd_init                                             0     0      0     427
  1792                           ;!                              _delay
  1793                           ;!                        _lcd_instReg
  1794                           ;! ---------------------------------------------------------------------------------
  1795                           ;! (3) _lcd_instReg                                          3     3      0     176
  1796                           ;!                                              2 COMMON     3     3      0
  1797                           ;! ---------------------------------------------------------------------------------
  1798                           ;! (2) _delay                                                3     1      2     251
  1799                           ;!                                              2 COMMON     3     1      2
  1800                           ;! ---------------------------------------------------------------------------------
  1801                           ;! (1) _botao_init                                           0     0      0       0
  1802                           ;! ---------------------------------------------------------------------------------
  1803                           ;! (1) _b0                                                   0     0      0       0
  1804                           ;! ---------------------------------------------------------------------------------
  1805                           ;! (1) _T0_play                                              0     0      0       0
  1806                           ;! ---------------------------------------------------------------------------------
  1807                           ;! (1) _T0_pause                                             0     0      0       0
  1808                           ;! ---------------------------------------------------------------------------------
  1809                           ;! (1) _T0_init                                              0     0      0       0
  1810                           ;! ---------------------------------------------------------------------------------
  1811                           ;! Estimated maximum stack depth 3
  1812                           ;! ---------------------------------------------------------------------------------
  1813                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1814                           ;! ---------------------------------------------------------------------------------
  1815                           ;! (4) _isr                                                  2     2      0       0
  1816                           ;!                                              0 COMMON     2     2      0
  1817                           ;!                             _T0_int
  1818                           ;!                             _T1_int
  1819                           ;!                             _T2_int
  1820                           ;! ---------------------------------------------------------------------------------
  1821                           ;! (5) _T2_int                                               0     0      0       0
  1822                           ;! ---------------------------------------------------------------------------------
  1823                           ;! (5) _T1_int                                               0     0      0       0
  1824                           ;! ---------------------------------------------------------------------------------
  1825                           ;! (5) _T0_int                                               0     0      0       0
  1826                           ;! ---------------------------------------------------------------------------------
  1827                           ;! Estimated maximum stack depth 5
  1828                           ;! ---------------------------------------------------------------------------------
  1829                           ;!
  1830                           ;! Call Graph Graphs:
  1831                           ;!
  1832                           ;! _main (ROOT)
  1833                           ;!   _T0_init
  1834                           ;!   _T0_pause
  1835                           ;!   _T0_play
  1836                           ;!   _T0_start
  1837                           ;!   _b0
  1838                           ;!   _botao_init
  1839                           ;!   _lcd_init
  1840                           ;!     _delay
  1841                           ;!     _lcd_instReg
  1842                           ;!   _lcd_num
  1843                           ;!     ___awdiv
  1844                           ;!     ___awmod
  1845                           ;!     _lcd_dataReg
  1846                           ;!     _lcd_lincol
  1847                           ;!       _lcd_instReg
  1848                           ;!   _lcd_print
  1849                           ;!     _lcd_dataReg
  1850                           ;!     _lcd_lincol
  1851                           ;!       _lcd_instReg
  1852                           ;!   _tempo
  1853                           ;!     _T0_start
  1854                           ;!     _T0_status
  1855                           ;!     ___awmod
  1856                           ;!
  1857                           ;! _isr (ROOT)
  1858                           ;!   _T0_int
  1859                           ;!   _T1_int
  1860                           ;!   _T2_int
  1861                           ;!
  1862                           
  1863                           ;! Address spaces:
  1864                           
  1865                           ;!Name               Size   Autos  Total    Cost      Usage
  1866                           ;!BITCOMMON            E      0       0       0        0.0%
  1867                           ;!EEDATA             100      0       0       0        0.0%
  1868                           ;!NULL                 0      0       0       0        0.0%
  1869                           ;!CODE                 0      0       0       0        0.0%
  1870                           ;!COMMON               E      A       C       1       85.7%
  1871                           ;!BITSFR0              0      0       0       1        0.0%
  1872                           ;!SFR0                 0      0       0       1        0.0%
  1873                           ;!BITSFR1              0      0       0       2        0.0%
  1874                           ;!SFR1                 0      0       0       2        0.0%
  1875                           ;!STACK                0      0       0       2        0.0%
  1876                           ;!ABS                  0      0      2A       3        0.0%
  1877                           ;!BITBANK0            50      0       0       4        0.0%
  1878                           ;!BITSFR3              0      0       0       4        0.0%
  1879                           ;!SFR3                 0      0       0       4        0.0%
  1880                           ;!BANK0               50     14      1E       5       37.5%
  1881                           ;!BITSFR2              0      0       0       5        0.0%
  1882                           ;!SFR2                 0      0       0       5        0.0%
  1883                           ;!BITBANK1            50      0       0       6        0.0%
  1884                           ;!BANK1               50      0       0       7        0.0%
  1885                           ;!BITBANK3            60      0       0       8        0.0%
  1886                           ;!BANK3               60      0       0       9        0.0%
  1887                           ;!BITBANK2            60      0       0      10        0.0%
  1888                           ;!BANK2               60      0       0      11        0.0%
  1889                           ;!DATA                 0      0      2A      12        0.0%
  1890                           
  1891                           	global	_main
  1892                           
  1893 ;; *************** function _main *****************
  1894 ;; Defined at:
  1895 ;;		line 16 in file "main.c"
  1896 ;; Parameters:    Size  Location     Type
  1897 ;;		None
  1898 ;; Auto vars:     Size  Location     Type
  1899 ;;		None
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  1    wreg      void 
  1902 ;; Registers used:
  1903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : B00/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1909 ;;      Params:         0       0       0       0       0
  1910 ;;      Locals:         0       0       0       0       0
  1911 ;;      Temps:          0       4       0       0       0
  1912 ;;      Totals:         0       4       0       0       0
  1913 ;;Total ram usage:        4 bytes
  1914 ;; Hardware stack levels required when called:    5
  1915 ;; This function calls:
  1916 ;;		_T0_init
  1917 ;;		_T0_pause
  1918 ;;		_T0_play
  1919 ;;		_T0_start
  1920 ;;		_b0
  1921 ;;		_botao_init
  1922 ;;		_lcd_init
  1923 ;;		_lcd_num
  1924 ;;		_lcd_print
  1925 ;;		_tempo
  1926 ;; This function is called by:
  1927 ;;		Startup code after reset
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1931                           	file	"main.c"
  1932                           	line	16
  1933                           global __pmaintext
  1934                           __pmaintext:	;psect for function _main
  1935  010F                     psect	maintext
  1936                           	file	"main.c"
  1937                           	line	16
  1938                           	global	__size_of_main
  1939                           	__size_of_main	equ	__end_of_main-_main
  1940  008B                     	
  1941                           _main:	
  1942  010F                     ;incstack = 0
  1943                           	opt	stack 3
  1944                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1945                           	line	18
  1946                           	
  1947                           l1799:	
  1948  010F                     ;main.c: 18:     lcd_init();
  1949                           	fcall	_lcd_init
  1950  010F  120A  118A  237B  120A  118A  	line	19
  1951                           ;main.c: 19:     T0_init();
  1952                           	fcall	_T0_init
  1953  0114  120A  118A  24B6  120A  118A  	line	20
  1954                           	
  1955                           l1801:	
  1956  0119                     ;main.c: 20:     botao_init();
  1957                           	fcall	_botao_init
  1958  0119  120A  118A  24EE  120A  118A  	line	22
  1959                           	
  1960                           l1803:	
  1961  011E                     ;main.c: 22:     lcd_print(0,0,"T1:  :  :   ");
  1962                           	clrf	(lcd_print@col)
  1963  011E  01F8               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1964  011F  3001               	bcf	status, 5	;RP0=0, select bank0
  1965  0120  1283               	bcf	status, 6	;RP1=0, select bank0
  1966  0121  1303               	movwf	(??_main+0)+0
  1967  0122  00B0               	movf	(??_main+0)+0,w
  1968  0123  0830               	movwf	(lcd_print@str)
  1969  0124  00F9               	movlw	low(0)
  1970  0125  3000               	fcall	_lcd_print
  1971  0126  120A  118A  23BA  120A  118A  	line	23
  1972                           	
  1973                           l1805:	
  1974  012B                     ;main.c: 23:     T0_start(1000);
  1975                           	movlw	0E8h
  1976  012B  30E8               	movwf	(T0_start@c)
  1977  012C  00F2               	movlw	03h
  1978  012D  3003               	movwf	((T0_start@c))+1
  1979  012E  00F3               	fcall	_T0_start
  1980  012F  120A  118A  24D6  120A  118A  	goto	l1807
  1981  0134  2935               	line	25
  1982                           ;main.c: 25:     while( 1 )
  1983                           	
  1984                           l31:	
  1985  0135                     	line	27
  1986                           	
  1987                           l1807:	
  1988  0135                     ;main.c: 26:     {;main.c: 27:         if( b0() )
  1989                           	fcall	_b0
  1990  0135  120A  118A  24E8  120A  118A  	xorlw	0
  1991  013A  3A00               	skipnz
  1992  013B  1903               	goto	u1481
  1993  013C  293E               	goto	u1480
  1994  013D  293F               u1481:
  1995  013E                     	goto	l1811
  1996  013E  2945               u1480:
  1997  013F                     	line	28
  1998                           	
  1999                           l1809:	
  2000  013F                     ;main.c: 28:             T0_play();
  2001                           	fcall	_T0_play
  2002  013F  120A  118A  24F3  120A  118A  	goto	l1813
  2003  0144  294B               	line	29
  2004                           ;main.c: 29:         else
  2005                           	
  2006                           l32:	
  2007  0145                     	line	30
  2008                           	
  2009                           l1811:	
  2010  0145                     ;main.c: 30:             T0_pause();
  2011                           	fcall	_T0_pause
  2012  0145  120A  118A  24F5  120A  118A  	goto	l1813
  2013  014A  294B               	
  2014                           l33:	
  2015  014B                     	line	31
  2016                           	
  2017                           l1813:	
  2018  014B                     ;main.c: 31:         tempo();
  2019                           	fcall	_tempo
  2020  014B  120A  118A  2225  120A  118A  	line	32
  2021                           	
  2022                           l1815:	
  2023  0150                     ;main.c: 32:         lcd_num(0, 3, hor, 2);
  2024                           	movlw	low(03h)
  2025  0150  3003               	bcf	status, 5	;RP0=0, select bank0
  2026  0151  1283               	bcf	status, 6	;RP1=0, select bank0
  2027  0152  1303               	movwf	(??_main+0)+0
  2028  0153  00B0               	movf	(??_main+0)+0,w
  2029  0154  0830               	movwf	(lcd_num@col)
  2030  0155  00A4               	movf	(_hor),w
  2031  0156  083D               	movwf	(??_main+1)+0
  2032  0157  00B1               	clrf	(??_main+1)+0+1
  2033  0158  01B2               	movf	0+(??_main+1)+0,w
  2034  0159  0831               	movwf	(lcd_num@num)
  2035  015A  00A5               	movf	1+(??_main+1)+0,w
  2036  015B  0832               	movwf	(lcd_num@num+1)
  2037  015C  00A6               	movlw	low(02h)
  2038  015D  3002               	movwf	(??_main+3)+0
  2039  015E  00B3               	movf	(??_main+3)+0,w
  2040  015F  0833               	movwf	(lcd_num@tam)
  2041  0160  00A7               	movlw	low(0)
  2042  0161  3000               	fcall	_lcd_num
  2043  0162  120A  118A  2021  120A  118A  	line	33
  2044                           	
  2045                           l1817:	
  2046  0167                     ;main.c: 33:         lcd_num(0, 6, min, 2);
  2047                           	movlw	low(06h)
  2048  0167  3006               	bcf	status, 5	;RP0=0, select bank0
  2049  0168  1283               	bcf	status, 6	;RP1=0, select bank0
  2050  0169  1303               	movwf	(??_main+0)+0
  2051  016A  00B0               	movf	(??_main+0)+0,w
  2052  016B  0830               	movwf	(lcd_num@col)
  2053  016C  00A4               	movf	(_min),w
  2054  016D  083C               	movwf	(??_main+1)+0
  2055  016E  00B1               	clrf	(??_main+1)+0+1
  2056  016F  01B2               	movf	0+(??_main+1)+0,w
  2057  0170  0831               	movwf	(lcd_num@num)
  2058  0171  00A5               	movf	1+(??_main+1)+0,w
  2059  0172  0832               	movwf	(lcd_num@num+1)
  2060  0173  00A6               	movlw	low(02h)
  2061  0174  3002               	movwf	(??_main+3)+0
  2062  0175  00B3               	movf	(??_main+3)+0,w
  2063  0176  0833               	movwf	(lcd_num@tam)
  2064  0177  00A7               	movlw	low(0)
  2065  0178  3000               	fcall	_lcd_num
  2066  0179  120A  118A  2021  120A  118A  	line	34
  2067                           	
  2068                           l1819:	
  2069  017E                     ;main.c: 34:         lcd_num(0, 9, seg, 2);
  2070                           	movlw	low(09h)
  2071  017E  3009               	bcf	status, 5	;RP0=0, select bank0
  2072  017F  1283               	bcf	status, 6	;RP1=0, select bank0
  2073  0180  1303               	movwf	(??_main+0)+0
  2074  0181  00B0               	movf	(??_main+0)+0,w
  2075  0182  0830               	movwf	(lcd_num@col)
  2076  0183  00A4               	movf	(_seg),w
  2077  0184  083B               	movwf	(??_main+1)+0
  2078  0185  00B1               	clrf	(??_main+1)+0+1
  2079  0186  01B2               	movf	0+(??_main+1)+0,w
  2080  0187  0831               	movwf	(lcd_num@num)
  2081  0188  00A5               	movf	1+(??_main+1)+0,w
  2082  0189  0832               	movwf	(lcd_num@num+1)
  2083  018A  00A6               	movlw	low(02h)
  2084  018B  3002               	movwf	(??_main+3)+0
  2085  018C  00B3               	movf	(??_main+3)+0,w
  2086  018D  0833               	movwf	(lcd_num@tam)
  2087  018E  00A7               	movlw	low(0)
  2088  018F  3000               	fcall	_lcd_num
  2089  0190  120A  118A  2021  120A  118A  	goto	l1807
  2090  0195  2935               	line	35
  2091                           ;main.c: 35:     }
  2092                           	
  2093                           l34:	
  2094  0196                     	goto	l1807
  2095  0196  2935               	
  2096                           l35:	
  2097  0197                     	line	36
  2098                           	
  2099                           l36:	
  2100  0197                     	global	start
  2101                           	ljmp	start
  2102  0197  120A  118A  280C   	opt stack 0
  2103                           GLOBAL	__end_of_main
  2104                           	__end_of_main:
  2105  019A                     	signat	_main,89
  2106                           	global	_tempo
  2107                           
  2108 ;; *************** function _tempo *****************
  2109 ;; Defined at:
  2110 ;;		line 15 in file "tempo.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      void 
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0, pclath, cstack
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2124 ;;      Params:         0       0       0       0       0
  2125 ;;      Locals:         0       0       0       0       0
  2126 ;;      Temps:          0       4       0       0       0
  2127 ;;      Totals:         0       4       0       0       0
  2128 ;;Total ram usage:        4 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    3
  2131 ;; This function calls:
  2132 ;;		_T0_start
  2133 ;;		_T0_status
  2134 ;;		___awmod
  2135 ;; This function is called by:
  2136 ;;		_main
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2140                           	file	"tempo.c"
  2141                           	line	15
  2142                           global __ptext1
  2143                           __ptext1:	;psect for function _tempo
  2144  0225                     psect	text1
  2145                           	file	"tempo.c"
  2146                           	line	15
  2147                           	global	__size_of_tempo
  2148                           	__size_of_tempo	equ	__end_of_tempo-_tempo
  2149  0080                     	
  2150                           _tempo:	
  2151  0225                     ;incstack = 0
  2152                           	opt	stack 4
  2153                           ; Regs used in _tempo: [wreg+status,2+status,0+pclath+cstack]
  2154                           	line	17
  2155                           	
  2156                           l1749:	
  2157  0225                     ;tempo.c: 17:     if( T0_status() == 0 )
  2158                           	fcall	_T0_status
  2159  0225  120A  118A  24E0  120A  118A  	movf	((0+(?_T0_status))),w
  2160  022A  0872               iorwf	((1+(?_T0_status))),w
  2161  022B  0473               	btfss	status,2
  2162  022C  1D03               	goto	u1351
  2163  022D  2A2F               	goto	u1350
  2164  022E  2A30               u1351:
  2165  022F                     	goto	l221
  2166  022F  2AA4               u1350:
  2167  0230                     	line	19
  2168                           	
  2169                           l1751:	
  2170  0230                     ;tempo.c: 18:     {;tempo.c: 19:         T0_start(1000);
  2171                           	movlw	0E8h
  2172  0230  30E8               	movwf	(T0_start@c)
  2173  0231  00F2               	movlw	03h
  2174  0232  3003               	movwf	((T0_start@c))+1
  2175  0233  00F3               	fcall	_T0_start
  2176  0234  120A  118A  24D6  120A  118A  	line	20
  2177                           ;tempo.c: 20:         seg = ++seg % 60;
  2178                           	movlw	03Ch
  2179  0239  303C               	movwf	(___awmod@divisor)
  2180  023A  00F2               	movlw	0
  2181  023B  3000               	movwf	((___awmod@divisor))+1
  2182  023C  00F3               	movlw	low(01h)
  2183  023D  3001               	bcf	status, 5	;RP0=0, select bank0
  2184  023E  1283               	bcf	status, 6	;RP1=0, select bank0
  2185  023F  1303               	movwf	(??_tempo+0)+0
  2186  0240  00A0               	movf	(??_tempo+0)+0,w
  2187  0241  0820               	addwf	(_seg),f
  2188  0242  07BB               	movf	((_seg)),w
  2189  0243  083B               	movwf	(??_tempo+1)+0
  2190  0244  00A1               	clrf	(??_tempo+1)+0+1
  2191  0245  01A2               	movf	0+(??_tempo+1)+0,w
  2192  0246  0821               	movwf	(___awmod@dividend)
  2193  0247  00F4               	movf	1+(??_tempo+1)+0,w
  2194  0248  0822               	movwf	(___awmod@dividend+1)
  2195  0249  00F5               	fcall	___awmod
  2196  024A  120A  118A  2318  120A  118A  	movf	(0+(?___awmod)),w
  2197  024F  0872               	bcf	status, 5	;RP0=0, select bank0
  2198  0250  1283               	bcf	status, 6	;RP1=0, select bank0
  2199  0251  1303               	movwf	(??_tempo+3)+0
  2200  0252  00A3               	movf	(??_tempo+3)+0,w
  2201  0253  0823               	movwf	(_seg)
  2202  0254  00BB               	line	21
  2203                           	
  2204                           l1753:	
  2205  0255                     ;tempo.c: 21:         if( seg == 0 )
  2206                           	movf	((_seg)),w
  2207  0255  083B               	btfss	status,2
  2208  0256  1D03               	goto	u1361
  2209  0257  2A59               	goto	u1360
  2210  0258  2A5A               u1361:
  2211  0259                     	goto	l221
  2212  0259  2AA4               u1360:
  2213  025A                     	line	23
  2214                           	
  2215                           l1755:	
  2216  025A                     ;tempo.c: 22:         {;tempo.c: 23:            min= ++min % 60;
  2217                           	movlw	03Ch
  2218  025A  303C               	movwf	(___awmod@divisor)
  2219  025B  00F2               	movlw	0
  2220  025C  3000               	movwf	((___awmod@divisor))+1
  2221  025D  00F3               	movlw	low(01h)
  2222  025E  3001               	movwf	(??_tempo+0)+0
  2223  025F  00A0               	movf	(??_tempo+0)+0,w
  2224  0260  0820               	addwf	(_min),f
  2225  0261  07BC               	movf	((_min)),w
  2226  0262  083C               	movwf	(??_tempo+1)+0
  2227  0263  00A1               	clrf	(??_tempo+1)+0+1
  2228  0264  01A2               	movf	0+(??_tempo+1)+0,w
  2229  0265  0821               	movwf	(___awmod@dividend)
  2230  0266  00F4               	movf	1+(??_tempo+1)+0,w
  2231  0267  0822               	movwf	(___awmod@dividend+1)
  2232  0268  00F5               	fcall	___awmod
  2233  0269  120A  118A  2318  120A  118A  	movf	(0+(?___awmod)),w
  2234  026E  0872               	bcf	status, 5	;RP0=0, select bank0
  2235  026F  1283               	bcf	status, 6	;RP1=0, select bank0
  2236  0270  1303               	movwf	(??_tempo+3)+0
  2237  0271  00A3               	movf	(??_tempo+3)+0,w
  2238  0272  0823               	movwf	(_min)
  2239  0273  00BC               	line	24
  2240                           	
  2241                           l1757:	
  2242  0274                     ;tempo.c: 24:            if( min == 0)
  2243                           	movf	((_min)),w
  2244  0274  083C               	btfss	status,2
  2245  0275  1D03               	goto	u1371
  2246  0276  2A78               	goto	u1370
  2247  0277  2A79               u1371:
  2248  0278                     	goto	l221
  2249  0278  2AA4               u1370:
  2250  0279                     	line	26
  2251                           	
  2252                           l1759:	
  2253  0279                     ;tempo.c: 25:           {;tempo.c: 26:               hor = ++hor %24;
  2254                           	movlw	018h
  2255  0279  3018               	movwf	(___awmod@divisor)
  2256  027A  00F2               	movlw	0
  2257  027B  3000               	movwf	((___awmod@divisor))+1
  2258  027C  00F3               	movlw	low(01h)
  2259  027D  3001               	movwf	(??_tempo+0)+0
  2260  027E  00A0               	movf	(??_tempo+0)+0,w
  2261  027F  0820               	addwf	(_hor),f
  2262  0280  07BD               	movf	((_hor)),w
  2263  0281  083D               	movwf	(??_tempo+1)+0
  2264  0282  00A1               	clrf	(??_tempo+1)+0+1
  2265  0283  01A2               	movf	0+(??_tempo+1)+0,w
  2266  0284  0821               	movwf	(___awmod@dividend)
  2267  0285  00F4               	movf	1+(??_tempo+1)+0,w
  2268  0286  0822               	movwf	(___awmod@dividend+1)
  2269  0287  00F5               	fcall	___awmod
  2270  0288  120A  118A  2318  120A  118A  	movf	(0+(?___awmod)),w
  2271  028D  0872               	bcf	status, 5	;RP0=0, select bank0
  2272  028E  1283               	bcf	status, 6	;RP1=0, select bank0
  2273  028F  1303               	movwf	(??_tempo+3)+0
  2274  0290  00A3               	movf	(??_tempo+3)+0,w
  2275  0291  0823               	movwf	(_hor)
  2276  0292  00BD               	line	27
  2277                           	
  2278                           l1761:	
  2279  0293                     ;tempo.c: 27:               if(hor == 0)
  2280                           	movf	((_hor)),w
  2281  0293  083D               	btfss	status,2
  2282  0294  1D03               	goto	u1381
  2283  0295  2A97               	goto	u1380
  2284  0296  2A98               u1381:
  2285  0297                     	goto	l221
  2286  0297  2AA4               u1380:
  2287  0298                     	line	29
  2288                           	
  2289                           l1763:	
  2290  0298                     ;tempo.c: 28:               {;tempo.c: 29:                   dia = ++dia;
  2291                           	movlw	low(01h)
  2292  0298  3001               	movwf	(??_tempo+0)+0
  2293  0299  00A0               	movf	(??_tempo+0)+0,w
  2294  029A  0820               	addwf	(_dia),f
  2295  029B  07BA               	movf	((_dia)),w
  2296  029C  083A               	movwf	(??_tempo+1)+0
  2297  029D  00A1               	movf	(??_tempo+1)+0,w
  2298  029E  0821               	movwf	(_dia)
  2299  029F  00BA               	goto	l221
  2300  02A0  2AA4               	line	30
  2301                           ;tempo.c: 30:               }
  2302                           	
  2303                           l220:	
  2304  02A1                     	goto	l221
  2305  02A1  2AA4               	line	31
  2306                           ;tempo.c: 31:           }
  2307                           	
  2308                           l219:	
  2309  02A2                     	goto	l221
  2310  02A2  2AA4               	line	32
  2311                           ;tempo.c: 32:         }
  2312                           	
  2313                           l218:	
  2314  02A3                     	goto	l221
  2315  02A3  2AA4               	line	33
  2316                           ;tempo.c: 33:     }
  2317                           	
  2318                           l217:	
  2319  02A4                     	line	34
  2320                           	
  2321                           l221:	
  2322  02A4                     	return
  2323  02A4  0008               	opt stack 0
  2324                           GLOBAL	__end_of_tempo
  2325                           	__end_of_tempo:
  2326  02A5                     	signat	_tempo,89
  2327                           	global	_T0_status
  2328                           
  2329 ;; *************** function _T0_status *****************
  2330 ;; Defined at:
  2331 ;;		line 59 in file "timers.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;		None
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;		None
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  2    2[COMMON] unsigned int 
  2338 ;; Registers used:
  2339 ;;		wreg
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2345 ;;      Params:         2       0       0       0       0
  2346 ;;      Locals:         0       0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0
  2348 ;;      Totals:         2       0       0       0       0
  2349 ;;Total ram usage:        2 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:    2
  2352 ;; This function calls:
  2353 ;;		Nothing
  2354 ;; This function is called by:
  2355 ;;		_tempo
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2359                           	file	"timers.c"
  2360                           	line	59
  2361                           global __ptext2
  2362                           __ptext2:	;psect for function _T0_status
  2363  04E0                     psect	text2
  2364                           	file	"timers.c"
  2365                           	line	59
  2366                           	global	__size_of_T0_status
  2367                           	__size_of_T0_status	equ	__end_of_T0_status-_T0_status
  2368  0008                     	
  2369                           _T0_status:	
  2370  04E0                     ;incstack = 0
  2371                           	opt	stack 4
  2372                           ; Regs used in _T0_status: [wreg]
  2373                           	line	61
  2374                           	
  2375                           l1413:	
  2376  04E0                     ;timers.c: 61:     return( T0count );
  2377                           	bcf	status, 5	;RP0=0, select bank0
  2378  04E0  1283               	bcf	status, 6	;RP1=0, select bank0
  2379  04E1  1303               	movf	(_T0count+1),w
  2380  04E2  0839               	movwf	(?_T0_status+1)
  2381  04E3  00F3               	movf	(_T0count),w
  2382  04E4  0838               	movwf	(?_T0_status)
  2383  04E5  00F2               	goto	l81
  2384  04E6  2CE7               	
  2385                           l1415:	
  2386  04E7                     	line	62
  2387                           	
  2388                           l81:	
  2389  04E7                     	return
  2390  04E7  0008               	opt stack 0
  2391                           GLOBAL	__end_of_T0_status
  2392                           	__end_of_T0_status:
  2393  04E8                     	signat	_T0_status,90
  2394                           	global	_T0_start
  2395                           
  2396 ;; *************** function _T0_start *****************
  2397 ;; Defined at:
  2398 ;;		line 42 in file "timers.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;  c               2    2[COMMON] unsigned int 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;		None
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  1    wreg      void 
  2405 ;; Registers used:
  2406 ;;		wreg
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2412 ;;      Params:         2       0       0       0       0
  2413 ;;      Locals:         0       0       0       0       0
  2414 ;;      Temps:          0       0       0       0       0
  2415 ;;      Totals:         2       0       0       0       0
  2416 ;;Total ram usage:        2 bytes
  2417 ;; Hardware stack levels used:    1
  2418 ;; Hardware stack levels required when called:    2
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		_main
  2423 ;;		_tempo
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2427                           	line	42
  2428                           global __ptext3
  2429                           __ptext3:	;psect for function _T0_start
  2430  04D6                     psect	text3
  2431                           	file	"timers.c"
  2432                           	line	42
  2433                           	global	__size_of_T0_start
  2434                           	__size_of_T0_start	equ	__end_of_T0_start-_T0_start
  2435  000A                     	
  2436                           _T0_start:	
  2437  04D6                     ;incstack = 0
  2438                           	opt	stack 4
  2439                           ; Regs used in _T0_start: [wreg]
  2440                           	line	44
  2441                           	
  2442                           l1409:	
  2443  04D6                     ;timers.c: 42: void T0_start( unsigned int c );timers.c: 43: {;timers.c: 44:     TMR0 = 
                                 (256-250);
  2444                           	movlw	low(06h)
  2445  04D6  3006               	bcf	status, 5	;RP0=0, select bank0
  2446  04D7  1283               	bcf	status, 6	;RP1=0, select bank0
  2447  04D8  1303               	movwf	(1)	;volatile
  2448  04D9  0081               	line	45
  2449                           ;timers.c: 45:     T0count = c;
  2450                           	movf	(T0_start@c+1),w
  2451  04DA  0873               	movwf	(_T0count+1)
  2452  04DB  00B9               	movf	(T0_start@c),w
  2453  04DC  0872               	movwf	(_T0count)
  2454  04DD  00B8               	line	46
  2455                           	
  2456                           l1411:	
  2457  04DE                     ;timers.c: 46:     INTCONbits.T0IE = 1;
  2458                           	bsf	(11),5	;volatile
  2459  04DE  168B               	line	47
  2460                           	
  2461                           l72:	
  2462  04DF                     	return
  2463  04DF  0008               	opt stack 0
  2464                           GLOBAL	__end_of_T0_start
  2465                           	__end_of_T0_start:
  2466  04E0                     	signat	_T0_start,4217
  2467                           	global	_lcd_print
  2468                           
  2469 ;; *************** function _lcd_print *****************
  2470 ;; Defined at:
  2471 ;;		line 156 in file "lcd.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  lin             1    wreg     unsigned char 
  2474 ;;  col             1    8[COMMON] unsigned char 
  2475 ;;  str             1    9[COMMON] PTR const unsigned char 
  2476 ;;		 -> STR_1(13), 
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;  lin             1    2[BANK0 ] unsigned char 
  2479 ;;  pos             1    1[BANK0 ] unsigned char 
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  1    wreg      void 
  2482 ;; Registers used:
  2483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2489 ;;      Params:         2       0       0       0       0
  2490 ;;      Locals:         0       2       0       0       0
  2491 ;;      Temps:          0       1       0       0       0
  2492 ;;      Totals:         2       3       0       0       0
  2493 ;;Total ram usage:        5 bytes
  2494 ;; Hardware stack levels used:    1
  2495 ;; Hardware stack levels required when called:    4
  2496 ;; This function calls:
  2497 ;;		_lcd_dataReg
  2498 ;;		_lcd_lincol
  2499 ;; This function is called by:
  2500 ;;		_main
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2504                           	file	"lcd.c"
  2505                           	line	156
  2506                           global __ptext4
  2507                           __ptext4:	;psect for function _lcd_print
  2508  03BA                     psect	text4
  2509                           	file	"lcd.c"
  2510                           	line	156
  2511                           	global	__size_of_lcd_print
  2512                           	__size_of_lcd_print	equ	__end_of_lcd_print-_lcd_print
  2513  0037                     	
  2514                           _lcd_print:	
  2515  03BA                     ;incstack = 0
  2516                           	opt	stack 3
  2517                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2518                           ;lcd_print@lin stored from wreg
  2519                           	bcf	status, 5	;RP0=0, select bank0
  2520  03BA  1283               	bcf	status, 6	;RP1=0, select bank0
  2521  03BB  1303               	movwf	(lcd_print@lin)
  2522  03BC  00A2               	line	158
  2523                           	
  2524                           l1737:	
  2525  03BD                     ;lcd.c: 156: void lcd_print( unsigned char lin, unsigned char col, const char * str );lc
                                 d.c: 157: {;lcd.c: 158:     char pos = col;
  2526                           	movf	(lcd_print@col),w
  2527  03BD  0878               	movwf	(??_lcd_print+0)+0
  2528  03BE  00A0               	movf	(??_lcd_print+0)+0,w
  2529  03BF  0820               	movwf	(lcd_print@pos)
  2530  03C0  00A1               	line	159
  2531                           	
  2532                           l1739:	
  2533  03C1                     ;lcd.c: 159:     lcd_lincol( lin, col );
  2534                           	movf	(lcd_print@col),w
  2535  03C1  0878               	movwf	(??_lcd_print+0)+0
  2536  03C2  00A0               	movf	(??_lcd_print+0)+0,w
  2537  03C3  0820               	movwf	(lcd_lincol@col)
  2538  03C4  00F5               	movf	(lcd_print@lin),w
  2539  03C5  0822               	fcall	_lcd_lincol
  2540  03C6  120A  118A  2491  120A  118A  	line	161
  2541                           ;lcd.c: 161:     while( *str )
  2542                           	goto	l1747
  2543  03CB  2BE3               	
  2544                           l183:	
  2545  03CC                     	line	163
  2546                           	
  2547                           l1741:	
  2548  03CC                     ;lcd.c: 162:     {;lcd.c: 163:         lcd_dataReg( *str );
  2549                           	movf	(lcd_print@str),w
  2550  03CC  0879               	movwf	fsr0
  2551  03CD  0084               	fcall	stringdir
  2552  03CE  120A  118A  247E  120A  118A  	fcall	_lcd_dataReg
  2553  03D3  120A  118A  23F1  120A  118A  	line	164
  2554                           	
  2555                           l1743:	
  2556  03D8                     ;lcd.c: 164:         ++str;
  2557                           	movlw	low(01h)
  2558  03D8  3001               	bcf	status, 5	;RP0=0, select bank0
  2559  03D9  1283               	bcf	status, 6	;RP1=0, select bank0
  2560  03DA  1303               	movwf	(??_lcd_print+0)+0
  2561  03DB  00A0               	movf	(??_lcd_print+0)+0,w
  2562  03DC  0820               	addwf	(lcd_print@str),f
  2563  03DD  07F9               	line	165
  2564                           	
  2565                           l1745:	
  2566  03DE                     ;lcd.c: 165:         ++pos;
  2567                           	movlw	low(01h)
  2568  03DE  3001               	movwf	(??_lcd_print+0)+0
  2569  03DF  00A0               	movf	(??_lcd_print+0)+0,w
  2570  03E0  0820               	addwf	(lcd_print@pos),f
  2571  03E1  07A1               	goto	l1747
  2572  03E2  2BE3               	line	166
  2573                           ;lcd.c: 166:     }
  2574                           	
  2575                           l182:	
  2576  03E3                     	line	161
  2577                           	
  2578                           l1747:	
  2579  03E3                     ;lcd.c: 161:     while( *str )
  2580                           	movf	(lcd_print@str),w
  2581  03E3  0879               	movwf	fsr0
  2582  03E4  0084               	fcall	stringdir
  2583  03E5  120A  118A  247E  120A  118A  	xorlw	0
  2584  03EA  3A00               	skipz
  2585  03EB  1D03               	goto	u1341
  2586  03EC  2BEE               	goto	u1340
  2587  03ED  2BEF               u1341:
  2588  03EE                     	goto	l1741
  2589  03EE  2BCC               u1340:
  2590  03EF                     	goto	l185
  2591  03EF  2BF0               	
  2592                           l184:	
  2593  03F0                     	line	167
  2594                           	
  2595                           l185:	
  2596  03F0                     	return
  2597  03F0  0008               	opt stack 0
  2598                           GLOBAL	__end_of_lcd_print
  2599                           	__end_of_lcd_print:
  2600  03F1                     	signat	_lcd_print,12409
  2601                           	global	_lcd_num
  2602                           
  2603 ;; *************** function _lcd_num *****************
  2604 ;; Defined at:
  2605 ;;		line 178 in file "lcd.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;  lin             1    wreg     unsigned char 
  2608 ;;  col             1    4[BANK0 ] unsigned char 
  2609 ;;  num             2    5[BANK0 ] int 
  2610 ;;  tam             1    7[BANK0 ] unsigned char 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  lin             1   11[BANK0 ] unsigned char 
  2613 ;;  div             2   14[BANK0 ] int 
  2614 ;;  sinal           1   13[BANK0 ] unsigned char 
  2615 ;;  size            1   12[BANK0 ] unsigned char 
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  1    wreg      void 
  2618 ;; Registers used:
  2619 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2625 ;;      Params:         0       4       0       0       0
  2626 ;;      Locals:         0       5       0       0       0
  2627 ;;      Temps:          0       3       0       0       0
  2628 ;;      Totals:         0      12       0       0       0
  2629 ;;Total ram usage:       12 bytes
  2630 ;; Hardware stack levels used:    1
  2631 ;; Hardware stack levels required when called:    4
  2632 ;; This function calls:
  2633 ;;		___awdiv
  2634 ;;		___awmod
  2635 ;;		_lcd_dataReg
  2636 ;;		_lcd_lincol
  2637 ;; This function is called by:
  2638 ;;		_main
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  2642                           	line	178
  2643                           global __ptext5
  2644                           __ptext5:	;psect for function _lcd_num
  2645  0021                     psect	text5
  2646                           	file	"lcd.c"
  2647                           	line	178
  2648                           	global	__size_of_lcd_num
  2649                           	__size_of_lcd_num	equ	__end_of_lcd_num-_lcd_num
  2650  00EE                     	
  2651                           _lcd_num:	
  2652  0021                     ;incstack = 0
  2653                           	opt	stack 3
  2654                           ; Regs used in _lcd_num: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2655                           ;lcd_num@lin stored from wreg
  2656                           	bcf	status, 5	;RP0=0, select bank0
  2657  0021  1283               	bcf	status, 6	;RP1=0, select bank0
  2658  0022  1303               	movwf	(lcd_num@lin)
  2659  0023  00AB               	line	185
  2660                           	
  2661                           l1765:	
  2662  0024                     ;lcd.c: 178: void lcd_num( unsigned char lin, unsigned char col,;lcd.c: 179:            
                                          int num, unsigned char tam );lcd.c: 180: {;lcd.c: 181:     int div;;lcd.c: 182:
                                      unsigned char size;;lcd.c: 183:     char sinal;;lcd.c: 185:     sinal = num < 0;
  2663                           	btfsc	(lcd_num@num+1),7
  2664  0024  1BA6               	goto	u1391
  2665  0025  2827               	goto	u1390
  2666  0026  2829               u1391:
  2667  0027                     	movlw	1
  2668  0027  3001               	goto	u1400
  2669  0028  282A               u1390:
  2670  0029                     	movlw	0
  2671  0029  3000               u1400:
  2672  002A                     	movwf	(??_lcd_num+0)+0
  2673  002A  00A8               	movf	(??_lcd_num+0)+0,w
  2674  002B  0828               	movwf	(lcd_num@sinal)
  2675  002C  00AD               	line	186
  2676                           	
  2677                           l1767:	
  2678  002D                     ;lcd.c: 186:     if( sinal )
  2679                           	movf	((lcd_num@sinal)),w
  2680  002D  082D               	btfsc	status,2
  2681  002E  1903               	goto	u1411
  2682  002F  2831               	goto	u1410
  2683  0030  2832               u1411:
  2684  0031                     	goto	l1771
  2685  0031  2838               u1410:
  2686  0032                     	line	187
  2687                           	
  2688                           l1769:	
  2689  0032                     ;lcd.c: 187:         num = (~num) + 1;
  2690                           	comf	(lcd_num@num),f
  2691  0032  09A5               	comf	(lcd_num@num+1),f
  2692  0033  09A6               	incf	(lcd_num@num),f
  2693  0034  0AA5               	skipnz
  2694  0035  1903               	incf	(lcd_num@num+1),f
  2695  0036  0AA6               	goto	l1771
  2696  0037  2838               	
  2697                           l188:	
  2698  0038                     	line	189
  2699                           	
  2700                           l1771:	
  2701  0038                     ;lcd.c: 189:     lcd_lincol(lin, col);
  2702                           	movf	(lcd_num@col),w
  2703  0038  0824               	movwf	(??_lcd_num+0)+0
  2704  0039  00A8               	movf	(??_lcd_num+0)+0,w
  2705  003A  0828               	movwf	(lcd_lincol@col)
  2706  003B  00F5               	movf	(lcd_num@lin),w
  2707  003C  082B               	fcall	_lcd_lincol
  2708  003D  120A  118A  2491  120A  118A  	line	191
  2709                           	
  2710                           l1773:	
  2711  0042                     ;lcd.c: 191:     div=10000;
  2712                           	movlw	010h
  2713  0042  3010               	bcf	status, 5	;RP0=0, select bank0
  2714  0043  1283               	bcf	status, 6	;RP1=0, select bank0
  2715  0044  1303               	movwf	(lcd_num@div)
  2716  0045  00AE               	movlw	027h
  2717  0046  3027               	movwf	((lcd_num@div))+1
  2718  0047  00AF               	line	192
  2719                           	
  2720                           l1775:	
  2721  0048                     ;lcd.c: 192:     size = 5;
  2722                           	movlw	low(05h)
  2723  0048  3005               	movwf	(??_lcd_num+0)+0
  2724  0049  00A8               	movf	(??_lcd_num+0)+0,w
  2725  004A  0828               	movwf	(lcd_num@size)
  2726  004B  00AC               	line	193
  2727                           ;lcd.c: 193:     while( div >= 1 )
  2728                           	goto	l1783
  2729  004C  287C               	
  2730                           l190:	
  2731  004D                     	line	195
  2732                           	
  2733                           l1777:	
  2734  004D                     ;lcd.c: 194:     {;lcd.c: 195:         if( num/div == 0 )
  2735                           	bcf	status, 5	;RP0=0, select bank0
  2736  004D  1283               	bcf	status, 6	;RP1=0, select bank0
  2737  004E  1303               	movf	(lcd_num@div+1),w
  2738  004F  082F               	movwf	(___awdiv@divisor+1)
  2739  0050  00F3               	movf	(lcd_num@div),w
  2740  0051  082E               	movwf	(___awdiv@divisor)
  2741  0052  00F2               	movf	(lcd_num@num+1),w
  2742  0053  0826               	movwf	(___awdiv@dividend+1)
  2743  0054  00F5               	movf	(lcd_num@num),w
  2744  0055  0825               	movwf	(___awdiv@dividend)
  2745  0056  00F4               	fcall	___awdiv
  2746  0057  120A  118A  22A5  120A  118A  	movf	((0+(?___awdiv))),w
  2747  005C  0872               iorwf	((1+(?___awdiv))),w
  2748  005D  0473               	btfss	status,2
  2749  005E  1D03               	goto	u1421
  2750  005F  2861               	goto	u1420
  2751  0060  2862               u1421:
  2752  0061                     	goto	l1789
  2753  0061  2896               u1420:
  2754  0062                     	line	196
  2755                           	
  2756                           l1779:	
  2757  0062                     ;lcd.c: 196:             --size;
  2758                           	movlw	01h
  2759  0062  3001               	bcf	status, 5	;RP0=0, select bank0
  2760  0063  1283               	bcf	status, 6	;RP1=0, select bank0
  2761  0064  1303               	subwf	(lcd_num@size),f
  2762  0065  02AC               	goto	l1781
  2763  0066  2868               	line	197
  2764                           ;lcd.c: 197:         else
  2765                           	
  2766                           l191:	
  2767  0067                     	line	198
  2768                           ;lcd.c: 198:             break;
  2769                           	goto	l1789
  2770  0067  2896               	
  2771                           l192:	
  2772  0068                     	line	199
  2773                           	
  2774                           l1781:	
  2775  0068                     ;lcd.c: 199:         div/=10;
  2776                           	movlw	0Ah
  2777  0068  300A               	movwf	(___awdiv@divisor)
  2778  0069  00F2               	movlw	0
  2779  006A  3000               	movwf	((___awdiv@divisor))+1
  2780  006B  00F3               	movf	(lcd_num@div+1),w
  2781  006C  082F               	movwf	(___awdiv@dividend+1)
  2782  006D  00F5               	movf	(lcd_num@div),w
  2783  006E  082E               	movwf	(___awdiv@dividend)
  2784  006F  00F4               	fcall	___awdiv
  2785  0070  120A  118A  22A5  120A  118A  	movf	(1+(?___awdiv)),w
  2786  0075  0873               	bcf	status, 5	;RP0=0, select bank0
  2787  0076  1283               	bcf	status, 6	;RP1=0, select bank0
  2788  0077  1303               	movwf	(lcd_num@div+1)
  2789  0078  00AF               	movf	(0+(?___awdiv)),w
  2790  0079  0872               	movwf	(lcd_num@div)
  2791  007A  00AE               	goto	l1783
  2792  007B  287C               	line	200
  2793                           ;lcd.c: 200:     }
  2794                           	
  2795                           l189:	
  2796  007C                     	line	193
  2797                           	
  2798                           l1783:	
  2799  007C                     ;lcd.c: 193:     while( div >= 1 )
  2800                           	movf	(lcd_num@div+1),w
  2801  007C  082F               	xorlw	80h
  2802  007D  3A80               	movwf	btemp+1
  2803  007E  00FF               	movlw	(0)^80h
  2804  007F  3080               	subwf	btemp+1,w
  2805  0080  027F               	skipz
  2806  0081  1D03               	goto	u1435
  2807  0082  2885               	movlw	01h
  2808  0083  3001               	subwf	(lcd_num@div),w
  2809  0084  022E               u1435:
  2810  0085                     
  2811                           	skipnc
  2812  0085  1803               	goto	u1431
  2813  0086  2888               	goto	u1430
  2814  0087  2889               u1431:
  2815  0088                     	goto	l1777
  2816  0088  284D               u1430:
  2817  0089                     	goto	l1789
  2818  0089  2896               	
  2819                           l193:	
  2820  008A                     	line	202
  2821                           ;lcd.c: 202:     while( tam > (size+sinal) && tam > 1 )
  2822                           	goto	l1789
  2823  008A  2896               	
  2824                           l195:	
  2825  008B                     	line	204
  2826                           	
  2827                           l1785:	
  2828  008B                     ;lcd.c: 203:     {;lcd.c: 204:         lcd_dataReg(' ');
  2829                           	movlw	low(020h)
  2830  008B  3020               	fcall	_lcd_dataReg
  2831  008C  120A  118A  23F1  120A  118A  	line	205
  2832                           	
  2833                           l1787:	
  2834  0091                     ;lcd.c: 205:         --tam;
  2835                           	movlw	01h
  2836  0091  3001               	bcf	status, 5	;RP0=0, select bank0
  2837  0092  1283               	bcf	status, 6	;RP1=0, select bank0
  2838  0093  1303               	subwf	(lcd_num@tam),f
  2839  0094  02A7               	goto	l1789
  2840  0095  2896               	line	206
  2841                           ;lcd.c: 206:     }
  2842                           	
  2843                           l194:	
  2844  0096                     	line	202
  2845                           	
  2846                           l1789:	
  2847  0096                     ;lcd.c: 202:     while( tam > (size+sinal) && tam > 1 )
  2848                           	bcf	status, 5	;RP0=0, select bank0
  2849  0096  1283               	bcf	status, 6	;RP1=0, select bank0
  2850  0097  1303               	movf	(lcd_num@size),w
  2851  0098  082C               	addwf	(lcd_num@sinal),w
  2852  0099  072D               	movwf	(??_lcd_num+0)+0
  2853  009A  00A8               	clrf	(??_lcd_num+0)+0+1
  2854  009B  01A9               	rlf	1+(??_lcd_num+0)+0,f
  2855  009C  0DA9               	
  2856                           	movf	1+(??_lcd_num+0)+0,w
  2857  009D  0829               	xorlw	80h
  2858  009E  3A80               	movwf	(??_lcd_num+2)+0
  2859  009F  00AA               	movlw	80h
  2860  00A0  3080               	subwf	(??_lcd_num+2)+0,w
  2861  00A1  022A               	skipz
  2862  00A2  1D03               	goto	u1445
  2863  00A3  28A6               	movf	(lcd_num@tam),w
  2864  00A4  0827               	subwf	0+(??_lcd_num+0)+0,w
  2865  00A5  0228               u1445:
  2866  00A6                     
  2867                           	skipnc
  2868  00A6  1803               	goto	u1441
  2869  00A7  28A9               	goto	u1440
  2870  00A8  28AA               u1441:
  2871  00A9                     	goto	l1793
  2872  00A9  28B4               u1440:
  2873  00AA                     	
  2874                           l1791:	
  2875  00AA                     	movlw	low(02h)
  2876  00AA  3002               	bcf	status, 5	;RP0=0, select bank0
  2877  00AB  1283               	bcf	status, 6	;RP1=0, select bank0
  2878  00AC  1303               	subwf	(lcd_num@tam),w
  2879  00AD  0227               	skipnc
  2880  00AE  1803               	goto	u1451
  2881  00AF  28B1               	goto	u1450
  2882  00B0  28B2               u1451:
  2883  00B1                     	goto	l1785
  2884  00B1  288B               u1450:
  2885  00B2                     	goto	l1793
  2886  00B2  28B4               	
  2887                           l197:	
  2888  00B3                     	goto	l1793
  2889  00B3  28B4               	
  2890                           l198:	
  2891  00B4                     	line	208
  2892                           	
  2893                           l1793:	
  2894  00B4                     ;lcd.c: 208:     if( sinal )
  2895                           	bcf	status, 5	;RP0=0, select bank0
  2896  00B4  1283               	bcf	status, 6	;RP1=0, select bank0
  2897  00B5  1303               	movf	((lcd_num@sinal)),w
  2898  00B6  082D               	btfsc	status,2
  2899  00B7  1903               	goto	u1461
  2900  00B8  28BA               	goto	u1460
  2901  00B9  28BB               u1461:
  2902  00BA                     	goto	l200
  2903  00BA  28C2               u1460:
  2904  00BB                     	line	209
  2905                           	
  2906                           l1795:	
  2907  00BB                     ;lcd.c: 209:         lcd_dataReg('-');
  2908                           	movlw	low(02Dh)
  2909  00BB  302D               	fcall	_lcd_dataReg
  2910  00BC  120A  118A  23F1  120A  118A  	goto	l200
  2911  00C1  28C2               	
  2912                           l199:	
  2913  00C2                     	line	211
  2914                           ;lcd.c: 211:     do
  2915                           	
  2916                           l200:	
  2917  00C2                     	line	213
  2918                           ;lcd.c: 212:     {;lcd.c: 213:         lcd_dataReg( (unsigned char)(num / div) + '0' );

  2919                           	bcf	status, 5	;RP0=0, select bank0
  2920  00C2  1283               	bcf	status, 6	;RP1=0, select bank0
  2921  00C3  1303               	movf	(lcd_num@div+1),w
  2922  00C4  082F               	movwf	(___awdiv@divisor+1)
  2923  00C5  00F3               	movf	(lcd_num@div),w
  2924  00C6  082E               	movwf	(___awdiv@divisor)
  2925  00C7  00F2               	movf	(lcd_num@num+1),w
  2926  00C8  0826               	movwf	(___awdiv@dividend+1)
  2927  00C9  00F5               	movf	(lcd_num@num),w
  2928  00CA  0825               	movwf	(___awdiv@dividend)
  2929  00CB  00F4               	fcall	___awdiv
  2930  00CC  120A  118A  22A5  120A  118A  	movf	(0+(?___awdiv)),w
  2931  00D1  0872               	addlw	030h
  2932  00D2  3E30               	fcall	_lcd_dataReg
  2933  00D3  120A  118A  23F1  120A  118A  	line	214
  2934                           ;lcd.c: 214:         num = num % div;
  2935                           	bcf	status, 5	;RP0=0, select bank0
  2936  00D8  1283               	bcf	status, 6	;RP1=0, select bank0
  2937  00D9  1303               	movf	(lcd_num@div+1),w
  2938  00DA  082F               	movwf	(___awmod@divisor+1)
  2939  00DB  00F3               	movf	(lcd_num@div),w
  2940  00DC  082E               	movwf	(___awmod@divisor)
  2941  00DD  00F2               	movf	(lcd_num@num+1),w
  2942  00DE  0826               	movwf	(___awmod@dividend+1)
  2943  00DF  00F5               	movf	(lcd_num@num),w
  2944  00E0  0825               	movwf	(___awmod@dividend)
  2945  00E1  00F4               	fcall	___awmod
  2946  00E2  120A  118A  2318  120A  118A  	movf	(1+(?___awmod)),w
  2947  00E7  0873               	bcf	status, 5	;RP0=0, select bank0
  2948  00E8  1283               	bcf	status, 6	;RP1=0, select bank0
  2949  00E9  1303               	movwf	(lcd_num@num+1)
  2950  00EA  00A6               	movf	(0+(?___awmod)),w
  2951  00EB  0872               	movwf	(lcd_num@num)
  2952  00EC  00A5               	line	215
  2953                           ;lcd.c: 215:         div/=10;
  2954                           	movlw	0Ah
  2955  00ED  300A               	movwf	(___awdiv@divisor)
  2956  00EE  00F2               	movlw	0
  2957  00EF  3000               	movwf	((___awdiv@divisor))+1
  2958  00F0  00F3               	movf	(lcd_num@div+1),w
  2959  00F1  082F               	movwf	(___awdiv@dividend+1)
  2960  00F2  00F5               	movf	(lcd_num@div),w
  2961  00F3  082E               	movwf	(___awdiv@dividend)
  2962  00F4  00F4               	fcall	___awdiv
  2963  00F5  120A  118A  22A5  120A  118A  	movf	(1+(?___awdiv)),w
  2964  00FA  0873               	bcf	status, 5	;RP0=0, select bank0
  2965  00FB  1283               	bcf	status, 6	;RP1=0, select bank0
  2966  00FC  1303               	movwf	(lcd_num@div+1)
  2967  00FD  00AF               	movf	(0+(?___awdiv)),w
  2968  00FE  0872               	movwf	(lcd_num@div)
  2969  00FF  00AE               	line	216
  2970                           	
  2971                           l1797:	
  2972  0100                     ;lcd.c: 216:     }
  2973                           	movf	(lcd_num@div+1),w
  2974  0100  082F               	xorlw	80h
  2975  0101  3A80               	movwf	btemp+1
  2976  0102  00FF               	movlw	(0)^80h
  2977  0103  3080               	subwf	btemp+1,w
  2978  0104  027F               	skipz
  2979  0105  1D03               	goto	u1475
  2980  0106  2909               	movlw	01h
  2981  0107  3001               	subwf	(lcd_num@div),w
  2982  0108  022E               u1475:
  2983  0109                     
  2984                           	skipnc
  2985  0109  1803               	goto	u1471
  2986  010A  290C               	goto	u1470
  2987  010B  290D               u1471:
  2988  010C                     	goto	l200
  2989  010C  28C2               u1470:
  2990  010D                     	goto	l202
  2991  010D  290E               	
  2992                           l201:	
  2993  010E                     	line	218
  2994                           	
  2995                           l202:	
  2996  010E                     	return
  2997  010E  0008               	opt stack 0
  2998                           GLOBAL	__end_of_lcd_num
  2999                           	__end_of_lcd_num:
  3000  010F                     	signat	_lcd_num,16505
  3001                           	global	_lcd_lincol
  3002                           
  3003 ;; *************** function _lcd_lincol *****************
  3004 ;; Defined at:
  3005 ;;		line 111 in file "lcd.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;  lin             1    wreg     unsigned char 
  3008 ;;  col             1    5[COMMON] unsigned char 
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;  lin             1    7[COMMON] unsigned char 
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg, status,2, status,0, pclath, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3020 ;;      Params:         1       0       0       0       0
  3021 ;;      Locals:         1       0       0       0       0
  3022 ;;      Temps:          1       0       0       0       0
  3023 ;;      Totals:         3       0       0       0       0
  3024 ;;Total ram usage:        3 bytes
  3025 ;; Hardware stack levels used:    1
  3026 ;; Hardware stack levels required when called:    3
  3027 ;; This function calls:
  3028 ;;		_lcd_instReg
  3029 ;; This function is called by:
  3030 ;;		_lcd_print
  3031 ;;		_lcd_num
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3035                           	line	111
  3036                           global __ptext6
  3037                           __ptext6:	;psect for function _lcd_lincol
  3038  0491                     psect	text6
  3039                           	file	"lcd.c"
  3040                           	line	111
  3041                           	global	__size_of_lcd_lincol
  3042                           	__size_of_lcd_lincol	equ	__end_of_lcd_lincol-_lcd_lincol
  3043  0013                     	
  3044                           _lcd_lincol:	
  3045  0491                     ;incstack = 0
  3046                           	opt	stack 3
  3047                           ; Regs used in _lcd_lincol: [wreg+status,2+status,0+pclath+cstack]
  3048                           ;lcd_lincol@lin stored from wreg
  3049                           	movwf	(lcd_lincol@lin)
  3050  0491  00F7               	line	113
  3051                           	
  3052                           l1441:	
  3053  0492                     ;lcd.c: 111: void lcd_lincol( unsigned char lin, unsigned char col);lcd.c: 112: {;lcd.c:
                                  113:     lcd_instReg( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  3054                           	movf	(lcd_lincol@lin),w
  3055  0492  0877               	movwf	(??_lcd_lincol+0)+0
  3056  0493  00F6               	movlw	06h
  3057  0494  3006               u835:
  3058  0495                     	clrc
  3059  0495  1003               	rlf	(??_lcd_lincol+0)+0,f
  3060  0496  0DF6               	addlw	-1
  3061  0497  3EFF               	skipz
  3062  0498  1D03               	goto	u835
  3063  0499  2C95               	movf	(lcd_lincol@col),w
  3064  049A  0875               	addwf	0+(??_lcd_lincol+0)+0,w
  3065  049B  0776               	andlw	07Fh
  3066  049C  397F               	addlw	080h
  3067  049D  3E80               	fcall	_lcd_instReg
  3068  049E  120A  118A  219A  120A  118A  	line	114
  3069                           	
  3070                           l173:	
  3071  04A3                     	return
  3072  04A3  0008               	opt stack 0
  3073                           GLOBAL	__end_of_lcd_lincol
  3074                           	__end_of_lcd_lincol:
  3075  04A4                     	signat	_lcd_lincol,8313
  3076                           	global	_lcd_dataReg
  3077                           
  3078 ;; *************** function _lcd_dataReg *****************
  3079 ;; Defined at:
  3080 ;;		line 93 in file "lcd.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;  d               1    wreg     unsigned char 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;  d               1    4[COMMON] unsigned char 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, status,2, status,0
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3094 ;;      Params:         0       0       0       0       0
  3095 ;;      Locals:         1       0       0       0       0
  3096 ;;      Temps:          2       0       0       0       0
  3097 ;;      Totals:         3       0       0       0       0
  3098 ;;Total ram usage:        3 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    2
  3101 ;; This function calls:
  3102 ;;		Nothing
  3103 ;; This function is called by:
  3104 ;;		_lcd_print
  3105 ;;		_lcd_num
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3109                           	line	93
  3110                           global __ptext7
  3111                           __ptext7:	;psect for function _lcd_dataReg
  3112  03F1                     psect	text7
  3113                           	file	"lcd.c"
  3114                           	line	93
  3115                           	global	__size_of_lcd_dataReg
  3116                           	__size_of_lcd_dataReg	equ	__end_of_lcd_dataReg-_lcd_dataReg
  3117  0036                     	
  3118                           _lcd_dataReg:	
  3119  03F1                     ;incstack = 0
  3120                           	opt	stack 4
  3121                           ; Regs used in _lcd_dataReg: [wreg+status,2+status,0]
  3122                           ;lcd_dataReg@d stored from wreg
  3123                           	movwf	(lcd_dataReg@d)
  3124  03F1  00F4               	line	95
  3125                           	
  3126                           l1423:	
  3127  03F2                     ;lcd.c: 93: void lcd_dataReg( unsigned char d );lcd.c: 94: {;lcd.c: 95:     PORTDbits.RD
                                 2 = 1;
  3128                           	bcf	status, 5	;RP0=0, select bank0
  3129  03F2  1283               	bcf	status, 6	;RP1=0, select bank0
  3130  03F3  1303               	bsf	(8),2	;volatile
  3131  03F4  1508               	line	96
  3132                           	
  3133                           l1425:	
  3134  03F5                     ;lcd.c: 96:     PORTD = ((PORTD & 0x0F)|(d >> 4<<4));
  3135                           	movf	(lcd_dataReg@d),w
  3136  03F5  0874               	movwf	(??_lcd_dataReg+0)+0
  3137  03F6  00F2               	movlw	04h
  3138  03F7  3004               u805:
  3139  03F8                     	clrc
  3140  03F8  1003               	rrf	(??_lcd_dataReg+0)+0,f
  3141  03F9  0CF2               	addlw	-1
  3142  03FA  3EFF               	skipz
  3143  03FB  1D03               	goto	u805
  3144  03FC  2BF8               	movf	0+(??_lcd_dataReg+0)+0,w
  3145  03FD  0872               	movwf	(??_lcd_dataReg+1)+0
  3146  03FE  00F3               	movlw	04h
  3147  03FF  3004               u815:
  3148  0400                     	clrc
  3149  0400  1003               	rlf	(??_lcd_dataReg+1)+0,f
  3150  0401  0DF3               	addlw	-1
  3151  0402  3EFF               	skipz
  3152  0403  1D03               	goto	u815
  3153  0404  2C00               	movf	(8),w	;volatile
  3154  0405  0808               	andlw	0Fh
  3155  0406  390F               	iorwf	0+(??_lcd_dataReg+1)+0,w
  3156  0407  0473               	movwf	(8)	;volatile
  3157  0408  0088               	line	97
  3158                           	
  3159                           l1427:	
  3160  0409                     ;lcd.c: 97:     PORTDbits.RD3 = 0;
  3161                           	bcf	(8),3	;volatile
  3162  0409  1188               	line	98
  3163                           	
  3164                           l1429:	
  3165  040A                     ;lcd.c: 98:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3166                           	opt asmopt_push
  3167                           opt asmopt_off
  3168                           	movlw	13
  3169  040A  300D               movwf	((??_lcd_dataReg+0)+0),f
  3170  040B  00F2               	u1497:
  3171  040C                     decfsz	(??_lcd_dataReg+0)+0,f
  3172  040C  0BF2               	goto	u1497
  3173  040D  2C0C               opt asmopt_pop
  3174                           
  3175                           	line	99
  3176                           	
  3177                           l1431:	
  3178  040E                     ;lcd.c: 99:     PORTDbits.RD3 = 1;
  3179                           	bcf	status, 5	;RP0=0, select bank0
  3180  040E  1283               	bcf	status, 6	;RP1=0, select bank0
  3181  040F  1303               	bsf	(8),3	;volatile
  3182  0410  1588               	line	101
  3183                           	
  3184                           l1433:	
  3185  0411                     ;lcd.c: 101:     PORTDbits.RD2 = 1;
  3186                           	bsf	(8),2	;volatile
  3187  0411  1508               	line	102
  3188                           	
  3189                           l1435:	
  3190  0412                     ;lcd.c: 102:     PORTD = ((PORTD & 0x0F)|(d<<4));
  3191                           	movf	(lcd_dataReg@d),w
  3192  0412  0874               	movwf	(??_lcd_dataReg+0)+0
  3193  0413  00F2               	movlw	04h
  3194  0414  3004               u825:
  3195  0415                     	clrc
  3196  0415  1003               	rlf	(??_lcd_dataReg+0)+0,f
  3197  0416  0DF2               	addlw	-1
  3198  0417  3EFF               	skipz
  3199  0418  1D03               	goto	u825
  3200  0419  2C15               	movf	(8),w	;volatile
  3201  041A  0808               	andlw	0Fh
  3202  041B  390F               	iorwf	0+(??_lcd_dataReg+0)+0,w
  3203  041C  0472               	movwf	(8)	;volatile
  3204  041D  0088               	line	103
  3205                           	
  3206                           l1437:	
  3207  041E                     ;lcd.c: 103:     PORTDbits.RD3 = 0;
  3208                           	bcf	(8),3	;volatile
  3209  041E  1188               	line	104
  3210                           ;lcd.c: 104:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3211                           	opt asmopt_push
  3212                           opt asmopt_off
  3213                           	movlw	13
  3214  041F  300D               movwf	((??_lcd_dataReg+0)+0),f
  3215  0420  00F2               	u1507:
  3216  0421                     decfsz	(??_lcd_dataReg+0)+0,f
  3217  0421  0BF2               	goto	u1507
  3218  0422  2C21               opt asmopt_pop
  3219                           
  3220                           	line	105
  3221                           	
  3222                           l1439:	
  3223  0423                     ;lcd.c: 105:     PORTDbits.RD3 = 1;
  3224                           	bcf	status, 5	;RP0=0, select bank0
  3225  0423  1283               	bcf	status, 6	;RP1=0, select bank0
  3226  0424  1303               	bsf	(8),3	;volatile
  3227  0425  1588               	line	106
  3228                           	
  3229                           l170:	
  3230  0426                     	return
  3231  0426  0008               	opt stack 0
  3232                           GLOBAL	__end_of_lcd_dataReg
  3233                           	__end_of_lcd_dataReg:
  3234  0427                     	signat	_lcd_dataReg,4217
  3235                           	global	___awmod
  3236                           
  3237 ;; *************** function ___awmod *****************
  3238 ;; Defined at:
  3239 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;  divisor         2    2[COMMON] int 
  3242 ;;  dividend        2    4[COMMON] int 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;  sign            1    8[COMMON] unsigned char 
  3245 ;;  counter         1    7[COMMON] unsigned char 
  3246 ;; Return value:  Size  Location     Type
  3247 ;;                  2    2[COMMON] int 
  3248 ;; Registers used:
  3249 ;;		wreg, status,2, status,0
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3255 ;;      Params:         4       0       0       0       0
  3256 ;;      Locals:         2       0       0       0       0
  3257 ;;      Temps:          1       0       0       0       0
  3258 ;;      Totals:         7       0       0       0       0
  3259 ;;Total ram usage:        7 bytes
  3260 ;; Hardware stack levels used:    1
  3261 ;; Hardware stack levels required when called:    2
  3262 ;; This function calls:
  3263 ;;		Nothing
  3264 ;; This function is called by:
  3265 ;;		_lcd_num
  3266 ;;		_tempo
  3267 ;; This function uses a non-reentrant model
  3268 ;;
  3269                           psect	text8,local,class=CODE,delta=2,merge=1,group=1
  3270                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  3271                           	line	5
  3272                           global __ptext8
  3273                           __ptext8:	;psect for function ___awmod
  3274  0318                     psect	text8
  3275                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  3276                           	line	5
  3277                           	global	__size_of___awmod
  3278                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  3279  0063                     	
  3280                           ___awmod:	
  3281  0318                     ;incstack = 0
  3282                           	opt	stack 4
  3283                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3284                           	line	12
  3285                           	
  3286                           l1487:	
  3287  0318                     	clrf	(___awmod@sign)
  3288  0318  01F8               	line	13
  3289                           	
  3290                           l1489:	
  3291  0319                     	btfss	(___awmod@dividend+1),7
  3292  0319  1FF5               	goto	u941
  3293  031A  2B1C               	goto	u940
  3294  031B  2B1D               u941:
  3295  031C                     	goto	l1495
  3296  031C  2B25               u940:
  3297  031D                     	line	14
  3298                           	
  3299                           l1491:	
  3300  031D                     	comf	(___awmod@dividend),f
  3301  031D  09F4               	comf	(___awmod@dividend+1),f
  3302  031E  09F5               	incf	(___awmod@dividend),f
  3303  031F  0AF4               	skipnz
  3304  0320  1903               	incf	(___awmod@dividend+1),f
  3305  0321  0AF5               	line	15
  3306                           	
  3307                           l1493:	
  3308  0322                     	clrf	(___awmod@sign)
  3309  0322  01F8               	incf	(___awmod@sign),f
  3310  0323  0AF8               	goto	l1495
  3311  0324  2B25               	line	16
  3312                           	
  3313                           l510:	
  3314  0325                     	line	17
  3315                           	
  3316                           l1495:	
  3317  0325                     	btfss	(___awmod@divisor+1),7
  3318  0325  1FF3               	goto	u951
  3319  0326  2B28               	goto	u950
  3320  0327  2B29               u951:
  3321  0328                     	goto	l1499
  3322  0328  2B2F               u950:
  3323  0329                     	line	18
  3324                           	
  3325                           l1497:	
  3326  0329                     	comf	(___awmod@divisor),f
  3327  0329  09F2               	comf	(___awmod@divisor+1),f
  3328  032A  09F3               	incf	(___awmod@divisor),f
  3329  032B  0AF2               	skipnz
  3330  032C  1903               	incf	(___awmod@divisor+1),f
  3331  032D  0AF3               	goto	l1499
  3332  032E  2B2F               	
  3333                           l511:	
  3334  032F                     	line	19
  3335                           	
  3336                           l1499:	
  3337  032F                     	movf	((___awmod@divisor)),w
  3338  032F  0872               iorwf	((___awmod@divisor+1)),w
  3339  0330  0473               	btfsc	status,2
  3340  0331  1903               	goto	u961
  3341  0332  2B34               	goto	u960
  3342  0333  2B35               u961:
  3343  0334                     	goto	l1517
  3344  0334  2B6A               u960:
  3345  0335                     	line	20
  3346                           	
  3347                           l1501:	
  3348  0335                     	clrf	(___awmod@counter)
  3349  0335  01F7               	incf	(___awmod@counter),f
  3350  0336  0AF7               	line	21
  3351                           	goto	l1507
  3352  0337  2B44               	
  3353                           l514:	
  3354  0338                     	line	22
  3355                           	
  3356                           l1503:	
  3357  0338                     	movlw	01h
  3358  0338  3001               	
  3359                           u975:
  3360  0339                     	clrc
  3361  0339  1003               	rlf	(___awmod@divisor),f
  3362  033A  0DF2               	rlf	(___awmod@divisor+1),f
  3363  033B  0DF3               	addlw	-1
  3364  033C  3EFF               	skipz
  3365  033D  1D03               	goto	u975
  3366  033E  2B39               	line	23
  3367                           	
  3368                           l1505:	
  3369  033F                     	movlw	low(01h)
  3370  033F  3001               	movwf	(??___awmod+0)+0
  3371  0340  00F6               	movf	(??___awmod+0)+0,w
  3372  0341  0876               	addwf	(___awmod@counter),f
  3373  0342  07F7               	goto	l1507
  3374  0343  2B44               	line	24
  3375                           	
  3376                           l513:	
  3377  0344                     	line	21
  3378                           	
  3379                           l1507:	
  3380  0344                     	btfss	(___awmod@divisor+1),(15)&7
  3381  0344  1FF3               	goto	u981
  3382  0345  2B47               	goto	u980
  3383  0346  2B48               u981:
  3384  0347                     	goto	l1503
  3385  0347  2B38               u980:
  3386  0348                     	goto	l1509
  3387  0348  2B4A               	
  3388                           l515:	
  3389  0349                     	goto	l1509
  3390  0349  2B4A               	line	25
  3391                           	
  3392                           l516:	
  3393  034A                     	line	26
  3394                           	
  3395                           l1509:	
  3396  034A                     	movf	(___awmod@divisor+1),w
  3397  034A  0873               	subwf	(___awmod@dividend+1),w
  3398  034B  0275               	skipz
  3399  034C  1D03               	goto	u995
  3400  034D  2B50               	movf	(___awmod@divisor),w
  3401  034E  0872               	subwf	(___awmod@dividend),w
  3402  034F  0274               u995:
  3403  0350                     	skipc
  3404  0350  1C03               	goto	u991
  3405  0351  2B53               	goto	u990
  3406  0352  2B54               u991:
  3407  0353                     	goto	l1513
  3408  0353  2B5B               u990:
  3409  0354                     	line	27
  3410                           	
  3411                           l1511:	
  3412  0354                     	movf	(___awmod@divisor),w
  3413  0354  0872               	subwf	(___awmod@dividend),f
  3414  0355  02F4               	movf	(___awmod@divisor+1),w
  3415  0356  0873               	skipc
  3416  0357  1C03               	decf	(___awmod@dividend+1),f
  3417  0358  03F5               	subwf	(___awmod@dividend+1),f
  3418  0359  02F5               	goto	l1513
  3419  035A  2B5B               	
  3420                           l517:	
  3421  035B                     	line	28
  3422                           	
  3423                           l1513:	
  3424  035B                     	movlw	01h
  3425  035B  3001               	
  3426                           u1005:
  3427  035C                     	clrc
  3428  035C  1003               	rrf	(___awmod@divisor+1),f
  3429  035D  0CF3               	rrf	(___awmod@divisor),f
  3430  035E  0CF2               	addlw	-1
  3431  035F  3EFF               	skipz
  3432  0360  1D03               	goto	u1005
  3433  0361  2B5C               	line	29
  3434                           	
  3435                           l1515:	
  3436  0362                     	movlw	01h
  3437  0362  3001               	subwf	(___awmod@counter),f
  3438  0363  02F7               	btfss	status,2
  3439  0364  1D03               	goto	u1011
  3440  0365  2B67               	goto	u1010
  3441  0366  2B68               u1011:
  3442  0367                     	goto	l1509
  3443  0367  2B4A               u1010:
  3444  0368                     	goto	l1517
  3445  0368  2B6A               	
  3446                           l518:	
  3447  0369                     	goto	l1517
  3448  0369  2B6A               	line	30
  3449                           	
  3450                           l512:	
  3451  036A                     	line	31
  3452                           	
  3453                           l1517:	
  3454  036A                     	movf	((___awmod@sign)),w
  3455  036A  0878               	btfsc	status,2
  3456  036B  1903               	goto	u1021
  3457  036C  2B6E               	goto	u1020
  3458  036D  2B6F               u1021:
  3459  036E                     	goto	l1521
  3460  036E  2B75               u1020:
  3461  036F                     	line	32
  3462                           	
  3463                           l1519:	
  3464  036F                     	comf	(___awmod@dividend),f
  3465  036F  09F4               	comf	(___awmod@dividend+1),f
  3466  0370  09F5               	incf	(___awmod@dividend),f
  3467  0371  0AF4               	skipnz
  3468  0372  1903               	incf	(___awmod@dividend+1),f
  3469  0373  0AF5               	goto	l1521
  3470  0374  2B75               	
  3471                           l519:	
  3472  0375                     	line	33
  3473                           	
  3474                           l1521:	
  3475  0375                     	movf	(___awmod@dividend+1),w
  3476  0375  0875               	movwf	(?___awmod+1)
  3477  0376  00F3               	movf	(___awmod@dividend),w
  3478  0377  0874               	movwf	(?___awmod)
  3479  0378  00F2               	goto	l520
  3480  0379  2B7A               	
  3481                           l1523:	
  3482  037A                     	line	34
  3483                           	
  3484                           l520:	
  3485  037A                     	return
  3486  037A  0008               	opt stack 0
  3487                           GLOBAL	__end_of___awmod
  3488                           	__end_of___awmod:
  3489  037B                     	signat	___awmod,8314
  3490                           	global	___awdiv
  3491                           
  3492 ;; *************** function ___awdiv *****************
  3493 ;; Defined at:
  3494 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;  divisor         2    2[COMMON] int 
  3497 ;;  dividend        2    4[COMMON] int 
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;  quotient        2    2[BANK0 ] int 
  3500 ;;  sign            1    1[BANK0 ] unsigned char 
  3501 ;;  counter         1    0[BANK0 ] unsigned char 
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  2    2[COMMON] int 
  3504 ;; Registers used:
  3505 ;;		wreg, status,2, status,0
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3511 ;;      Params:         4       0       0       0       0
  3512 ;;      Locals:         0       4       0       0       0
  3513 ;;      Temps:          1       0       0       0       0
  3514 ;;      Totals:         5       4       0       0       0
  3515 ;;Total ram usage:        9 bytes
  3516 ;; Hardware stack levels used:    1
  3517 ;; Hardware stack levels required when called:    2
  3518 ;; This function calls:
  3519 ;;		Nothing
  3520 ;; This function is called by:
  3521 ;;		_lcd_num
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           psect	text9,local,class=CODE,delta=2,merge=1,group=1
  3525                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  3526                           	line	5
  3527                           global __ptext9
  3528                           __ptext9:	;psect for function ___awdiv
  3529  02A5                     psect	text9
  3530                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  3531                           	line	5
  3532                           	global	__size_of___awdiv
  3533                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  3534  0073                     	
  3535                           ___awdiv:	
  3536  02A5                     ;incstack = 0
  3537                           	opt	stack 4
  3538                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3539                           	line	13
  3540                           	
  3541                           l1693:	
  3542  02A5                     	bcf	status, 5	;RP0=0, select bank0
  3543  02A5  1283               	bcf	status, 6	;RP1=0, select bank0
  3544  02A6  1303               	clrf	(___awdiv@sign)
  3545  02A7  01A1               	line	14
  3546                           	
  3547                           l1695:	
  3548  02A8                     	btfss	(___awdiv@divisor+1),7
  3549  02A8  1FF3               	goto	u1241
  3550  02A9  2AAB               	goto	u1240
  3551  02AA  2AAC               u1241:
  3552  02AB                     	goto	l1701
  3553  02AB  2AB4               u1240:
  3554  02AC                     	line	15
  3555                           	
  3556                           l1697:	
  3557  02AC                     	comf	(___awdiv@divisor),f
  3558  02AC  09F2               	comf	(___awdiv@divisor+1),f
  3559  02AD  09F3               	incf	(___awdiv@divisor),f
  3560  02AE  0AF2               	skipnz
  3561  02AF  1903               	incf	(___awdiv@divisor+1),f
  3562  02B0  0AF3               	line	16
  3563                           	
  3564                           l1699:	
  3565  02B1                     	clrf	(___awdiv@sign)
  3566  02B1  01A1               	incf	(___awdiv@sign),f
  3567  02B2  0AA1               	goto	l1701
  3568  02B3  2AB4               	line	17
  3569                           	
  3570                           l497:	
  3571  02B4                     	line	18
  3572                           	
  3573                           l1701:	
  3574  02B4                     	btfss	(___awdiv@dividend+1),7
  3575  02B4  1FF5               	goto	u1251
  3576  02B5  2AB7               	goto	u1250
  3577  02B6  2AB8               u1251:
  3578  02B7                     	goto	l1707
  3579  02B7  2AC2               u1250:
  3580  02B8                     	line	19
  3581                           	
  3582                           l1703:	
  3583  02B8                     	comf	(___awdiv@dividend),f
  3584  02B8  09F4               	comf	(___awdiv@dividend+1),f
  3585  02B9  09F5               	incf	(___awdiv@dividend),f
  3586  02BA  0AF4               	skipnz
  3587  02BB  1903               	incf	(___awdiv@dividend+1),f
  3588  02BC  0AF5               	line	20
  3589                           	
  3590                           l1705:	
  3591  02BD                     	movlw	low(01h)
  3592  02BD  3001               	movwf	(??___awdiv+0)+0
  3593  02BE  00F6               	movf	(??___awdiv+0)+0,w
  3594  02BF  0876               	xorwf	(___awdiv@sign),f
  3595  02C0  06A1               	goto	l1707
  3596  02C1  2AC2               	line	21
  3597                           	
  3598                           l498:	
  3599  02C2                     	line	22
  3600                           	
  3601                           l1707:	
  3602  02C2                     	clrf	(___awdiv@quotient)
  3603  02C2  01A2               	clrf	(___awdiv@quotient+1)
  3604  02C3  01A3               	line	23
  3605                           	
  3606                           l1709:	
  3607  02C4                     	movf	((___awdiv@divisor)),w
  3608  02C4  0872               iorwf	((___awdiv@divisor+1)),w
  3609  02C5  0473               	btfsc	status,2
  3610  02C6  1903               	goto	u1261
  3611  02C7  2AC9               	goto	u1260
  3612  02C8  2ACA               u1261:
  3613  02C9                     	goto	l1729
  3614  02C9  2B07               u1260:
  3615  02CA                     	line	24
  3616                           	
  3617                           l1711:	
  3618  02CA                     	clrf	(___awdiv@counter)
  3619  02CA  01A0               	incf	(___awdiv@counter),f
  3620  02CB  0AA0               	line	25
  3621                           	goto	l1717
  3622  02CC  2AD9               	
  3623                           l501:	
  3624  02CD                     	line	26
  3625                           	
  3626                           l1713:	
  3627  02CD                     	movlw	01h
  3628  02CD  3001               	
  3629                           u1275:
  3630  02CE                     	clrc
  3631  02CE  1003               	rlf	(___awdiv@divisor),f
  3632  02CF  0DF2               	rlf	(___awdiv@divisor+1),f
  3633  02D0  0DF3               	addlw	-1
  3634  02D1  3EFF               	skipz
  3635  02D2  1D03               	goto	u1275
  3636  02D3  2ACE               	line	27
  3637                           	
  3638                           l1715:	
  3639  02D4                     	movlw	low(01h)
  3640  02D4  3001               	movwf	(??___awdiv+0)+0
  3641  02D5  00F6               	movf	(??___awdiv+0)+0,w
  3642  02D6  0876               	addwf	(___awdiv@counter),f
  3643  02D7  07A0               	goto	l1717
  3644  02D8  2AD9               	line	28
  3645                           	
  3646                           l500:	
  3647  02D9                     	line	25
  3648                           	
  3649                           l1717:	
  3650  02D9                     	btfss	(___awdiv@divisor+1),(15)&7
  3651  02D9  1FF3               	goto	u1281
  3652  02DA  2ADC               	goto	u1280
  3653  02DB  2ADD               u1281:
  3654  02DC                     	goto	l1713
  3655  02DC  2ACD               u1280:
  3656  02DD                     	goto	l1719
  3657  02DD  2ADF               	
  3658                           l502:	
  3659  02DE                     	goto	l1719
  3660  02DE  2ADF               	line	29
  3661                           	
  3662                           l503:	
  3663  02DF                     	line	30
  3664                           	
  3665                           l1719:	
  3666  02DF                     	movlw	01h
  3667  02DF  3001               	
  3668                           u1295:
  3669  02E0                     	clrc
  3670  02E0  1003               	rlf	(___awdiv@quotient),f
  3671  02E1  0DA2               	rlf	(___awdiv@quotient+1),f
  3672  02E2  0DA3               	addlw	-1
  3673  02E3  3EFF               	skipz
  3674  02E4  1D03               	goto	u1295
  3675  02E5  2AE0               	line	31
  3676                           	movf	(___awdiv@divisor+1),w
  3677  02E6  0873               	subwf	(___awdiv@dividend+1),w
  3678  02E7  0275               	skipz
  3679  02E8  1D03               	goto	u1305
  3680  02E9  2AEC               	movf	(___awdiv@divisor),w
  3681  02EA  0872               	subwf	(___awdiv@dividend),w
  3682  02EB  0274               u1305:
  3683  02EC                     	skipc
  3684  02EC  1C03               	goto	u1301
  3685  02ED  2AEF               	goto	u1300
  3686  02EE  2AF0               u1301:
  3687  02EF                     	goto	l1725
  3688  02EF  2AF8               u1300:
  3689  02F0                     	line	32
  3690                           	
  3691                           l1721:	
  3692  02F0                     	movf	(___awdiv@divisor),w
  3693  02F0  0872               	subwf	(___awdiv@dividend),f
  3694  02F1  02F4               	movf	(___awdiv@divisor+1),w
  3695  02F2  0873               	skipc
  3696  02F3  1C03               	decf	(___awdiv@dividend+1),f
  3697  02F4  03F5               	subwf	(___awdiv@dividend+1),f
  3698  02F5  02F5               	line	33
  3699                           	
  3700                           l1723:	
  3701  02F6                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  3702  02F6  1422               	goto	l1725
  3703  02F7  2AF8               	line	34
  3704                           	
  3705                           l504:	
  3706  02F8                     	line	35
  3707                           	
  3708                           l1725:	
  3709  02F8                     	movlw	01h
  3710  02F8  3001               	
  3711                           u1315:
  3712  02F9                     	clrc
  3713  02F9  1003               	rrf	(___awdiv@divisor+1),f
  3714  02FA  0CF3               	rrf	(___awdiv@divisor),f
  3715  02FB  0CF2               	addlw	-1
  3716  02FC  3EFF               	skipz
  3717  02FD  1D03               	goto	u1315
  3718  02FE  2AF9               	line	36
  3719                           	
  3720                           l1727:	
  3721  02FF                     	movlw	01h
  3722  02FF  3001               	subwf	(___awdiv@counter),f
  3723  0300  02A0               	btfss	status,2
  3724  0301  1D03               	goto	u1321
  3725  0302  2B04               	goto	u1320
  3726  0303  2B05               u1321:
  3727  0304                     	goto	l1719
  3728  0304  2ADF               u1320:
  3729  0305                     	goto	l1729
  3730  0305  2B07               	
  3731                           l505:	
  3732  0306                     	goto	l1729
  3733  0306  2B07               	line	37
  3734                           	
  3735                           l499:	
  3736  0307                     	line	38
  3737                           	
  3738                           l1729:	
  3739  0307                     	movf	((___awdiv@sign)),w
  3740  0307  0821               	btfsc	status,2
  3741  0308  1903               	goto	u1331
  3742  0309  2B0B               	goto	u1330
  3743  030A  2B0C               u1331:
  3744  030B                     	goto	l1733
  3745  030B  2B12               u1330:
  3746  030C                     	line	39
  3747                           	
  3748                           l1731:	
  3749  030C                     	comf	(___awdiv@quotient),f
  3750  030C  09A2               	comf	(___awdiv@quotient+1),f
  3751  030D  09A3               	incf	(___awdiv@quotient),f
  3752  030E  0AA2               	skipnz
  3753  030F  1903               	incf	(___awdiv@quotient+1),f
  3754  0310  0AA3               	goto	l1733
  3755  0311  2B12               	
  3756                           l506:	
  3757  0312                     	line	40
  3758                           	
  3759                           l1733:	
  3760  0312                     	movf	(___awdiv@quotient+1),w
  3761  0312  0823               	movwf	(?___awdiv+1)
  3762  0313  00F3               	movf	(___awdiv@quotient),w
  3763  0314  0822               	movwf	(?___awdiv)
  3764  0315  00F2               	goto	l507
  3765  0316  2B17               	
  3766                           l1735:	
  3767  0317                     	line	41
  3768                           	
  3769                           l507:	
  3770  0317                     	return
  3771  0317  0008               	opt stack 0
  3772                           GLOBAL	__end_of___awdiv
  3773                           	__end_of___awdiv:
  3774  0318                     	signat	___awdiv,8314
  3775                           	global	_lcd_init
  3776                           
  3777 ;; *************** function _lcd_init *****************
  3778 ;; Defined at:
  3779 ;;		line 121 in file "lcd.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;		None
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;		None
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      void 
  3786 ;; Registers used:
  3787 ;;		wreg, status,2, status,0, pclath, cstack
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3793 ;;      Params:         0       0       0       0       0
  3794 ;;      Locals:         0       0       0       0       0
  3795 ;;      Temps:          0       0       0       0       0
  3796 ;;      Totals:         0       0       0       0       0
  3797 ;;Total ram usage:        0 bytes
  3798 ;; Hardware stack levels used:    1
  3799 ;; Hardware stack levels required when called:    3
  3800 ;; This function calls:
  3801 ;;		_delay
  3802 ;;		_lcd_instReg
  3803 ;; This function is called by:
  3804 ;;		_main
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3808                           	file	"lcd.c"
  3809                           	line	121
  3810                           global __ptext10
  3811                           __ptext10:	;psect for function _lcd_init
  3812  037B                     psect	text10
  3813                           	file	"lcd.c"
  3814                           	line	121
  3815                           	global	__size_of_lcd_init
  3816                           	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  3817  003F                     	
  3818                           _lcd_init:	
  3819  037B                     ;incstack = 0
  3820                           	opt	stack 4
  3821                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3822                           	line	123
  3823                           	
  3824                           l1525:	
  3825  037B                     ;lcd.c: 123:     delay(100);
  3826                           	movlw	064h
  3827  037B  3064               	movwf	(delay@t)
  3828  037C  00F2               	movlw	0
  3829  037D  3000               	movwf	((delay@t))+1
  3830  037E  00F3               	fcall	_delay
  3831  037F  120A  118A  2453  120A  118A  	line	124
  3832                           	
  3833                           l1527:	
  3834  0384                     ;lcd.c: 124:     TRISDbits.TRISD2 = 0;
  3835                           	bsf	status, 5	;RP0=1, select bank1
  3836  0384  1683               	bcf	status, 6	;RP1=0, select bank1
  3837  0385  1303               	bcf	(136)^080h,2	;volatile
  3838  0386  1108               	line	125
  3839                           	
  3840                           l1529:	
  3841  0387                     ;lcd.c: 125:     TRISDbits.TRISD3 = 0;
  3842                           	bcf	(136)^080h,3	;volatile
  3843  0387  1188               	line	126
  3844                           	
  3845                           l1531:	
  3846  0388                     ;lcd.c: 126:     TRISDbits.TRISD4 = 0;
  3847                           	bcf	(136)^080h,4	;volatile
  3848  0388  1208               	line	127
  3849                           	
  3850                           l1533:	
  3851  0389                     ;lcd.c: 127:     TRISDbits.TRISD5 = 0;
  3852                           	bcf	(136)^080h,5	;volatile
  3853  0389  1288               	line	128
  3854                           	
  3855                           l1535:	
  3856  038A                     ;lcd.c: 128:     TRISDbits.TRISD6 = 0;
  3857                           	bcf	(136)^080h,6	;volatile
  3858  038A  1308               	line	129
  3859                           	
  3860                           l1537:	
  3861  038B                     ;lcd.c: 129:     TRISDbits.TRISD7 = 0;
  3862                           	bcf	(136)^080h,7	;volatile
  3863  038B  1388               	line	131
  3864                           ;lcd.c: 131:     delay(100);
  3865                           	movlw	064h
  3866  038C  3064               	movwf	(delay@t)
  3867  038D  00F2               	movlw	0
  3868  038E  3000               	movwf	((delay@t))+1
  3869  038F  00F3               	fcall	_delay
  3870  0390  120A  118A  2453  120A  118A  	line	132
  3871                           	
  3872                           l1539:	
  3873  0395                     ;lcd.c: 132:     PORTDbits.RD3 = 1;
  3874                           	bcf	status, 5	;RP0=0, select bank0
  3875  0395  1283               	bcf	status, 6	;RP1=0, select bank0
  3876  0396  1303               	bsf	(8),3	;volatile
  3877  0397  1588               	line	133
  3878                           ;lcd.c: 133:     lcd_instReg( 0x20|0x00|0x08 );
  3879                           	movlw	low(028h)
  3880  0398  3028               	fcall	_lcd_instReg
  3881  0399  120A  118A  219A  120A  118A  	line	134
  3882                           ;lcd.c: 134:     lcd_instReg( 0x08|0x04|0x00|0x00 );
  3883                           	movlw	low(0Ch)
  3884  039E  300C               	fcall	_lcd_instReg
  3885  039F  120A  118A  219A  120A  118A  	line	135
  3886                           ;lcd.c: 135:     lcd_instReg( 0x01 );
  3887                           	movlw	low(01h)
  3888  03A4  3001               	fcall	_lcd_instReg
  3889  03A5  120A  118A  219A  120A  118A  	line	136
  3890                           ;lcd.c: 136:     lcd_instReg( 0x02 );
  3891                           	movlw	low(02h)
  3892  03AA  3002               	fcall	_lcd_instReg
  3893  03AB  120A  118A  219A  120A  118A  	line	137
  3894                           ;lcd.c: 137:     delay(100);
  3895                           	movlw	064h
  3896  03B0  3064               	movwf	(delay@t)
  3897  03B1  00F2               	movlw	0
  3898  03B2  3000               	movwf	((delay@t))+1
  3899  03B3  00F3               	fcall	_delay
  3900  03B4  120A  118A  2453  120A  118A  	line	138
  3901                           	
  3902                           l176:	
  3903  03B9                     	return
  3904  03B9  0008               	opt stack 0
  3905                           GLOBAL	__end_of_lcd_init
  3906                           	__end_of_lcd_init:
  3907  03BA                     	signat	_lcd_init,89
  3908                           	global	_lcd_instReg
  3909                           
  3910 ;; *************** function _lcd_instReg *****************
  3911 ;; Defined at:
  3912 ;;		line 58 in file "lcd.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;  i               1    wreg     unsigned char 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;  i               1    4[COMMON] unsigned char 
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  1    wreg      void 
  3919 ;; Registers used:
  3920 ;;		wreg, status,2, status,0
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3926 ;;      Params:         0       0       0       0       0
  3927 ;;      Locals:         1       0       0       0       0
  3928 ;;      Temps:          2       0       0       0       0
  3929 ;;      Totals:         3       0       0       0       0
  3930 ;;Total ram usage:        3 bytes
  3931 ;; Hardware stack levels used:    1
  3932 ;; Hardware stack levels required when called:    2
  3933 ;; This function calls:
  3934 ;;		Nothing
  3935 ;; This function is called by:
  3936 ;;		_lcd_lincol
  3937 ;;		_lcd_init
  3938 ;;		_lcd_clr
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3942                           	line	58
  3943                           global __ptext11
  3944                           __ptext11:	;psect for function _lcd_instReg
  3945  019A                     psect	text11
  3946                           	file	"lcd.c"
  3947                           	line	58
  3948                           	global	__size_of_lcd_instReg
  3949                           	__size_of_lcd_instReg	equ	__end_of_lcd_instReg-_lcd_instReg
  3950  008B                     	
  3951                           _lcd_instReg:	
  3952  019A                     ;incstack = 0
  3953                           	opt	stack 3
  3954                           ; Regs used in _lcd_instReg: [wreg+status,2+status,0]
  3955                           ;lcd_instReg@i stored from wreg
  3956                           	movwf	(lcd_instReg@i)
  3957  019A  00F4               	line	60
  3958                           	
  3959                           l1367:	
  3960  019B                     ;lcd.c: 58: void lcd_instReg( unsigned char i );lcd.c: 59: {;lcd.c: 60:     PORTDbits.RD
                                 2 = 0;
  3961                           	bcf	status, 5	;RP0=0, select bank0
  3962  019B  1283               	bcf	status, 6	;RP1=0, select bank0
  3963  019C  1303               	bcf	(8),2	;volatile
  3964  019D  1108               	line	61
  3965                           	
  3966                           l1369:	
  3967  019E                     ;lcd.c: 61:     PORTD = ((PORTD & 0x0F)|(i>>4<<4));
  3968                           	movf	(lcd_instReg@i),w
  3969  019E  0874               	movwf	(??_lcd_instReg+0)+0
  3970  019F  00F2               	movlw	04h
  3971  01A0  3004               u695:
  3972  01A1                     	clrc
  3973  01A1  1003               	rrf	(??_lcd_instReg+0)+0,f
  3974  01A2  0CF2               	addlw	-1
  3975  01A3  3EFF               	skipz
  3976  01A4  1D03               	goto	u695
  3977  01A5  29A1               	movf	0+(??_lcd_instReg+0)+0,w
  3978  01A6  0872               	movwf	(??_lcd_instReg+1)+0
  3979  01A7  00F3               	movlw	04h
  3980  01A8  3004               u705:
  3981  01A9                     	clrc
  3982  01A9  1003               	rlf	(??_lcd_instReg+1)+0,f
  3983  01AA  0DF3               	addlw	-1
  3984  01AB  3EFF               	skipz
  3985  01AC  1D03               	goto	u705
  3986  01AD  29A9               	movf	(8),w	;volatile
  3987  01AE  0808               	andlw	0Fh
  3988  01AF  390F               	iorwf	0+(??_lcd_instReg+1)+0,w
  3989  01B0  0473               	movwf	(8)	;volatile
  3990  01B1  0088               	line	63
  3991                           	
  3992                           l1371:	
  3993  01B2                     ;lcd.c: 63:     PORTDbits.RD3 = 0;
  3994                           	bcf	(8),3	;volatile
  3995  01B2  1188               	line	64
  3996                           ;lcd.c: 64:     if( i == 0x01 || i == 0x02 )
  3997                           		decf	((lcd_instReg@i)),w
  3998  01B3  0374               	btfsc	status,2
  3999  01B4  1903               	goto	u711
  4000  01B5  29B7               	goto	u710
  4001  01B6  29B8               u711:
  4002  01B7                     	goto	l1375
  4003  01B7  29BF               u710:
  4004  01B8                     	
  4005                           l1373:	
  4006  01B8                     		movlw	2
  4007  01B8  3002               	xorwf	((lcd_instReg@i)),w
  4008  01B9  0674               	btfss	status,2
  4009  01BA  1D03               	goto	u721
  4010  01BB  29BD               	goto	u720
  4011  01BC  29BE               u721:
  4012  01BD                     	goto	l1377
  4013  01BD  29C9               u720:
  4014  01BE                     	goto	l1375
  4015  01BE  29BF               	
  4016                           l160:	
  4017  01BF                     	line	65
  4018                           	
  4019                           l1375:	
  4020  01BF                     ;lcd.c: 65:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4021                           	opt asmopt_push
  4022                           opt asmopt_off
  4023                           movlw	3
  4024  01BF  3003               movwf	((??_lcd_instReg+0)+0+1),f
  4025  01C0  00F3               	movlw	151
  4026  01C1  3097               movwf	((??_lcd_instReg+0)+0),f
  4027  01C2  00F2               	u1517:
  4028  01C3                     decfsz	((??_lcd_instReg+0)+0),f
  4029  01C3  0BF2               	goto	u1517
  4030  01C4  29C3               	decfsz	((??_lcd_instReg+0)+0+1),f
  4031  01C5  0BF3               	goto	u1517
  4032  01C6  29C3               	nop2
  4033  01C7  29C8               opt asmopt_pop
  4034                           
  4035                           	goto	l1379
  4036  01C8  29CE               	line	66
  4037                           ;lcd.c: 66:     else
  4038                           	
  4039                           l158:	
  4040  01C9                     	line	67
  4041                           	
  4042                           l1377:	
  4043  01C9                     ;lcd.c: 67:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  4044                           	opt asmopt_push
  4045                           opt asmopt_off
  4046                           	movlw	13
  4047  01C9  300D               movwf	((??_lcd_instReg+0)+0),f
  4048  01CA  00F2               	u1527:
  4049  01CB                     decfsz	(??_lcd_instReg+0)+0,f
  4050  01CB  0BF2               	goto	u1527
  4051  01CC  29CB               opt asmopt_pop
  4052                           
  4053                           	goto	l1379
  4054  01CD  29CE               	
  4055                           l161:	
  4056  01CE                     	line	68
  4057                           	
  4058                           l1379:	
  4059  01CE                     ;lcd.c: 68:     PORTDbits.RD3 = 1;
  4060                           	bcf	status, 5	;RP0=0, select bank0
  4061  01CE  1283               	bcf	status, 6	;RP1=0, select bank0
  4062  01CF  1303               	bsf	(8),3	;volatile
  4063  01D0  1588               	line	71
  4064                           	
  4065                           l1381:	
  4066  01D1                     ;lcd.c: 71:     if( (i & 0xF0) == (0x20 | 0x00) )
  4067                           	movlw	low(0F0h)
  4068  01D1  30F0               	andwf	(lcd_instReg@i),w
  4069  01D2  0574               	movwf	(??_lcd_instReg+0)+0
  4070  01D3  00F2               		movlw	32
  4071  01D4  3020               	xorwf	((??_lcd_instReg+0)+0),w
  4072  01D5  0672               	btfss	status,2
  4073  01D6  1D03               	goto	u731
  4074  01D7  29D9               	goto	u730
  4075  01D8  29DA               u731:
  4076  01D9                     	goto	l1393
  4077  01D9  29F8               u730:
  4078  01DA                     	line	73
  4079                           	
  4080                           l1383:	
  4081  01DA                     ;lcd.c: 72:     {;lcd.c: 73:         PORTDbits.RD2 = 0;
  4082                           	bcf	(8),2	;volatile
  4083  01DA  1108               	line	74
  4084                           	
  4085                           l1385:	
  4086  01DB                     ;lcd.c: 74:         PORTD = ((PORTD & 0x0F)|(i>>4<<4));
  4087                           	movf	(lcd_instReg@i),w
  4088  01DB  0874               	movwf	(??_lcd_instReg+0)+0
  4089  01DC  00F2               	movlw	04h
  4090  01DD  3004               u745:
  4091  01DE                     	clrc
  4092  01DE  1003               	rrf	(??_lcd_instReg+0)+0,f
  4093  01DF  0CF2               	addlw	-1
  4094  01E0  3EFF               	skipz
  4095  01E1  1D03               	goto	u745
  4096  01E2  29DE               	movf	0+(??_lcd_instReg+0)+0,w
  4097  01E3  0872               	movwf	(??_lcd_instReg+1)+0
  4098  01E4  00F3               	movlw	04h
  4099  01E5  3004               u755:
  4100  01E6                     	clrc
  4101  01E6  1003               	rlf	(??_lcd_instReg+1)+0,f
  4102  01E7  0DF3               	addlw	-1
  4103  01E8  3EFF               	skipz
  4104  01E9  1D03               	goto	u755
  4105  01EA  29E6               	movf	(8),w	;volatile
  4106  01EB  0808               	andlw	0Fh
  4107  01EC  390F               	iorwf	0+(??_lcd_instReg+1)+0,w
  4108  01ED  0473               	movwf	(8)	;volatile
  4109  01EE  0088               	line	75
  4110                           	
  4111                           l1387:	
  4112  01EF                     ;lcd.c: 75:         PORTDbits.RD3 = 0;
  4113                           	bcf	(8),3	;volatile
  4114  01EF  1188               	line	76
  4115                           	
  4116                           l1389:	
  4117  01F0                     ;lcd.c: 76:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  4118                           	opt asmopt_push
  4119                           opt asmopt_off
  4120                           	movlw	13
  4121  01F0  300D               movwf	((??_lcd_instReg+0)+0),f
  4122  01F1  00F2               	u1537:
  4123  01F2                     decfsz	(??_lcd_instReg+0)+0,f
  4124  01F2  0BF2               	goto	u1537
  4125  01F3  29F2               opt asmopt_pop
  4126                           
  4127                           	line	77
  4128                           	
  4129                           l1391:	
  4130  01F4                     ;lcd.c: 77:         PORTDbits.RD3 = 1;
  4131                           	bcf	status, 5	;RP0=0, select bank0
  4132  01F4  1283               	bcf	status, 6	;RP1=0, select bank0
  4133  01F5  1303               	bsf	(8),3	;volatile
  4134  01F6  1588               	goto	l1393
  4135  01F7  29F8               	line	78
  4136                           ;lcd.c: 78:     }
  4137                           	
  4138                           l162:	
  4139  01F8                     	line	80
  4140                           	
  4141                           l1393:	
  4142  01F8                     ;lcd.c: 80:     PORTDbits.RD2 = 0;
  4143                           	bcf	(8),2	;volatile
  4144  01F8  1108               	line	81
  4145                           	
  4146                           l1395:	
  4147  01F9                     ;lcd.c: 81:     PORTD = ((PORTD & 0x0F)|(i<<4));
  4148                           	movf	(lcd_instReg@i),w
  4149  01F9  0874               	movwf	(??_lcd_instReg+0)+0
  4150  01FA  00F2               	movlw	04h
  4151  01FB  3004               u765:
  4152  01FC                     	clrc
  4153  01FC  1003               	rlf	(??_lcd_instReg+0)+0,f
  4154  01FD  0DF2               	addlw	-1
  4155  01FE  3EFF               	skipz
  4156  01FF  1D03               	goto	u765
  4157  0200  29FC               	movf	(8),w	;volatile
  4158  0201  0808               	andlw	0Fh
  4159  0202  390F               	iorwf	0+(??_lcd_instReg+0)+0,w
  4160  0203  0472               	movwf	(8)	;volatile
  4161  0204  0088               	line	82
  4162                           	
  4163                           l1397:	
  4164  0205                     ;lcd.c: 82:     PORTDbits.RD3 = 0;
  4165                           	bcf	(8),3	;volatile
  4166  0205  1188               	line	83
  4167                           	
  4168                           l1399:	
  4169  0206                     ;lcd.c: 83:     if( i == 0x01 || i == 0x02 )
  4170                           		decf	((lcd_instReg@i)),w
  4171  0206  0374               	btfsc	status,2
  4172  0207  1903               	goto	u771
  4173  0208  2A0A               	goto	u770
  4174  0209  2A0B               u771:
  4175  020A                     	goto	l1403
  4176  020A  2A12               u770:
  4177  020B                     	
  4178                           l1401:	
  4179  020B                     		movlw	2
  4180  020B  3002               	xorwf	((lcd_instReg@i)),w
  4181  020C  0674               	btfss	status,2
  4182  020D  1D03               	goto	u781
  4183  020E  2A10               	goto	u780
  4184  020F  2A11               u781:
  4185  0210                     	goto	l1405
  4186  0210  2A1C               u780:
  4187  0211                     	goto	l1403
  4188  0211  2A12               	
  4189                           l165:	
  4190  0212                     	line	84
  4191                           	
  4192                           l1403:	
  4193  0212                     ;lcd.c: 84:         _delay((unsigned long)((2)*(4000000/4000.0)));
  4194                           	opt asmopt_push
  4195                           opt asmopt_off
  4196                           movlw	3
  4197  0212  3003               movwf	((??_lcd_instReg+0)+0+1),f
  4198  0213  00F3               	movlw	151
  4199  0214  3097               movwf	((??_lcd_instReg+0)+0),f
  4200  0215  00F2               	u1547:
  4201  0216                     decfsz	((??_lcd_instReg+0)+0),f
  4202  0216  0BF2               	goto	u1547
  4203  0217  2A16               	decfsz	((??_lcd_instReg+0)+0+1),f
  4204  0218  0BF3               	goto	u1547
  4205  0219  2A16               	nop2
  4206  021A  2A1B               opt asmopt_pop
  4207                           
  4208                           	goto	l1407
  4209  021B  2A21               	line	85
  4210                           ;lcd.c: 85:     else
  4211                           	
  4212                           l163:	
  4213  021C                     	line	86
  4214                           	
  4215                           l1405:	
  4216  021C                     ;lcd.c: 86:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  4217                           	opt asmopt_push
  4218                           opt asmopt_off
  4219                           	movlw	13
  4220  021C  300D               movwf	((??_lcd_instReg+0)+0),f
  4221  021D  00F2               	u1557:
  4222  021E                     decfsz	(??_lcd_instReg+0)+0,f
  4223  021E  0BF2               	goto	u1557
  4224  021F  2A1E               opt asmopt_pop
  4225                           
  4226                           	goto	l1407
  4227  0220  2A21               	
  4228                           l166:	
  4229  0221                     	line	87
  4230                           	
  4231                           l1407:	
  4232  0221                     ;lcd.c: 87:     PORTDbits.RD3 = 1;
  4233                           	bcf	status, 5	;RP0=0, select bank0
  4234  0221  1283               	bcf	status, 6	;RP1=0, select bank0
  4235  0222  1303               	bsf	(8),3	;volatile
  4236  0223  1588               	line	88
  4237                           	
  4238                           l167:	
  4239  0224                     	return
  4240  0224  0008               	opt stack 0
  4241                           GLOBAL	__end_of_lcd_instReg
  4242                           	__end_of_lcd_instReg:
  4243  0225                     	signat	_lcd_instReg,4217
  4244                           	global	_delay
  4245                           
  4246 ;; *************** function _delay *****************
  4247 ;; Defined at:
  4248 ;;		line 7 in file "delay.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  t               2    2[COMMON] unsigned int 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;		None
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  1    wreg      void 
  4255 ;; Registers used:
  4256 ;;		wreg, status,2, status,0
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4262 ;;      Params:         2       0       0       0       0
  4263 ;;      Locals:         0       0       0       0       0
  4264 ;;      Temps:          1       0       0       0       0
  4265 ;;      Totals:         3       0       0       0       0
  4266 ;;Total ram usage:        3 bytes
  4267 ;; Hardware stack levels used:    1
  4268 ;; Hardware stack levels required when called:    2
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_lcd_init
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  4276                           	file	"delay.c"
  4277                           	line	7
  4278                           global __ptext12
  4279                           __ptext12:	;psect for function _delay
  4280  0453                     psect	text12
  4281                           	file	"delay.c"
  4282                           	line	7
  4283                           	global	__size_of_delay
  4284                           	__size_of_delay	equ	__end_of_delay-_delay
  4285  0017                     	
  4286                           _delay:	
  4287  0453                     ;incstack = 0
  4288                           	opt	stack 4
  4289                           ; Regs used in _delay: [wreg+status,2+status,0]
  4290                           	line	9
  4291                           	
  4292                           l1417:	
  4293  0453                     ;delay.c: 7: void delay( unsigned int t );delay.c: 8: {;delay.c: 9:     while( t )
  4294                           	goto	l1421
  4295  0453  2C62               	
  4296                           l143:	
  4297  0454                     	line	11
  4298                           	
  4299                           l1419:	
  4300  0454                     ;delay.c: 10:     {;delay.c: 11:         _delay((unsigned long)((1)*(4000000/4000.0)));

  4301                           	opt asmopt_push
  4302                           opt asmopt_off
  4303                           	movlw	199
  4304  0454  30C7               movwf	((??_delay+0)+0),f
  4305  0455  00F4               	u1567:
  4306  0456                     	nop2
  4307  0456  2C57               decfsz	(??_delay+0)+0,f
  4308  0457  0BF4               	goto	u1567
  4309  0458  2C56               	nop2
  4310  0459  2C5A               	nop2
  4311  045A  2C5B               opt asmopt_pop
  4312                           
  4313                           	line	12
  4314                           ;delay.c: 12:         --t;
  4315                           	movlw	01h
  4316  045B  3001               	subwf	(delay@t),f
  4317  045C  02F2               	movlw	0
  4318  045D  3000               	skipc
  4319  045E  1C03               	decf	(delay@t+1),f
  4320  045F  03F3               	subwf	(delay@t+1),f
  4321  0460  02F3               	goto	l1421
  4322  0461  2C62               	line	13
  4323                           ;delay.c: 13:     }
  4324                           	
  4325                           l142:	
  4326  0462                     	line	9
  4327                           	
  4328                           l1421:	
  4329  0462                     ;delay.c: 9:     while( t )
  4330                           	movf	((delay@t)),w
  4331  0462  0872               iorwf	((delay@t+1)),w
  4332  0463  0473               	btfss	status,2
  4333  0464  1D03               	goto	u791
  4334  0465  2C67               	goto	u790
  4335  0466  2C68               u791:
  4336  0467                     	goto	l1419
  4337  0467  2C54               u790:
  4338  0468                     	goto	l145
  4339  0468  2C69               	
  4340                           l144:	
  4341  0469                     	line	14
  4342                           	
  4343                           l145:	
  4344  0469                     	return
  4345  0469  0008               	opt stack 0
  4346                           GLOBAL	__end_of_delay
  4347                           	__end_of_delay:
  4348  046A                     	signat	_delay,4217
  4349                           	global	_botao_init
  4350                           
  4351 ;; *************** function _botao_init *****************
  4352 ;; Defined at:
  4353 ;;		line 6 in file "botao.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;		None
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;		None
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  1    wreg      void 
  4360 ;; Registers used:
  4361 ;;		None
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4367 ;;      Params:         0       0       0       0       0
  4368 ;;      Locals:         0       0       0       0       0
  4369 ;;      Temps:          0       0       0       0       0
  4370 ;;      Totals:         0       0       0       0       0
  4371 ;;Total ram usage:        0 bytes
  4372 ;; Hardware stack levels used:    1
  4373 ;; Hardware stack levels required when called:    2
  4374 ;; This function calls:
  4375 ;;		Nothing
  4376 ;; This function is called by:
  4377 ;;		_main
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4381                           	file	"botao.c"
  4382                           	line	6
  4383                           global __ptext13
  4384                           __ptext13:	;psect for function _botao_init
  4385  04EE                     psect	text13
  4386                           	file	"botao.c"
  4387                           	line	6
  4388                           	global	__size_of_botao_init
  4389                           	__size_of_botao_init	equ	__end_of_botao_init-_botao_init
  4390  0005                     	
  4391                           _botao_init:	
  4392  04EE                     ;incstack = 0
  4393                           	opt	stack 5
  4394                           ; Regs used in _botao_init: []
  4395                           	line	8
  4396                           	
  4397                           l1553:	
  4398  04EE                     ;botao.c: 8:     TRISDbits.TRISD0 = 1;
  4399                           	bsf	status, 5	;RP0=1, select bank1
  4400  04EE  1683               	bcf	status, 6	;RP1=0, select bank1
  4401  04EF  1303               	bsf	(136)^080h,0	;volatile
  4402  04F0  1408               	line	9
  4403                           ;botao.c: 9:     TRISDbits.TRISD1 = 1;
  4404                           	bsf	(136)^080h,1	;volatile
  4405  04F1  1488               	line	10
  4406                           	
  4407                           l228:	
  4408  04F2                     	return
  4409  04F2  0008               	opt stack 0
  4410                           GLOBAL	__end_of_botao_init
  4411                           	__end_of_botao_init:
  4412  04F3                     	signat	_botao_init,89
  4413                           	global	_b0
  4414                           
  4415 ;; *************** function _b0 *****************
  4416 ;; Defined at:
  4417 ;;		line 15 in file "botao.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;		None
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;		None
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      unsigned char 
  4424 ;; Registers used:
  4425 ;;		wreg, status,2, status,0
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4431 ;;      Params:         0       0       0       0       0
  4432 ;;      Locals:         0       0       0       0       0
  4433 ;;      Temps:          0       0       0       0       0
  4434 ;;      Totals:         0       0       0       0       0
  4435 ;;Total ram usage:        0 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    2
  4438 ;; This function calls:
  4439 ;;		Nothing
  4440 ;; This function is called by:
  4441 ;;		_main
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4445                           	line	15
  4446                           global __ptext14
  4447                           __ptext14:	;psect for function _b0
  4448  04E8                     psect	text14
  4449                           	file	"botao.c"
  4450                           	line	15
  4451                           	global	__size_of_b0
  4452                           	__size_of_b0	equ	__end_of_b0-_b0
  4453  0006                     	
  4454                           _b0:	
  4455  04E8                     ;incstack = 0
  4456                           	opt	stack 5
  4457                           ; Regs used in _b0: [wreg+status,2+status,0]
  4458                           	line	17
  4459                           	
  4460                           l1567:	
  4461  04E8                     ;botao.c: 17:     return( PORTDbits.RD0 );
  4462                           	bcf	status, 5	;RP0=0, select bank0
  4463  04E8  1283               	bcf	status, 6	;RP1=0, select bank0
  4464  04E9  1303               	movf	(8),w	;volatile
  4465  04EA  0808               	andlw	(1<<1)-1
  4466  04EB  3901               	goto	l231
  4467  04EC  2CED               	
  4468                           l1569:	
  4469  04ED                     	line	18
  4470                           	
  4471                           l231:	
  4472  04ED                     	return
  4473  04ED  0008               	opt stack 0
  4474                           GLOBAL	__end_of_b0
  4475                           	__end_of_b0:
  4476  04EE                     	signat	_b0,89
  4477                           	global	_T0_play
  4478                           
  4479 ;; *************** function _T0_play *****************
  4480 ;; Defined at:
  4481 ;;		line 54 in file "timers.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;		None
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;		None
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  1    wreg      void 
  4488 ;; Registers used:
  4489 ;;		None
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4495 ;;      Params:         0       0       0       0       0
  4496 ;;      Locals:         0       0       0       0       0
  4497 ;;      Temps:          0       0       0       0       0
  4498 ;;      Totals:         0       0       0       0       0
  4499 ;;Total ram usage:        0 bytes
  4500 ;; Hardware stack levels used:    1
  4501 ;; Hardware stack levels required when called:    2
  4502 ;; This function calls:
  4503 ;;		Nothing
  4504 ;; This function is called by:
  4505 ;;		_main
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  4509                           	file	"timers.c"
  4510                           	line	54
  4511                           global __ptext15
  4512                           __ptext15:	;psect for function _T0_play
  4513  04F3                     psect	text15
  4514                           	file	"timers.c"
  4515                           	line	54
  4516                           	global	__size_of_T0_play
  4517                           	__size_of_T0_play	equ	__end_of_T0_play-_T0_play
  4518  0002                     	
  4519                           _T0_play:	
  4520  04F3                     ;incstack = 0
  4521                           	opt	stack 5
  4522                           ; Regs used in _T0_play: []
  4523                           	line	56
  4524                           	
  4525                           l1571:	
  4526  04F3                     ;timers.c: 56:     INTCONbits.T0IE = 1;
  4527                           	bsf	(11),5	;volatile
  4528  04F3  168B               	line	57
  4529                           	
  4530                           l78:	
  4531  04F4                     	return
  4532  04F4  0008               	opt stack 0
  4533                           GLOBAL	__end_of_T0_play
  4534                           	__end_of_T0_play:
  4535  04F5                     	signat	_T0_play,89
  4536                           	global	_T0_pause
  4537                           
  4538 ;; *************** function _T0_pause *****************
  4539 ;; Defined at:
  4540 ;;		line 49 in file "timers.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;		None
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;		None
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  1    wreg      void 
  4547 ;; Registers used:
  4548 ;;		None
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4554 ;;      Params:         0       0       0       0       0
  4555 ;;      Locals:         0       0       0       0       0
  4556 ;;      Temps:          0       0       0       0       0
  4557 ;;      Totals:         0       0       0       0       0
  4558 ;;Total ram usage:        0 bytes
  4559 ;; Hardware stack levels used:    1
  4560 ;; Hardware stack levels required when called:    2
  4561 ;; This function calls:
  4562 ;;		Nothing
  4563 ;; This function is called by:
  4564 ;;		_main
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  4568                           	line	49
  4569                           global __ptext16
  4570                           __ptext16:	;psect for function _T0_pause
  4571  04F5                     psect	text16
  4572                           	file	"timers.c"
  4573                           	line	49
  4574                           	global	__size_of_T0_pause
  4575                           	__size_of_T0_pause	equ	__end_of_T0_pause-_T0_pause
  4576  0002                     	
  4577                           _T0_pause:	
  4578  04F5                     ;incstack = 0
  4579                           	opt	stack 5
  4580                           ; Regs used in _T0_pause: []
  4581                           	line	51
  4582                           	
  4583                           l1573:	
  4584  04F5                     ;timers.c: 51:     INTCONbits.T0IE = 0;
  4585                           	bcf	(11),5	;volatile
  4586  04F5  128B               	line	52
  4587                           	
  4588                           l75:	
  4589  04F6                     	return
  4590  04F6  0008               	opt stack 0
  4591                           GLOBAL	__end_of_T0_pause
  4592                           	__end_of_T0_pause:
  4593  04F7                     	signat	_T0_pause,89
  4594                           	global	_T0_init
  4595                           
  4596 ;; *************** function _T0_init *****************
  4597 ;; Defined at:
  4598 ;;		line 21 in file "timers.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;		None
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;		None
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  1    wreg      void 
  4605 ;; Registers used:
  4606 ;;		wreg, status,2, status,0
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4612 ;;      Params:         0       0       0       0       0
  4613 ;;      Locals:         0       0       0       0       0
  4614 ;;      Temps:          0       0       0       0       0
  4615 ;;      Totals:         0       0       0       0       0
  4616 ;;Total ram usage:        0 bytes
  4617 ;; Hardware stack levels used:    1
  4618 ;; Hardware stack levels required when called:    2
  4619 ;; This function calls:
  4620 ;;		Nothing
  4621 ;; This function is called by:
  4622 ;;		_main
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  4626                           	line	21
  4627                           global __ptext17
  4628                           __ptext17:	;psect for function _T0_init
  4629  04B6                     psect	text17
  4630                           	file	"timers.c"
  4631                           	line	21
  4632                           	global	__size_of_T0_init
  4633                           	__size_of_T0_init	equ	__end_of_T0_init-_T0_init
  4634  0010                     	
  4635                           _T0_init:	
  4636  04B6                     ;incstack = 0
  4637                           	opt	stack 5
  4638                           ; Regs used in _T0_init: [wreg+status,2+status,0]
  4639                           	line	23
  4640                           	
  4641                           l1541:	
  4642  04B6                     ;timers.c: 23:     INTCONbits.GIE = 0;
  4643                           	bcf	(11),7	;volatile
  4644  04B6  138B               	line	24
  4645                           ;timers.c: 24:     OPTION_REGbits.PSA = 0;
  4646                           	bsf	status, 5	;RP0=1, select bank1
  4647  04B7  1683               	bcf	status, 6	;RP1=0, select bank1
  4648  04B8  1303               	bcf	(129)^080h,3	;volatile
  4649  04B9  1181               	line	25
  4650                           	
  4651                           l1543:	
  4652  04BA                     ;timers.c: 25:     OPTION_REGbits.PS = 0x1;
  4653                           	movf	(129)^080h,w	;volatile
  4654  04BA  0801               	andlw	not (((1<<3)-1)<<0)
  4655  04BB  39F8               	iorlw	(01h & ((1<<3)-1))<<0
  4656  04BC  3801               	movwf	(129)^080h	;volatile
  4657  04BD  0081               	line	26
  4658                           	
  4659                           l1545:	
  4660  04BE                     ;timers.c: 26:     OPTION_REGbits.T0CS = 0;
  4661                           	bcf	(129)^080h,5	;volatile
  4662  04BE  1281               	line	27
  4663                           	
  4664                           l1547:	
  4665  04BF                     ;timers.c: 27:     TMR0 = (256-250);
  4666                           	movlw	low(06h)
  4667  04BF  3006               	bcf	status, 5	;RP0=0, select bank0
  4668  04C0  1283               	bcf	status, 6	;RP1=0, select bank0
  4669  04C1  1303               	movwf	(1)	;volatile
  4670  04C2  0081               	line	28
  4671                           	
  4672                           l1549:	
  4673  04C3                     ;timers.c: 28:     INTCONbits.T0IE = 0;
  4674                           	bcf	(11),5	;volatile
  4675  04C3  128B               	line	29
  4676                           	
  4677                           l1551:	
  4678  04C4                     ;timers.c: 29:     INTCONbits.GIE = 1;
  4679                           	bsf	(11),7	;volatile
  4680  04C4  178B               	line	30
  4681                           	
  4682                           l65:	
  4683  04C5                     	return
  4684  04C5  0008               	opt stack 0
  4685                           GLOBAL	__end_of_T0_init
  4686                           	__end_of_T0_init:
  4687  04C6                     	signat	_T0_init,89
  4688                           	global	_isr
  4689                           
  4690 ;; *************** function _isr *****************
  4691 ;; Defined at:
  4692 ;;		line 7 in file "interrupt.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;		None
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;		None
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  1    wreg      void 
  4699 ;; Registers used:
  4700 ;;		wreg, status,2, status,0, pclath, cstack
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4706 ;;      Params:         0       0       0       0       0
  4707 ;;      Locals:         0       0       0       0       0
  4708 ;;      Temps:          2       0       0       0       0
  4709 ;;      Totals:         2       0       0       0       0
  4710 ;;Total ram usage:        2 bytes
  4711 ;; Hardware stack levels used:    1
  4712 ;; Hardware stack levels required when called:    1
  4713 ;; This function calls:
  4714 ;;		_T0_int
  4715 ;;		_T1_int
  4716 ;;		_T2_int
  4717 ;; This function is called by:
  4718 ;;		Interrupt level 1
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  4722                           	file	"interrupt.c"
  4723                           	line	7
  4724                           global __ptext18
  4725                           __ptext18:	;psect for function _isr
  4726  0427                     psect	text18
  4727                           	file	"interrupt.c"
  4728                           	line	7
  4729                           	global	__size_of_isr
  4730                           	__size_of_isr	equ	__end_of_isr-_isr
  4731  002C                     	
  4732                           _isr:	
  4733  0427                     ;incstack = 0
  4734                           	opt	stack 3
  4735                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  4736                           psect	intentry,class=CODE,delta=2
  4737                           global __pintentry
  4738                           __pintentry:
  4739  0004                     global interrupt_function
  4740                           interrupt_function:
  4741  0004                     	global saved_w
  4742                           	saved_w	set	btemp+0
  4743  007E                     	movwf	saved_w
  4744  0004  00FE               	swapf	status,w
  4745  0005  0E03               	movwf	(??_isr+0)
  4746  0006  00F0               	movf	pclath,w
  4747  0007  080A               	movwf	(??_isr+1)
  4748  0008  00F1               	ljmp	_isr
  4749  0009  120A  118A  2C27   psect	text18
  4750                           	line	9
  4751                           	
  4752                           i1l1673:	
  4753  0427                     ;interrupt.c: 9:     if( INTCONbits.T0IF )
  4754                           	btfss	(11),2	;volatile
  4755  0427  1D0B               	goto	u121_21
  4756  0428  2C2A               	goto	u121_20
  4757  0429  2C2B               u121_21:
  4758  042A                     	goto	i1l1679
  4759  042A  2C32               u121_20:
  4760  042B                     	line	11
  4761                           	
  4762                           i1l1675:	
  4763  042B                     ;interrupt.c: 10:     {;interrupt.c: 11:         INTCONbits.T0IF = 0;
  4764                           	bcf	(11),2	;volatile
  4765  042B  110B               	line	12
  4766                           	
  4767                           i1l1677:	
  4768  042C                     ;interrupt.c: 12:         T0_int();
  4769                           	fcall	_T0_int
  4770  042C  120A  118A  24A4  120A  118A  	goto	i1l1679
  4771  0431  2C32               	line	13
  4772                           ;interrupt.c: 13:     }
  4773                           	
  4774                           i1l134:	
  4775  0432                     	line	14
  4776                           	
  4777                           i1l1679:	
  4778  0432                     ;interrupt.c: 14:     if( PIR1bits.TMR1IF )
  4779                           	bcf	status, 5	;RP0=0, select bank0
  4780  0432  1283               	bcf	status, 6	;RP1=0, select bank0
  4781  0433  1303               	btfss	(12),0	;volatile
  4782  0434  1C0C               	goto	u122_21
  4783  0435  2C37               	goto	u122_20
  4784  0436  2C38               u122_21:
  4785  0437                     	goto	i1l1685
  4786  0437  2C3F               u122_20:
  4787  0438                     	line	16
  4788                           	
  4789                           i1l1681:	
  4790  0438                     ;interrupt.c: 15:     {;interrupt.c: 16:         PIR1bits.TMR1IF = 0;
  4791                           	bcf	(12),0	;volatile
  4792  0438  100C               	line	17
  4793                           	
  4794                           i1l1683:	
  4795  0439                     ;interrupt.c: 17:         T1_int();
  4796                           	fcall	_T1_int
  4797  0439  120A  118A  246A  120A  118A  	goto	i1l1685
  4798  043E  2C3F               	line	18
  4799                           ;interrupt.c: 18:     }
  4800                           	
  4801                           i1l135:	
  4802  043F                     	line	19
  4803                           	
  4804                           i1l1685:	
  4805  043F                     ;interrupt.c: 19:     if( PIR1bits.TMR2IF )
  4806                           	bcf	status, 5	;RP0=0, select bank0
  4807  043F  1283               	bcf	status, 6	;RP1=0, select bank0
  4808  0440  1303               	btfss	(12),1	;volatile
  4809  0441  1C8C               	goto	u123_21
  4810  0442  2C44               	goto	u123_20
  4811  0443  2C45               u123_21:
  4812  0444                     	goto	i1l137
  4813  0444  2C4C               u123_20:
  4814  0445                     	line	21
  4815                           	
  4816                           i1l1687:	
  4817  0445                     ;interrupt.c: 20:     {;interrupt.c: 21:         PIR1bits.TMR2IF = 0;
  4818                           	bcf	(12),1	;volatile
  4819  0445  108C               	line	22
  4820                           	
  4821                           i1l1689:	
  4822  0446                     ;interrupt.c: 22:         T2_int();
  4823                           	fcall	_T2_int
  4824  0446  120A  118A  24C6  120A  118A  	goto	i1l137
  4825  044B  2C4C               	line	23
  4826                           ;interrupt.c: 23:     }
  4827                           	
  4828                           i1l136:	
  4829  044C                     	line	24
  4830                           	
  4831                           i1l137:	
  4832  044C                     	movf	(??_isr+1),w
  4833  044C  0871               	movwf	pclath
  4834  044D  008A               	swapf	(??_isr+0)^0FFFFFF80h,w
  4835  044E  0E70               	movwf	status
  4836  044F  0083               	swapf	saved_w,f
  4837  0450  0EFE               	swapf	saved_w,w
  4838  0451  0E7E               	retfie
  4839  0452  0009               	opt stack 0
  4840                           GLOBAL	__end_of_isr
  4841                           	__end_of_isr:
  4842  0453                     	signat	_isr,89
  4843                           	global	_T2_int
  4844                           
  4845 ;; *************** function _T2_int *****************
  4846 ;; Defined at:
  4847 ;;		line 132 in file "timers.c"
  4848 ;; Parameters:    Size  Location     Type
  4849 ;;		None
  4850 ;; Auto vars:     Size  Location     Type
  4851 ;;		None
  4852 ;; Return value:  Size  Location     Type
  4853 ;;                  1    wreg      void 
  4854 ;; Registers used:
  4855 ;;		wreg, status,2, status,0
  4856 ;; Tracked objects:
  4857 ;;		On entry : 0/0
  4858 ;;		On exit  : 0/0
  4859 ;;		Unchanged: 0/0
  4860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4861 ;;      Params:         0       0       0       0       0
  4862 ;;      Locals:         0       0       0       0       0
  4863 ;;      Temps:          0       0       0       0       0
  4864 ;;      Totals:         0       0       0       0       0
  4865 ;;Total ram usage:        0 bytes
  4866 ;; Hardware stack levels used:    1
  4867 ;; This function calls:
  4868 ;;		Nothing
  4869 ;; This function is called by:
  4870 ;;		_isr
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  4874                           	file	"timers.c"
  4875                           	line	132
  4876                           global __ptext19
  4877                           __ptext19:	;psect for function _T2_int
  4878  04C6                     psect	text19
  4879                           	file	"timers.c"
  4880                           	line	132
  4881                           	global	__size_of_T2_int
  4882                           	__size_of_T2_int	equ	__end_of_T2_int-_T2_int
  4883  0010                     	
  4884                           _T2_int:	
  4885  04C6                     ;incstack = 0
  4886                           	opt	stack 3
  4887                           ; Regs used in _T2_int: [wreg+status,2+status,0]
  4888                           	line	134
  4889                           	
  4890                           i1l1637:	
  4891  04C6                     ;timers.c: 134:     if( T2count )
  4892                           	bcf	status, 5	;RP0=0, select bank0
  4893  04C6  1283               	bcf	status, 6	;RP1=0, select bank0
  4894  04C7  1303               	movf	((_T2count)),w
  4895  04C8  0834               iorwf	((_T2count+1)),w
  4896  04C9  0435               	btfsc	status,2
  4897  04CA  1903               	goto	u119_21
  4898  04CB  2CCD               	goto	u119_20
  4899  04CC  2CCE               u119_21:
  4900  04CD                     	goto	i1l107
  4901  04CD  2CD5               u119_20:
  4902  04CE                     	line	136
  4903                           	
  4904                           i1l1639:	
  4905  04CE                     ;timers.c: 135:     {;timers.c: 136:         --T2count;
  4906                           	movlw	01h
  4907  04CE  3001               	subwf	(_T2count),f
  4908  04CF  02B4               	movlw	0
  4909  04D0  3000               	skipc
  4910  04D1  1C03               	decf	(_T2count+1),f
  4911  04D2  03B5               	subwf	(_T2count+1),f
  4912  04D3  02B5               	goto	i1l107
  4913  04D4  2CD5               	line	137
  4914                           ;timers.c: 137:     }
  4915                           	
  4916                           i1l106:	
  4917  04D5                     	line	138
  4918                           	
  4919                           i1l107:	
  4920  04D5                     	return
  4921  04D5  0008               	opt stack 0
  4922                           GLOBAL	__end_of_T2_int
  4923                           	__end_of_T2_int:
  4924  04D6                     	signat	_T2_int,89
  4925                           	global	_T1_int
  4926                           
  4927 ;; *************** function _T1_int *****************
  4928 ;; Defined at:
  4929 ;;		line 80 in file "timers.c"
  4930 ;; Parameters:    Size  Location     Type
  4931 ;;		None
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;		None
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  1    wreg      void 
  4936 ;; Registers used:
  4937 ;;		wreg, status,2, status,0
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4943 ;;      Params:         0       0       0       0       0
  4944 ;;      Locals:         0       0       0       0       0
  4945 ;;      Temps:          0       0       0       0       0
  4946 ;;      Totals:         0       0       0       0       0
  4947 ;;Total ram usage:        0 bytes
  4948 ;; Hardware stack levels used:    1
  4949 ;; This function calls:
  4950 ;;		Nothing
  4951 ;; This function is called by:
  4952 ;;		_isr
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  4956                           	line	80
  4957                           global __ptext20
  4958                           __ptext20:	;psect for function _T1_int
  4959  046A                     psect	text20
  4960                           	file	"timers.c"
  4961                           	line	80
  4962                           	global	__size_of_T1_int
  4963                           	__size_of_T1_int	equ	__end_of_T1_int-_T1_int
  4964  0014                     	
  4965                           _T1_int:	
  4966  046A                     ;incstack = 0
  4967                           	opt	stack 3
  4968                           ; Regs used in _T1_int: [wreg+status,2+status,0]
  4969                           	line	82
  4970                           	
  4971                           i1l1631:	
  4972  046A                     ;timers.c: 82:     TMR1H = ((0xFFFF-1000+1) >> 8) & 0x00FF;
  4973                           	movlw	low(0FCh)
  4974  046A  30FC               	bcf	status, 5	;RP0=0, select bank0
  4975  046B  1283               	bcf	status, 6	;RP1=0, select bank0
  4976  046C  1303               	movwf	(15)	;volatile
  4977  046D  008F               	line	83
  4978                           ;timers.c: 83:     TMR1L = ((0xFFFF-1000+1) >> 0) & 0x00FF;
  4979                           	movlw	low(018h)
  4980  046E  3018               	movwf	(14)	;volatile
  4981  046F  008E               	line	84
  4982                           	
  4983                           i1l1633:	
  4984  0470                     ;timers.c: 84:     if( T1count )
  4985                           	movf	((_T1count)),w
  4986  0470  0836               iorwf	((_T1count+1)),w
  4987  0471  0437               	btfsc	status,2
  4988  0472  1903               	goto	u118_21
  4989  0473  2C75               	goto	u118_20
  4990  0474  2C76               u118_21:
  4991  0475                     	goto	i1l88
  4992  0475  2C7D               u118_20:
  4993  0476                     	line	86
  4994                           	
  4995                           i1l1635:	
  4996  0476                     ;timers.c: 85:     {;timers.c: 86:         --T1count;
  4997                           	movlw	01h
  4998  0476  3001               	subwf	(_T1count),f
  4999  0477  02B6               	movlw	0
  5000  0478  3000               	skipc
  5001  0479  1C03               	decf	(_T1count+1),f
  5002  047A  03B7               	subwf	(_T1count+1),f
  5003  047B  02B7               	goto	i1l88
  5004  047C  2C7D               	line	87
  5005                           ;timers.c: 87:     }
  5006                           	
  5007                           i1l87:	
  5008  047D                     	line	88
  5009                           	
  5010                           i1l88:	
  5011  047D                     	return
  5012  047D  0008               	opt stack 0
  5013                           GLOBAL	__end_of_T1_int
  5014                           	__end_of_T1_int:
  5015  047E                     	signat	_T1_int,89
  5016                           	global	_T0_int
  5017                           
  5018 ;; *************** function _T0_int *****************
  5019 ;; Defined at:
  5020 ;;		line 33 in file "timers.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;		None
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;		None
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  1    wreg      void 
  5027 ;; Registers used:
  5028 ;;		wreg, status,2, status,0
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5034 ;;      Params:         0       0       0       0       0
  5035 ;;      Locals:         0       0       0       0       0
  5036 ;;      Temps:          0       0       0       0       0
  5037 ;;      Totals:         0       0       0       0       0
  5038 ;;Total ram usage:        0 bytes
  5039 ;; Hardware stack levels used:    1
  5040 ;; This function calls:
  5041 ;;		Nothing
  5042 ;; This function is called by:
  5043 ;;		_isr
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  5047                           	line	33
  5048                           global __ptext21
  5049                           __ptext21:	;psect for function _T0_int
  5050  04A4                     psect	text21
  5051                           	file	"timers.c"
  5052                           	line	33
  5053                           	global	__size_of_T0_int
  5054                           	__size_of_T0_int	equ	__end_of_T0_int-_T0_int
  5055  0012                     	
  5056                           _T0_int:	
  5057  04A4                     ;incstack = 0
  5058                           	opt	stack 3
  5059                           ; Regs used in _T0_int: [wreg+status,2+status,0]
  5060                           	line	35
  5061                           	
  5062                           i1l1625:	
  5063  04A4                     ;timers.c: 35:     TMR0 = (256-250);
  5064                           	movlw	low(06h)
  5065  04A4  3006               	bcf	status, 5	;RP0=0, select bank0
  5066  04A5  1283               	bcf	status, 6	;RP1=0, select bank0
  5067  04A6  1303               	movwf	(1)	;volatile
  5068  04A7  0081               	line	36
  5069                           	
  5070                           i1l1627:	
  5071  04A8                     ;timers.c: 36:     if( T0count )
  5072                           	movf	((_T0count)),w
  5073  04A8  0838               iorwf	((_T0count+1)),w
  5074  04A9  0439               	btfsc	status,2
  5075  04AA  1903               	goto	u117_21
  5076  04AB  2CAD               	goto	u117_20
  5077  04AC  2CAE               u117_21:
  5078  04AD                     	goto	i1l69
  5079  04AD  2CB5               u117_20:
  5080  04AE                     	line	38
  5081                           	
  5082                           i1l1629:	
  5083  04AE                     ;timers.c: 37:     {;timers.c: 38:         --T0count;
  5084                           	movlw	01h
  5085  04AE  3001               	subwf	(_T0count),f
  5086  04AF  02B8               	movlw	0
  5087  04B0  3000               	skipc
  5088  04B1  1C03               	decf	(_T0count+1),f
  5089  04B2  03B9               	subwf	(_T0count+1),f
  5090  04B3  02B9               	goto	i1l69
  5091  04B4  2CB5               	line	39
  5092                           ;timers.c: 39:     }
  5093                           	
  5094                           i1l68:	
  5095  04B5                     	line	40
  5096                           	
  5097                           i1l69:	
  5098  04B5                     	return
  5099  04B5  0008               	opt stack 0
  5100                           GLOBAL	__end_of_T0_int
  5101                           	__end_of_T0_int:
  5102  04B6                     	signat	_T0_int,89
  5103                           global	___latbits
  5104                           ___latbits	equ	2
  5105  0002                     	global	btemp
  5106                           	btemp set 07Eh
  5107  007E                     
  5108                           	DABS	1,126,2	;btemp
  5109                           	global	wtemp0
  5110                           	wtemp0 set btemp+0
  5111  007E                     	end


Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     20      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_print@str	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    _main->_lcd_print
    _tempo->___awmod
    _lcd_print->_lcd_lincol
    _lcd_num->___awmod
    _lcd_lincol->_lcd_instReg
    _lcd_init->_delay
    _lcd_init->_lcd_instReg

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_num
    _lcd_num->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    5481
                                             16 BANK0      4     4      0
                            _T0_init
                           _T0_pause
                            _T0_play
                           _T0_start
                                 _b0
                         _botao_init
                           _lcd_init
                            _lcd_num
                          _lcd_print
                              _tempo
 ---------------------------------------------------------------------------------
 (1) _tempo                                                4     4      0     628
                                              0 BANK0      4     4      0
                           _T0_start
                          _T0_status
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _T0_status                                            2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _T0_start                                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            5     3      2     760
                                              8 COMMON     2     0      2
                                              0 BANK0      3     3      0
                        _lcd_dataReg
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (1) _lcd_num                                             12     8      4    3492
                                              4 BANK0     12     8      4
                            ___awdiv
                            ___awmod
                        _lcd_dataReg
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (2) _lcd_lincol                                           3     2      1     372
                                              5 COMMON     3     2      1
                        _lcd_instReg
 ---------------------------------------------------------------------------------
 (2) _lcd_dataReg                                          3     3      0      44
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     454
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1165
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     427
                              _delay
                        _lcd_instReg
 ---------------------------------------------------------------------------------
 (3) _lcd_instReg                                          3     3      0     176
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     251
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _botao_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _b0                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _T0_play                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _T0_pause                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _T0_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
                             _T0_int
                             _T1_int
                             _T2_int
 ---------------------------------------------------------------------------------
 (5) _T2_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _T1_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _T0_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _T0_init
   _T0_pause
   _T0_play
   _T0_start
   _b0
   _botao_init
   _lcd_init
     _delay
     _lcd_instReg
   _lcd_num
     ___awdiv
     ___awmod
     _lcd_dataReg
     _lcd_lincol
       _lcd_instReg
   _lcd_print
     _lcd_dataReg
     _lcd_lincol
       _lcd_instReg
   _tempo
     _T0_start
     _T0_status
     ___awmod

 _isr (ROOT)
   _T0_int
   _T1_int
   _T2_int

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      1E       5       37.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2A      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Apr 01 11:01:46 2022

                       pc 0002               __CFG_CP$OFF 0000              lcd_dataReg@d 0074  
                      l31 0135                        l32 0145                        l33 014B  
                      l34 0196                        l35 0197                        l36 0197  
                      l72 04DF                        l65 04C5                        l81 04E7  
                      l75 04F6                        l78 04F4                _b0Anterior 007B  
                      _b0 04E8              ___awdiv@sign 0021                        fsr 0004  
              _b1Anterior 007A                       ?_b0 0070                       l200 00C2  
                     l201 010E                       l202 010E                       l220 02A1  
                     l221 02A4                       l142 0462                       l231 04ED  
                     l143 0454                       l144 0469                       l160 01BF  
                     l145 0469                       l161 01CE                       l217 02A4  
                     l162 01F8                       l170 0426                       l218 02A3  
                     l163 021C                       l219 02A2                       l228 04F2  
                     l500 02D9                       l165 0212                       l501 02CD  
                     l173 04A3                       l166 0221                       l158 01C9  
                     l502 02DE                       l510 0325                       l190 004D  
                     l182 03E3                       l167 0224                       l503 02DF  
                     l511 032F                       l191 0067                       l183 03CC  
                     l176 03B9                       l504 02F8                       l520 037A  
                     l512 036A                       l192 0068                       l184 03F0  
                     l505 0306                       l513 0344                       l193 008A  
                     l185 03F0                       l506 0312                       l514 0338  
                     l194 0096                       l507 0317                       l515 0349  
                     l195 008B                       l516 034A                       l188 0038  
                     l517 035B                       l197 00B3                       l189 007C  
                     l518 0369                       l198 00B4                       l519 0375  
                     l199 00C2                       l497 02B4                       l498 02C2  
                     l499 0307                       _PR2 0092              __CFG_CPD$OFF 0000  
                     u710 01B8                       u711 01B7                       u720 01BE  
                     u721 01BD                       u705 01A9                       u730 01DA  
                     u731 01D9                       u805 03F8                       u815 0400  
                     u745 01DE                       u825 0415                       u770 020B  
                     u771 020A                       u755 01E6                       u835 0495  
                     u780 0211                       u940 031D                       u781 0210  
                     u765 01FC                       u941 031C                       u790 0468  
                     u950 0329                       u791 0467                       u695 01A1  
                     u951 0328                       u960 0335                       u961 0334  
                     u980 0348                       u981 0347                       u990 0354  
                     u991 0353                       u975 0339                       u995 0350  
                     _dia 003A                       _hor 003D                       _min 003C  
                     _isr 0427                       _seg 003B                       fsr0 0004  
            ___awmod@sign 0078                      ??_b0 0072              __CFG_LVP$OFF 0000  
             lcd_num@size 002C                      l1401 020B                      l1403 0212  
                    l1411 04DE                      l1421 0462                      l1405 021C  
                    l1501 0335                      l1413 04E0                      l1407 0221  
                    l1511 0354                      l1503 0338                      l1431 040E  
                    l1423 03F2                      l1415 04E7                      l1417 0453  
                    l1521 0375                      l1513 035B                      l1505 033F  
                    l1433 0411                      l1425 03F5                      l1441 0492  
                    l1409 04D6                      l1419 0454                      l1371 01B2  
                    l1531 0388                      l1523 037A                      l1515 0362  
                    l1507 0344                      l1435 0412                      l1427 0409  
                    l1541 04B6                      l1381 01D1                      l1373 01B8  
                    l1533 0389                      l1525 037B                      l1701 02B4  
                    l1509 034A                      l1517 036A                      l1437 041E  
                    l1429 040A                      l1551 04C4                      l1543 04BA  
                    l1391 01F4                      l1383 01DA                      l1375 01BF  
                    l1367 019B                      l1535 038A                      l1527 0384  
                    l1711 02CA                      l1703 02B8                      l1519 036F  
                    l1439 0423                      l1545 04BE                      l1553 04EE  
                    l1385 01DB                      l1393 01F8                      l1377 01C9  
                    l1369 019E                      l1537 038B                      l1529 0387  
                    l1721 02F0                      l1713 02CD                      l1705 02BD  
                    l1801 0119                      l1547 04BF                      l1571 04F3  
                    l1395 01F9                      l1387 01EF                      l1379 01CE  
                    l1539 0395                      l1731 030C                      l1723 02F6  
                    l1715 02D4                      l1707 02C2                      l1491 031D  
                    l1811 0145                      l1803 011E                      l1549 04C3  
                    l1573 04F5                      l1397 0205                      l1389 01F0  
                    l1733 0312                      l1725 02F8                      l1717 02D9  
                    l1709 02C4                      l1493 0322                      l1741 03CC  
                    l1813 014B                      l1805 012B                      l1567 04E8  
                    l1399 0206                      l1735 0317                      l1727 02FF  
                    l1719 02DF                      l1495 0325                      l1487 0318  
                    l1743 03D8                      l1751 0230                      l1815 0150  
                    l1807 0135                      l1569 04ED                      l1729 0307  
                    l1497 0329                      l1489 0319                      l1745 03DE  
                    l1737 03BD                      l1761 0293                      l1753 0255  
                    l1817 0167                      l1809 013F                      l1499 032F  
                    l1771 0038                      l1747 03E3                      l1739 03C1  
                    l1763 0298                      l1755 025A                      l1819 017E  
                    l1693 02A5                      l1781 0068                      l1773 0042  
                    l1765 0024                      l1757 0274                      l1749 0225  
                    l1695 02A8                      l1791 00AA                      l1783 007C  
                    l1775 0048                      l1767 002D                      l1759 0279  
                    l1697 02AC                      l1793 00B4                      l1785 008B  
                    l1777 004D                      l1769 0032                      l1699 02B1  
                    l1795 00BB                      l1787 0091                      l1779 0062  
                    l1797 0100                      l1789 0096                      l1799 010F  
                    ?_isr 0070                      STR_1 0484                      u1010 0368  
                    u1011 0367                      u1020 036F                      u1021 036E  
                    u1005 035C                      u1300 02F0                      u1301 02EF  
                    u1320 0305                      u1240 02AC                      u1400 002A  
                    u1321 0304                      u1305 02EC                      u1241 02AB  
                    u1330 030C                      u1250 02B8                      u1410 0032  
                    u1331 030B                      u1315 02F9                      u1251 02B7  
                    u1411 0031                      u1260 02CA                      u1420 0062  
                    u1340 03EF                      u1261 02C9                      u1421 0061  
                    u1341 03EE                      u1430 0089                      u1350 0230  
                    u1431 0088                      u1351 022F                      u1280 02DD  
                    u1440 00AA                      u1360 025A                      u1281 02DC  
                    u1441 00A9                      u1361 0259                      u1450 00B2  
                    u1370 0279                      u1275 02CE                      u1507 0421  
                    u1451 00B1                      u1435 0085                      u1371 0278  
                    u1460 00BB                      u1380 0298                      u1517 01C3  
                    u1461 00BA                      u1445 00A6                      u1381 0297  
                    u1470 010D                      u1390 0029                      u1527 01CB  
                    u1295 02E0                      u1471 010C                      u1391 0027  
                    u1480 013F                      u1537 01F2                      u1481 013E  
                    u1547 0216                      u1475 0109                      u1557 021E  
                    u1567 0456                      u1497 040C                      i1l68 04B5  
                    i1l69 04B5                      i1l87 047D                      i1l88 047D  
                    _TMR0 0001                      _TMR2 0011           __end_of_T0_init 04C6  
         __end_of_T0_play 04F5              __CFG_WRT$OFF 0000                      _main 010F  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
            lcd_instReg@i 0074                     ??_isr 0070              lcd_num@sinal 002D  
                   ?_main 0070           __end_of___awdiv 0318             __CFG_WDTE$OFF 0000  
         __end_of___awmod 037B           ___awdiv@divisor 0072                     i1l106 04D5  
                   i1l107 04D5                     i1l134 0432                     i1l135 043F  
                   i1l136 044C                     i1l137 044C           ___awdiv@counter 0020  
                   _TMR1H 000F                     _TMR1L 000E                     _PORTD 0008  
        __end_of_T0_pause 04F7              lcd_print@col 0078              lcd_print@lin 0022  
          __CFG_FCMEN$OFF 0000              lcd_print@pos 0021              lcd_print@str 0079  
      __size_of_T0_status 0008          __end_of_T0_start 04E0           __end_of_lcd_num 010F  
                   _delay 0453                     _tempo 0225            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
           lcd_lincol@col 0075             lcd_lincol@lin 0077            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 019A                    ??_main 0030  
               ??_T0_init 0072                 ??_T0_play 0072                    ?_delay 0072  
        ___awdiv@dividend 0074                    ?_tempo 0070                    i1l1631 046A  
                  u121_20 042B                    i1l1625 04A4                    i1l1633 0470  
                  u121_21 042A                    i1l1627 04A8                    i1l1635 0476  
                  i1l1629 04AE                    i1l1637 04C6                    i1l1639 04CE  
                  u122_20 0438                    i1l1681 0438                    u122_21 0437  
                  i1l1673 0427                    i1l1683 0439                    i1l1675 042B  
                  i1l1685 043F                    i1l1677 042C                    i1l1687 0445  
                  i1l1679 0432                    u123_20 0445                    i1l1689 0446  
                  u123_21 0444                    u117_20 04AE                    u117_21 04AD  
                  u118_20 0476                    u118_21 0475                    u119_20 04CE  
                  u119_21 04CD                    _T0_int 04A4                    _T1_int 046A  
                  _T2_int 04C6            __CFG_PWRTE$OFF 0000      __size_of_lcd_dataReg 0036  
       __end_of_T0_status 04E8          __end_of_lcd_init 03BA                 ??___awdiv 0076  
               ??___awmod 0076      __size_of_lcd_instReg 008B                    delay@t 0072  
        ___awdiv@quotient 0022           ___awmod@divisor 0072           ___awmod@counter 0077  
               ??_lcd_num 0028                    saved_w 007E   __end_of__initialization 001D  
          __pcstackCOMMON 0070                 ?_T0_pause 0070                 ?_T0_start 0072  
           __end_of_delay 046A             __end_of_tempo 02A5                __end_of_b0 04EE  
          _OPTION_REGbits 0081                   ??_delay 0074        __size_of_lcd_print 0037  
                 ??_tempo 0020                __pbssBANK0 0034                   ?_T0_int 0070  
                 ?_T1_int 0070                   ?_T2_int 0070                __pmaintext 010F  
              ??_T0_pause 0072                ??_T0_start 0074                __pintentry 0004  
               T0_start@c 0072                _lcd_lincol 0491                _botao_init 04EE  
                 _T0_init 04B6                   _T0_play 04F3                   _T0count 0038  
                 _T1count 0036                   _T2count 0034                 ?_lcd_init 0070  
              __stringtab 047E           __size_of_T0_int 0012           __size_of_T1_int 0014  
         __size_of_T2_int 0010         __end_of_lcd_print 03F1                   ___awdiv 02A5  
                 ___awmod 0318                   __ptext1 0225                   __ptext2 04E0  
                 __ptext3 04D6                   __ptext4 03BA                   __ptext5 0021  
                 __ptext6 0491                   __ptext7 03F1                   __ptext8 0318  
                 __ptext9 02A5                   _lcd_num 0021                 _T1CONbits 0010  
               _T2CONbits 0012              __size_of_isr 002C          ___awmod@dividend 0074  
              ??_lcd_init 0075      end_of_initialization 001D                 _T0_status 04E0  
               _PORTDbits 0008               ?_lcd_lincol 0075                 _TRISDbits 0088  
             ?_botao_init 0070             ??_lcd_dataReg 0072                lcd_num@col 0024  
              lcd_num@div 002E                lcd_num@lin 002B                lcd_num@tam 0027  
              lcd_num@num 0025            __end_of_T0_int 04B6            __end_of_T1_int 047E  
          __end_of_T2_int 04D6             ??_lcd_instReg 0072                ?_T0_status 0072  
       __size_of_T0_pause 0002         __size_of_T0_start 000A       start_initialization 000F  
             __end_of_isr 0453                  ??_T0_int 0070                  ??_T1_int 0070  
                ??_T2_int 0070  __CFG_FOSC$INTRC_NOCLKOUT 0000       __end_of_lcd_dataReg 0427  
     __size_of_lcd_lincol 0013       __size_of_botao_init 0005       __end_of_lcd_instReg 0225  
             __pbssCOMMON 007A                 ___latbits 0002             __pcstackBANK0 0020  
                ?_T0_init 0070                  ?_T0_play 0070         __size_of_lcd_init 003F  
                ?___awdiv 0072                  ?___awmod 0072               ??_T0_status 0074  
               __pstrings 047E                 _lcd_print 03BA                  ?_lcd_num 0024  
          __size_of_delay 0017            __size_of_tempo 0080               __size_of_b0 0006  
       interrupt_function 0004               _lcd_dataReg 03F1                  _PIE1bits 008C  
                _PIR1bits 000C               _lcd_instReg 019A                  _T0_pause 04F5  
                _T0_start 04D6                ?_lcd_print 0078               __stringbase 0483  
            ??_lcd_lincol 0076              ??_botao_init 0072          __size_of_T0_init 0010  
        __size_of_T0_play 0002        __end_of_lcd_lincol 04A4        __end_of_botao_init 04F3  
        __size_of___awdiv 0073          __size_of___awmod 0063        __end_of__stringtab 0484  
        __size_of_lcd_num 00EE                  __ptext10 037B                  __ptext11 019A  
                __ptext20 046A                  __ptext12 0453                  __ptext21 04A4  
                __ptext13 04EE                  __ptext14 04E8                  __ptext15 04F3  
                __ptext16 04F5                  __ptext17 04B6                  __ptext18 0427  
                __ptext19 04C6         __CFG_BOR4V$BOR40V 0000                  _lcd_init 037B  
           __size_of_main 008B               ??_lcd_print 0020                _INTCONbits 000B  
                intlevel1 0000                 stringcode 047E                  stringdir 047E  
                stringtab 047E              ?_lcd_dataReg 0070              ?_lcd_instReg 0070  
