

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Mar 25 11:12:20 2022

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     	FNCALL	_main,_T0_init
  1024                           	FNCALL	_main,_T0_start
  1025                           	FNCALL	_main,_T0_status
  1026                           	FNCALL	_main,___awmod
  1027                           	FNCALL	_main,_lcd_init
  1028                           	FNCALL	_main,_lcd_num
  1029                           	FNCALL	_main,_lcd_print
  1030                           	FNCALL	_lcd_print,_lcd_dataReg
  1031                           	FNCALL	_lcd_print,_lcd_lincol
  1032                           	FNCALL	_lcd_num,___awdiv
  1033                           	FNCALL	_lcd_num,___awmod
  1034                           	FNCALL	_lcd_num,_lcd_dataReg
  1035                           	FNCALL	_lcd_num,_lcd_lincol
  1036                           	FNCALL	_lcd_lincol,_lcd_instReg
  1037                           	FNCALL	_lcd_init,_delay
  1038                           	FNCALL	_lcd_init,_lcd_instReg
  1039                           	FNROOT	_main
  1040                           	FNCALL	_isr,_T0_int
  1041                           	FNCALL	_isr,_T1_int
  1042                           	FNCALL	_isr,_T2_int
  1043                           	FNCALL	intlevel1,_isr
  1044                           	global	intlevel1
  1045                           	FNROOT	intlevel1
  1046                           	global	_seg
  1047                           	global	_min
  1048                           	global	_T2count
  1049                           	global	_T1count
  1050                           	global	_T0count
  1051                           	global	_PORTD
  1052                           _PORTD	set	0x8
  1053  0008                     	global	_PORTDbits
  1054                           _PORTDbits	set	0x8
  1055  0008                     	global	_PIR1bits
  1056                           _PIR1bits	set	0xC
  1057  000C                     	global	_T2CONbits
  1058                           _T2CONbits	set	0x12
  1059  0012                     	global	_TMR2
  1060                           _TMR2	set	0x11
  1061  0011                     	global	_TMR1L
  1062                           _TMR1L	set	0xE
  1063  000E                     	global	_TMR1H
  1064                           _TMR1H	set	0xF
  1065  000F                     	global	_T1CONbits
  1066                           _T1CONbits	set	0x10
  1067  0010                     	global	_TMR0
  1068                           _TMR0	set	0x1
  1069  0001                     	global	_INTCONbits
  1070                           _INTCONbits	set	0xB
  1071  000B                     	global	_TRISDbits
  1072                           _TRISDbits	set	0x88
  1073  0088                     	global	_PR2
  1074                           _PR2	set	0x92
  1075  0092                     	global	_PIE1bits
  1076                           _PIE1bits	set	0x8C
  1077  008C                     	global	_OPTION_REGbits
  1078                           _OPTION_REGbits	set	0x81
  1079  0081                     psect	strings,class=STRING,delta=2,noexec
  1080                           global __pstrings
  1081                           __pstrings:
  1082  03D3                     stringtab:
  1083  03D3                     	global    __stringtab
  1084                           __stringtab:
  1085  03D3                     ;	String table - string pointers are 1 byte each
  1086                           stringcode:stringdir:
  1087  03D3                     movlw high(stringdir)
      + 03D3                     stringdir:	
  1088  03D3  3003               movwf pclath
  1089  03D4  008A               movf fsr,w
  1090  03D5  0804               incf fsr
  1091  03D6  0A84               	addwf pc
  1092  03D7  0782               	global __stringbase
  1093                           __stringbase:
  1094  03D8                     	retlw	0
  1095  03D8  3400               psect	strings
  1096                           	global    __end_of__stringtab
  1097                           __end_of__stringtab:
  1098  03D9                     	
  1099                           STR_2:	
  1100  03D9                     	retlw	32	;' '
  1101  03D9  3420               	retlw	84	;'T'
  1102  03DA  3454               	retlw	48	;'0'
  1103  03DB  3430               	retlw	32	;' '
  1104  03DC  3420               	retlw	32	;' '
  1105  03DD  3420               	retlw	32	;' '
  1106  03DE  3420               	retlw	32	;' '
  1107  03DF  3420               	retlw	84	;'T'
  1108  03E0  3454               	retlw	49	;'1'
  1109  03E1  3431               	retlw	32	;' '
  1110  03E2  3420               	retlw	32	;' '
  1111  03E3  3420               	retlw	32	;' '
  1112  03E4  3420               	retlw	32	;' '
  1113  03E5  3420               	retlw	84	;'T'
  1114  03E6  3454               	retlw	50	;'2'
  1115  03E7  3432               	retlw	32	;' '
  1116  03E8  3420               	retlw	0
  1117  03E9  3400               psect	strings
  1118                           	
  1119                           STR_1:	
  1120  03EA                     	retlw	84	;'T'
  1121  03EA  3454               	retlw	101	;'e'
  1122  03EB  3465               	retlw	109	;'m'
  1123  03EC  346D               	retlw	112	;'p'
  1124  03ED  3470               	retlw	111	;'o'
  1125  03EE  346F               	retlw	58	;':'
  1126  03EF  343A               	retlw	32	;' '
  1127  03F0  3420               	retlw	32	;' '
  1128  03F1  3420               	retlw	32	;' '
  1129  03F2  3420               	retlw	58	;':'
  1130  03F3  343A               	retlw	32	;' '
  1131  03F4  3420               	retlw	32	;' '
  1132  03F5  3420               	retlw	32	;' '
  1133  03F6  3420               	retlw	0
  1134  03F7  3400               psect	strings
  1135                           ; #config settings
  1136                           global __CFG_FOSC$INTRC_NOCLKOUT
  1137                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1138  0000                     global __CFG_WDTE$OFF
  1139                           __CFG_WDTE$OFF equ 0x0
  1140  0000                     global __CFG_PWRTE$OFF
  1141                           __CFG_PWRTE$OFF equ 0x0
  1142  0000                     global __CFG_MCLRE$OFF
  1143                           __CFG_MCLRE$OFF equ 0x0
  1144  0000                     global __CFG_CP$OFF
  1145                           __CFG_CP$OFF equ 0x0
  1146  0000                     global __CFG_CPD$OFF
  1147                           __CFG_CPD$OFF equ 0x0
  1148  0000                     global __CFG_BOREN$OFF
  1149                           __CFG_BOREN$OFF equ 0x0
  1150  0000                     global __CFG_IESO$OFF
  1151                           __CFG_IESO$OFF equ 0x0
  1152  0000                     global __CFG_FCMEN$OFF
  1153                           __CFG_FCMEN$OFF equ 0x0
  1154  0000                     global __CFG_LVP$OFF
  1155                           __CFG_LVP$OFF equ 0x0
  1156  0000                     global __CFG_BOR4V$BOR40V
  1157                           __CFG_BOR4V$BOR40V equ 0x0
  1158  0000                     global __CFG_WRT$OFF
  1159                           __CFG_WRT$OFF equ 0x0
  1160  0000                     	file	"C:\Users\21193459\AppData\Local\Temp\saus."
  1161                           	line	#
  1162                           psect cinit,class=CODE,delta=2
  1163                           global start_initialization
  1164                           start_initialization:
  1165  000F                     
  1166                           global __initialization
  1167                           __initialization:
  1168  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1169                           global __pbssCOMMON
  1170                           __pbssCOMMON:
  1171  007A                     _seg:
  1172  007A                            ds      1
  1173  007A                     
  1174                           _min:
  1175  007B                            ds      1
  1176  007B                     
  1177                           psect	bssBANK0,class=BANK0,space=1,noexec
  1178                           global __pbssBANK0
  1179                           __pbssBANK0:
  1180  0034                     _T2count:
  1181  0034                            ds      2
  1182  0034                     
  1183                           _T1count:
  1184  0036                            ds      2
  1185  0036                     
  1186                           _T0count:
  1187  0038                            ds      2
  1188  0038                     
  1189                           	file	"C:\Users\21193459\AppData\Local\Temp\saus."
  1190                           	line	#
  1191                           ; Clear objects allocated to COMMON
  1192                           psect cinit,class=CODE,delta=2,merge=1
  1193                           	clrf	((__pbssCOMMON)+0)&07Fh
  1194  000F  01FA               	clrf	((__pbssCOMMON)+1)&07Fh
  1195  0010  01FB               ; Clear objects allocated to BANK0
  1196                           psect cinit,class=CODE,delta=2,merge=1
  1197                           	bcf	status, 5	;RP0=0, select bank0
  1198  0011  1283               	bcf	status, 6	;RP1=0, select bank0
  1199  0012  1303               	clrf	((__pbssBANK0)+0)&07Fh
  1200  0013  01B4               	clrf	((__pbssBANK0)+1)&07Fh
  1201  0014  01B5               	clrf	((__pbssBANK0)+2)&07Fh
  1202  0015  01B6               	clrf	((__pbssBANK0)+3)&07Fh
  1203  0016  01B7               	clrf	((__pbssBANK0)+4)&07Fh
  1204  0017  01B8               	clrf	((__pbssBANK0)+5)&07Fh
  1205  0018  01B9               psect cinit,class=CODE,delta=2,merge=1
  1206                           global end_of_initialization,__end_of__initialization
  1207                           
  1208                           ;End of C runtime variable initialization code
  1209                           
  1210                           end_of_initialization:
  1211  0019                     __end_of__initialization:
  1212  0019                     clrf status
  1213  0019  0183               ljmp _main	;jump to C main() function
  1214  001A  120A  118A  290B   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1215                           global __pcstackCOMMON
  1216                           __pcstackCOMMON:
  1217  0070                     ?_lcd_init:	; 1 bytes @ 0x0
  1218  0070                     ?_T0_init:	; 1 bytes @ 0x0
  1219  0070                     ?_main:	; 1 bytes @ 0x0
  1220  0070                     ?_T0_int:	; 1 bytes @ 0x0
  1221  0070                     ??_T0_int:	; 1 bytes @ 0x0
  1222  0070                     ?_T1_int:	; 1 bytes @ 0x0
  1223  0070                     ??_T1_int:	; 1 bytes @ 0x0
  1224  0070                     ?_T2_int:	; 1 bytes @ 0x0
  1225  0070                     ??_T2_int:	; 1 bytes @ 0x0
  1226  0070                     ?_isr:	; 1 bytes @ 0x0
  1227  0070                     ??_isr:	; 1 bytes @ 0x0
  1228  0070                     ?_lcd_instReg:	; 1 bytes @ 0x0
  1229  0070                     ?_lcd_dataReg:	; 1 bytes @ 0x0
  1230  0070                     	ds	2
  1231  0070                     ??_T0_init:	; 1 bytes @ 0x2
  1232  0072                     ?_T0_start:	; 1 bytes @ 0x2
  1233  0072                     ?_delay:	; 1 bytes @ 0x2
  1234  0072                     ??_lcd_instReg:	; 1 bytes @ 0x2
  1235  0072                     ??_lcd_dataReg:	; 1 bytes @ 0x2
  1236  0072                     	global	?_T0_status
  1237                           ?_T0_status:	; 2 bytes @ 0x2
  1238  0072                     	global	?___awdiv
  1239                           ?___awdiv:	; 2 bytes @ 0x2
  1240  0072                     	global	?___awmod
  1241                           ?___awmod:	; 2 bytes @ 0x2
  1242  0072                     	global	T0_start@c
  1243                           T0_start@c:	; 2 bytes @ 0x2
  1244  0072                     	global	delay@t
  1245                           delay@t:	; 2 bytes @ 0x2
  1246  0072                     	global	___awdiv@divisor
  1247                           ___awdiv@divisor:	; 2 bytes @ 0x2
  1248  0072                     	global	___awmod@divisor
  1249                           ___awmod@divisor:	; 2 bytes @ 0x2
  1250  0072                     	ds	2
  1251  0072                     ??_T0_start:	; 1 bytes @ 0x4
  1252  0074                     ??_T0_status:	; 1 bytes @ 0x4
  1253  0074                     ??_delay:	; 1 bytes @ 0x4
  1254  0074                     	global	lcd_instReg@i
  1255                           lcd_instReg@i:	; 1 bytes @ 0x4
  1256  0074                     	global	lcd_dataReg@d
  1257                           lcd_dataReg@d:	; 1 bytes @ 0x4
  1258  0074                     	global	___awdiv@dividend
  1259                           ___awdiv@dividend:	; 2 bytes @ 0x4
  1260  0074                     	global	___awmod@dividend
  1261                           ___awmod@dividend:	; 2 bytes @ 0x4
  1262  0074                     	ds	1
  1263  0074                     ??_lcd_init:	; 1 bytes @ 0x5
  1264  0075                     ?_lcd_lincol:	; 1 bytes @ 0x5
  1265  0075                     	global	lcd_lincol@col
  1266                           lcd_lincol@col:	; 1 bytes @ 0x5
  1267  0075                     	ds	1
  1268  0075                     ??_lcd_lincol:	; 1 bytes @ 0x6
  1269  0076                     ??___awdiv:	; 1 bytes @ 0x6
  1270  0076                     ??___awmod:	; 1 bytes @ 0x6
  1271  0076                     	ds	1
  1272  0076                     	global	lcd_lincol@lin
  1273                           lcd_lincol@lin:	; 1 bytes @ 0x7
  1274  0077                     	global	___awmod@counter
  1275                           ___awmod@counter:	; 1 bytes @ 0x7
  1276  0077                     	ds	1
  1277  0077                     ?_lcd_print:	; 1 bytes @ 0x8
  1278  0078                     	global	lcd_print@col
  1279                           lcd_print@col:	; 1 bytes @ 0x8
  1280  0078                     	global	___awmod@sign
  1281                           ___awmod@sign:	; 1 bytes @ 0x8
  1282  0078                     	ds	1
  1283  0078                     	global	lcd_print@str
  1284                           lcd_print@str:	; 1 bytes @ 0x9
  1285  0079                     	ds	1
  1286  0079                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1287                           global __pcstackBANK0
  1288                           __pcstackBANK0:
  1289  0020                     ??_lcd_print:	; 1 bytes @ 0x0
  1290  0020                     	global	___awdiv@counter
  1291                           ___awdiv@counter:	; 1 bytes @ 0x0
  1292  0020                     	ds	1
  1293  0020                     	global	lcd_print@pos
  1294                           lcd_print@pos:	; 1 bytes @ 0x1
  1295  0021                     	global	___awdiv@sign
  1296                           ___awdiv@sign:	; 1 bytes @ 0x1
  1297  0021                     	ds	1
  1298  0021                     	global	lcd_print@lin
  1299                           lcd_print@lin:	; 1 bytes @ 0x2
  1300  0022                     	global	___awdiv@quotient
  1301                           ___awdiv@quotient:	; 2 bytes @ 0x2
  1302  0022                     	ds	2
  1303  0022                     ?_lcd_num:	; 1 bytes @ 0x4
  1304  0024                     	global	lcd_num@col
  1305                           lcd_num@col:	; 1 bytes @ 0x4
  1306  0024                     	ds	1
  1307  0024                     	global	lcd_num@num
  1308                           lcd_num@num:	; 2 bytes @ 0x5
  1309  0025                     	ds	2
  1310  0025                     	global	lcd_num@tam
  1311                           lcd_num@tam:	; 1 bytes @ 0x7
  1312  0027                     	ds	1
  1313  0027                     ??_lcd_num:	; 1 bytes @ 0x8
  1314  0028                     	ds	3
  1315  0028                     	global	lcd_num@lin
  1316                           lcd_num@lin:	; 1 bytes @ 0xB
  1317  002B                     	ds	1
  1318  002B                     	global	lcd_num@size
  1319                           lcd_num@size:	; 1 bytes @ 0xC
  1320  002C                     	ds	1
  1321  002C                     	global	lcd_num@sinal
  1322                           lcd_num@sinal:	; 1 bytes @ 0xD
  1323  002D                     	ds	1
  1324  002D                     	global	lcd_num@div
  1325                           lcd_num@div:	; 2 bytes @ 0xE
  1326  002E                     	ds	2
  1327  002E                     ??_main:	; 1 bytes @ 0x10
  1328  0030                     	ds	4
  1329  0030                     ;!
  1330                           ;!Data Sizes:
  1331                           ;!    Strings     31
  1332                           ;!    Constant    0
  1333                           ;!    Data        0
  1334                           ;!    BSS         8
  1335                           ;!    Persistent  0
  1336                           ;!    Stack       0
  1337                           ;!
  1338                           ;!Auto Spaces:
  1339                           ;!    Space          Size  Autos    Used
  1340                           ;!    COMMON           14     10      12
  1341                           ;!    BANK0            80     20      26
  1342                           ;!    BANK1            80      0       0
  1343                           ;!    BANK3            96      0       0
  1344                           ;!    BANK2            96      0       0
  1345                           
  1346                           ;!
  1347                           ;!Pointer List with Targets:
  1348                           ;!
  1349                           ;!    lcd_print@str	PTR const unsigned char  size(1) Largest target is 17
  1350                           ;!		 -> STR_2(CODE[17]), STR_1(CODE[14]), 
  1351                           ;!
  1352                           
  1353                           
  1354                           ;!
  1355                           ;!Critical Paths under _main in COMMON
  1356                           ;!
  1357                           ;!    _main->_lcd_print
  1358                           ;!    _lcd_print->_lcd_lincol
  1359                           ;!    _lcd_num->___awmod
  1360                           ;!    _lcd_lincol->_lcd_instReg
  1361                           ;!    _lcd_init->_delay
  1362                           ;!    _lcd_init->_lcd_instReg
  1363                           ;!
  1364                           ;!Critical Paths under _isr in COMMON
  1365                           ;!
  1366                           ;!    None.
  1367                           ;!
  1368                           ;!Critical Paths under _main in BANK0
  1369                           ;!
  1370                           ;!    _main->_lcd_num
  1371                           ;!    _lcd_num->___awdiv
  1372                           ;!
  1373                           ;!Critical Paths under _isr in BANK0
  1374                           ;!
  1375                           ;!    None.
  1376                           ;!
  1377                           ;!Critical Paths under _main in BANK1
  1378                           ;!
  1379                           ;!    None.
  1380                           ;!
  1381                           ;!Critical Paths under _isr in BANK1
  1382                           ;!
  1383                           ;!    None.
  1384                           ;!
  1385                           ;!Critical Paths under _main in BANK3
  1386                           ;!
  1387                           ;!    None.
  1388                           ;!
  1389                           ;!Critical Paths under _isr in BANK3
  1390                           ;!
  1391                           ;!    None.
  1392                           ;!
  1393                           ;!Critical Paths under _main in BANK2
  1394                           ;!
  1395                           ;!    None.
  1396                           ;!
  1397                           ;!Critical Paths under _isr in BANK2
  1398                           ;!
  1399                           ;!    None.
  1400                           
  1401 ;;
  1402 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1403 ;;
  1404                           
  1405                           ;!
  1406                           ;!Call Graph Tables:
  1407                           ;!
  1408                           ;! ---------------------------------------------------------------------------------
  1409                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1410                           ;! ---------------------------------------------------------------------------------
  1411                           ;! (0) _main                                                 4     4      0    6395
  1412                           ;!                                             16 BANK0      4     4      0
  1413                           ;!                            _T0_init
  1414                           ;!                           _T0_start
  1415                           ;!                          _T0_status
  1416                           ;!                            ___awmod
  1417                           ;!                           _lcd_init
  1418                           ;!                            _lcd_num
  1419                           ;!                          _lcd_print
  1420                           ;! ---------------------------------------------------------------------------------
  1421                           ;! (1) _lcd_print                                            5     3      2     940
  1422                           ;!                                              8 COMMON     2     0      2
  1423                           ;!                                              0 BANK0      3     3      0
  1424                           ;!                        _lcd_dataReg
  1425                           ;!                         _lcd_lincol
  1426                           ;! ---------------------------------------------------------------------------------
  1427                           ;! (1) _lcd_num                                             12     8      4    4178
  1428                           ;!                                              4 BANK0     12     8      4
  1429                           ;!                            ___awdiv
  1430                           ;!                            ___awmod
  1431                           ;!                        _lcd_dataReg
  1432                           ;!                         _lcd_lincol
  1433                           ;! ---------------------------------------------------------------------------------
  1434                           ;! (2) _lcd_lincol                                           3     2      1     372
  1435                           ;!                                              5 COMMON     3     2      1
  1436                           ;!                        _lcd_instReg
  1437                           ;! ---------------------------------------------------------------------------------
  1438                           ;! (2) _lcd_dataReg                                          3     3      0      44
  1439                           ;!                                              2 COMMON     3     3      0
  1440                           ;! ---------------------------------------------------------------------------------
  1441                           ;! (2) ___awmod                                              7     3      4     600
  1442                           ;!                                              2 COMMON     7     3      4
  1443                           ;! ---------------------------------------------------------------------------------
  1444                           ;! (2) ___awdiv                                              9     5      4    1165
  1445                           ;!                                              2 COMMON     5     1      4
  1446                           ;!                                              0 BANK0      4     4      0
  1447                           ;! ---------------------------------------------------------------------------------
  1448                           ;! (1) _lcd_init                                             0     0      0     427
  1449                           ;!                              _delay
  1450                           ;!                        _lcd_instReg
  1451                           ;! ---------------------------------------------------------------------------------
  1452                           ;! (3) _lcd_instReg                                          3     3      0     176
  1453                           ;!                                              2 COMMON     3     3      0
  1454                           ;! ---------------------------------------------------------------------------------
  1455                           ;! (2) _delay                                                3     1      2     251
  1456                           ;!                                              2 COMMON     3     1      2
  1457                           ;! ---------------------------------------------------------------------------------
  1458                           ;! (1) _T0_status                                            2     0      2       0
  1459                           ;!                                              2 COMMON     2     0      2
  1460                           ;! ---------------------------------------------------------------------------------
  1461                           ;! (1) _T0_start                                             2     0      2     250
  1462                           ;!                                              2 COMMON     2     0      2
  1463                           ;! ---------------------------------------------------------------------------------
  1464                           ;! (1) _T0_init                                              0     0      0       0
  1465                           ;! ---------------------------------------------------------------------------------
  1466                           ;! Estimated maximum stack depth 3
  1467                           ;! ---------------------------------------------------------------------------------
  1468                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1469                           ;! ---------------------------------------------------------------------------------
  1470                           ;! (4) _isr                                                  2     2      0       0
  1471                           ;!                                              0 COMMON     2     2      0
  1472                           ;!                             _T0_int
  1473                           ;!                             _T1_int
  1474                           ;!                             _T2_int
  1475                           ;! ---------------------------------------------------------------------------------
  1476                           ;! (5) _T2_int                                               0     0      0       0
  1477                           ;! ---------------------------------------------------------------------------------
  1478                           ;! (5) _T1_int                                               0     0      0       0
  1479                           ;! ---------------------------------------------------------------------------------
  1480                           ;! (5) _T0_int                                               0     0      0       0
  1481                           ;! ---------------------------------------------------------------------------------
  1482                           ;! Estimated maximum stack depth 5
  1483                           ;! ---------------------------------------------------------------------------------
  1484                           ;!
  1485                           ;! Call Graph Graphs:
  1486                           ;!
  1487                           ;! _main (ROOT)
  1488                           ;!   _T0_init
  1489                           ;!   _T0_start
  1490                           ;!   _T0_status
  1491                           ;!   ___awmod
  1492                           ;!   _lcd_init
  1493                           ;!     _delay
  1494                           ;!     _lcd_instReg
  1495                           ;!   _lcd_num
  1496                           ;!     ___awdiv
  1497                           ;!     ___awmod
  1498                           ;!     _lcd_dataReg
  1499                           ;!     _lcd_lincol
  1500                           ;!       _lcd_instReg
  1501                           ;!   _lcd_print
  1502                           ;!     _lcd_dataReg
  1503                           ;!     _lcd_lincol
  1504                           ;!       _lcd_instReg
  1505                           ;!
  1506                           ;! _isr (ROOT)
  1507                           ;!   _T0_int
  1508                           ;!   _T1_int
  1509                           ;!   _T2_int
  1510                           ;!
  1511                           
  1512                           ;! Address spaces:
  1513                           
  1514                           ;!Name               Size   Autos  Total    Cost      Usage
  1515                           ;!BITCOMMON            E      0       0       0        0.0%
  1516                           ;!EEDATA             100      0       0       0        0.0%
  1517                           ;!NULL                 0      0       0       0        0.0%
  1518                           ;!CODE                 0      0       0       0        0.0%
  1519                           ;!COMMON               E      A       C       1       85.7%
  1520                           ;!BITSFR0              0      0       0       1        0.0%
  1521                           ;!SFR0                 0      0       0       1        0.0%
  1522                           ;!BITSFR1              0      0       0       2        0.0%
  1523                           ;!SFR1                 0      0       0       2        0.0%
  1524                           ;!STACK                0      0       0       2        0.0%
  1525                           ;!ABS                  0      0      26       3        0.0%
  1526                           ;!BITBANK0            50      0       0       4        0.0%
  1527                           ;!BITSFR3              0      0       0       4        0.0%
  1528                           ;!SFR3                 0      0       0       4        0.0%
  1529                           ;!BANK0               50     14      1A       5       32.5%
  1530                           ;!BITSFR2              0      0       0       5        0.0%
  1531                           ;!SFR2                 0      0       0       5        0.0%
  1532                           ;!BITBANK1            50      0       0       6        0.0%
  1533                           ;!BANK1               50      0       0       7        0.0%
  1534                           ;!BITBANK3            60      0       0       8        0.0%
  1535                           ;!BANK3               60      0       0       9        0.0%
  1536                           ;!BITBANK2            60      0       0      10        0.0%
  1537                           ;!BANK2               60      0       0      11        0.0%
  1538                           ;!DATA                 0      0      26      12        0.0%
  1539                           
  1540                           	global	_main
  1541                           
  1542 ;; *************** function _main *****************
  1543 ;; Defined at:
  1544 ;;		line 17 in file "main.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;		None
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : B00/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1558 ;;      Params:         0       0       0       0       0
  1559 ;;      Locals:         0       0       0       0       0
  1560 ;;      Temps:          0       4       0       0       0
  1561 ;;      Totals:         0       4       0       0       0
  1562 ;;Total ram usage:        4 bytes
  1563 ;; Hardware stack levels required when called:    5
  1564 ;; This function calls:
  1565 ;;		_T0_init
  1566 ;;		_T0_start
  1567 ;;		_T0_status
  1568 ;;		___awmod
  1569 ;;		_lcd_init
  1570 ;;		_lcd_num
  1571 ;;		_lcd_print
  1572 ;; This function is called by:
  1573 ;;		Startup code after reset
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1577                           	file	"main.c"
  1578                           	line	17
  1579                           global __pmaintext
  1580                           __pmaintext:	;psect for function _main
  1581  010B                     psect	maintext
  1582                           	file	"main.c"
  1583                           	line	17
  1584                           	global	__size_of_main
  1585                           	__size_of_main	equ	__end_of_main-_main
  1586  008F                     	
  1587                           _main:	
  1588  010B                     ;incstack = 0
  1589                           	opt	stack 3
  1590                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1591                           	line	19
  1592                           	
  1593                           l1543:	
  1594  010B                     ;main.c: 19:     lcd_init();
  1595                           	fcall	_lcd_init
  1596  010B  120A  118A  22FB  120A  118A  	line	20
  1597                           ;main.c: 20:     T0_init();
  1598                           	fcall	_T0_init
  1599  0110  120A  118A  2448  120A  118A  	line	22
  1600                           	
  1601                           l1545:	
  1602  0115                     ;main.c: 22:     lcd_print(0,0,"Tempo:   :   ");
  1603                           	clrf	(lcd_print@col)
  1604  0115  01F8               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1605  0116  3012               	bcf	status, 5	;RP0=0, select bank0
  1606  0117  1283               	bcf	status, 6	;RP1=0, select bank0
  1607  0118  1303               	movwf	(??_main+0)+0
  1608  0119  00B0               	movf	(??_main+0)+0,w
  1609  011A  0830               	movwf	(lcd_print@str)
  1610  011B  00F9               	movlw	low(0)
  1611  011C  3000               	fcall	_lcd_print
  1612  011D  120A  118A  233A  120A  118A  	line	23
  1613                           	
  1614                           l1547:	
  1615  0122                     ;main.c: 23:     T0_start(1000);
  1616                           	movlw	0E8h
  1617  0122  30E8               	movwf	(T0_start@c)
  1618  0123  00F2               	movlw	03h
  1619  0124  3003               	movwf	((T0_start@c))+1
  1620  0125  00F3               	fcall	_T0_start
  1621  0126  120A  118A  2468  120A  118A  	goto	l1549
  1622  012B  292C               	line	25
  1623                           ;main.c: 25:     while( 1 )
  1624                           	
  1625                           l33:	
  1626  012C                     	line	27
  1627                           	
  1628                           l1549:	
  1629  012C                     ;main.c: 26:     {;main.c: 27:         if( T0_status() == 0 )
  1630                           	fcall	_T0_status
  1631  012C  120A  118A  2472  120A  118A  	movf	((0+(?_T0_status))),w
  1632  0131  0872               iorwf	((1+(?_T0_status))),w
  1633  0132  0473               	btfss	status,2
  1634  0133  1D03               	goto	u1251
  1635  0134  2936               	goto	u1250
  1636  0135  2937               u1251:
  1637  0136                     	goto	l1557
  1638  0136  2967               u1250:
  1639  0137                     	line	29
  1640                           	
  1641                           l1551:	
  1642  0137                     ;main.c: 28:         {;main.c: 29:             T0_start(1000);
  1643                           	movlw	0E8h
  1644  0137  30E8               	movwf	(T0_start@c)
  1645  0138  00F2               	movlw	03h
  1646  0139  3003               	movwf	((T0_start@c))+1
  1647  013A  00F3               	fcall	_T0_start
  1648  013B  120A  118A  2468  120A  118A  	line	30
  1649                           ;main.c: 30:             seg = ++seg % 60;
  1650                           	movlw	03Ch
  1651  0140  303C               	movwf	(___awmod@divisor)
  1652  0141  00F2               	movlw	0
  1653  0142  3000               	movwf	((___awmod@divisor))+1
  1654  0143  00F3               	movlw	low(01h)
  1655  0144  3001               	bcf	status, 5	;RP0=0, select bank0
  1656  0145  1283               	bcf	status, 6	;RP1=0, select bank0
  1657  0146  1303               	movwf	(??_main+0)+0
  1658  0147  00B0               	movf	(??_main+0)+0,w
  1659  0148  0830               	addwf	(_seg),f
  1660  0149  07FA               	movf	((_seg)),w
  1661  014A  087A               	movwf	(??_main+1)+0
  1662  014B  00B1               	clrf	(??_main+1)+0+1
  1663  014C  01B2               	movf	0+(??_main+1)+0,w
  1664  014D  0831               	movwf	(___awmod@dividend)
  1665  014E  00F4               	movf	1+(??_main+1)+0,w
  1666  014F  0832               	movwf	(___awmod@dividend+1)
  1667  0150  00F5               	fcall	___awmod
  1668  0151  120A  118A  2298  120A  118A  	movf	(0+(?___awmod)),w
  1669  0156  0872               	bcf	status, 5	;RP0=0, select bank0
  1670  0157  1283               	bcf	status, 6	;RP1=0, select bank0
  1671  0158  1303               	movwf	(??_main+3)+0
  1672  0159  00B3               	movf	(??_main+3)+0,w
  1673  015A  0833               	movwf	(_seg)
  1674  015B  00FA               	line	31
  1675                           	
  1676                           l1553:	
  1677  015C                     ;main.c: 31:             if( seg == 0 )
  1678                           	movf	((_seg)),w
  1679  015C  087A               	btfss	status,2
  1680  015D  1D03               	goto	u1261
  1681  015E  2960               	goto	u1260
  1682  015F  2961               u1261:
  1683  0160                     	goto	l1557
  1684  0160  2967               u1260:
  1685  0161                     	line	33
  1686                           	
  1687                           l1555:	
  1688  0161                     ;main.c: 32:             {;main.c: 33:                 ++min;
  1689                           	movlw	low(01h)
  1690  0161  3001               	movwf	(??_main+0)+0
  1691  0162  00B0               	movf	(??_main+0)+0,w
  1692  0163  0830               	addwf	(_min),f
  1693  0164  07FB               	goto	l1557
  1694  0165  2967               	line	34
  1695                           ;main.c: 34:             }
  1696                           	
  1697                           l35:	
  1698  0166                     	goto	l1557
  1699  0166  2967               	line	35
  1700                           ;main.c: 35:         }
  1701                           	
  1702                           l34:	
  1703  0167                     	line	36
  1704                           	
  1705                           l1557:	
  1706  0167                     ;main.c: 36:         lcd_num(0, 7, min, 2);
  1707                           	movlw	low(07h)
  1708  0167  3007               	bcf	status, 5	;RP0=0, select bank0
  1709  0168  1283               	bcf	status, 6	;RP1=0, select bank0
  1710  0169  1303               	movwf	(??_main+0)+0
  1711  016A  00B0               	movf	(??_main+0)+0,w
  1712  016B  0830               	movwf	(lcd_num@col)
  1713  016C  00A4               	movf	(_min),w
  1714  016D  087B               	movwf	(??_main+1)+0
  1715  016E  00B1               	clrf	(??_main+1)+0+1
  1716  016F  01B2               	movf	0+(??_main+1)+0,w
  1717  0170  0831               	movwf	(lcd_num@num)
  1718  0171  00A5               	movf	1+(??_main+1)+0,w
  1719  0172  0832               	movwf	(lcd_num@num+1)
  1720  0173  00A6               	movlw	low(02h)
  1721  0174  3002               	movwf	(??_main+3)+0
  1722  0175  00B3               	movf	(??_main+3)+0,w
  1723  0176  0833               	movwf	(lcd_num@tam)
  1724  0177  00A7               	movlw	low(0)
  1725  0178  3000               	fcall	_lcd_num
  1726  0179  120A  118A  201D  120A  118A  	line	37
  1727                           	
  1728                           l1559:	
  1729  017E                     ;main.c: 37:         lcd_num(0,10, seg, 2);
  1730                           	movlw	low(0Ah)
  1731  017E  300A               	bcf	status, 5	;RP0=0, select bank0
  1732  017F  1283               	bcf	status, 6	;RP1=0, select bank0
  1733  0180  1303               	movwf	(??_main+0)+0
  1734  0181  00B0               	movf	(??_main+0)+0,w
  1735  0182  0830               	movwf	(lcd_num@col)
  1736  0183  00A4               	movf	(_seg),w
  1737  0184  087A               	movwf	(??_main+1)+0
  1738  0185  00B1               	clrf	(??_main+1)+0+1
  1739  0186  01B2               	movf	0+(??_main+1)+0,w
  1740  0187  0831               	movwf	(lcd_num@num)
  1741  0188  00A5               	movf	1+(??_main+1)+0,w
  1742  0189  0832               	movwf	(lcd_num@num+1)
  1743  018A  00A6               	movlw	low(02h)
  1744  018B  3002               	movwf	(??_main+3)+0
  1745  018C  00B3               	movf	(??_main+3)+0,w
  1746  018D  0833               	movwf	(lcd_num@tam)
  1747  018E  00A7               	movlw	low(0)
  1748  018F  3000               	fcall	_lcd_num
  1749  0190  120A  118A  201D  120A  118A  	goto	l1549
  1750  0195  292C               	line	38
  1751                           ;main.c: 38:     }
  1752                           	
  1753                           l36:	
  1754  0196                     	goto	l1549
  1755  0196  292C               	
  1756                           l37:	
  1757  0197                     	line	39
  1758                           	
  1759                           l38:	
  1760  0197                     	global	start
  1761                           	ljmp	start
  1762  0197  120A  118A  280C   	opt stack 0
  1763                           GLOBAL	__end_of_main
  1764                           	__end_of_main:
  1765  019A                     	signat	_main,89
  1766                           	global	_lcd_print
  1767                           
  1768 ;; *************** function _lcd_print *****************
  1769 ;; Defined at:
  1770 ;;		line 156 in file "lcd.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;  lin             1    wreg     unsigned char 
  1773 ;;  col             1    8[COMMON] unsigned char 
  1774 ;;  str             1    9[COMMON] PTR const unsigned char 
  1775 ;;		 -> STR_2(17), STR_1(14), 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  lin             1    2[BANK0 ] unsigned char 
  1778 ;;  pos             1    1[BANK0 ] unsigned char 
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1788 ;;      Params:         2       0       0       0       0
  1789 ;;      Locals:         0       2       0       0       0
  1790 ;;      Temps:          0       1       0       0       0
  1791 ;;      Totals:         2       3       0       0       0
  1792 ;;Total ram usage:        5 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; Hardware stack levels required when called:    4
  1795 ;; This function calls:
  1796 ;;		_lcd_dataReg
  1797 ;;		_lcd_lincol
  1798 ;; This function is called by:
  1799 ;;		_main
  1800 ;;		_main2
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1804                           	file	"lcd.c"
  1805                           	line	156
  1806                           global __ptext1
  1807                           __ptext1:	;psect for function _lcd_print
  1808  033A                     psect	text1
  1809                           	file	"lcd.c"
  1810                           	line	156
  1811                           	global	__size_of_lcd_print
  1812                           	__size_of_lcd_print	equ	__end_of_lcd_print-_lcd_print
  1813  0037                     	
  1814                           _lcd_print:	
  1815  033A                     ;incstack = 0
  1816                           	opt	stack 3
  1817                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1818                           ;lcd_print@lin stored from wreg
  1819                           	bcf	status, 5	;RP0=0, select bank0
  1820  033A  1283               	bcf	status, 6	;RP1=0, select bank0
  1821  033B  1303               	movwf	(lcd_print@lin)
  1822  033C  00A2               	line	158
  1823                           	
  1824                           l1497:	
  1825  033D                     ;lcd.c: 156: void lcd_print( unsigned char lin, unsigned char col, const char * str );lc
                                 d.c: 157: {;lcd.c: 158:     char pos = col;
  1826                           	movf	(lcd_print@col),w
  1827  033D  0878               	movwf	(??_lcd_print+0)+0
  1828  033E  00A0               	movf	(??_lcd_print+0)+0,w
  1829  033F  0820               	movwf	(lcd_print@pos)
  1830  0340  00A1               	line	159
  1831                           	
  1832                           l1499:	
  1833  0341                     ;lcd.c: 159:     lcd_lincol( lin, col );
  1834                           	movf	(lcd_print@col),w
  1835  0341  0878               	movwf	(??_lcd_print+0)+0
  1836  0342  00A0               	movf	(??_lcd_print+0)+0,w
  1837  0343  0820               	movwf	(lcd_lincol@col)
  1838  0344  00F5               	movf	(lcd_print@lin),w
  1839  0345  0822               	fcall	_lcd_lincol
  1840  0346  120A  118A  2423  120A  118A  	line	161
  1841                           ;lcd.c: 161:     while( *str )
  1842                           	goto	l1507
  1843  034B  2B63               	
  1844                           l191:	
  1845  034C                     	line	163
  1846                           	
  1847                           l1501:	
  1848  034C                     ;lcd.c: 162:     {;lcd.c: 163:         lcd_dataReg( *str );
  1849                           	movf	(lcd_print@str),w
  1850  034C  0879               	movwf	fsr0
  1851  034D  0084               	fcall	stringdir
  1852  034E  120A  118A  23D3  120A  118A  	fcall	_lcd_dataReg
  1853  0353  120A  118A  2371  120A  118A  	line	164
  1854                           	
  1855                           l1503:	
  1856  0358                     ;lcd.c: 164:         ++str;
  1857                           	movlw	low(01h)
  1858  0358  3001               	bcf	status, 5	;RP0=0, select bank0
  1859  0359  1283               	bcf	status, 6	;RP1=0, select bank0
  1860  035A  1303               	movwf	(??_lcd_print+0)+0
  1861  035B  00A0               	movf	(??_lcd_print+0)+0,w
  1862  035C  0820               	addwf	(lcd_print@str),f
  1863  035D  07F9               	line	165
  1864                           	
  1865                           l1505:	
  1866  035E                     ;lcd.c: 165:         ++pos;
  1867                           	movlw	low(01h)
  1868  035E  3001               	movwf	(??_lcd_print+0)+0
  1869  035F  00A0               	movf	(??_lcd_print+0)+0,w
  1870  0360  0820               	addwf	(lcd_print@pos),f
  1871  0361  07A1               	goto	l1507
  1872  0362  2B63               	line	166
  1873                           ;lcd.c: 166:     }
  1874                           	
  1875                           l190:	
  1876  0363                     	line	161
  1877                           	
  1878                           l1507:	
  1879  0363                     ;lcd.c: 161:     while( *str )
  1880                           	movf	(lcd_print@str),w
  1881  0363  0879               	movwf	fsr0
  1882  0364  0084               	fcall	stringdir
  1883  0365  120A  118A  23D3  120A  118A  	xorlw	0
  1884  036A  3A00               	skipz
  1885  036B  1D03               	goto	u1151
  1886  036C  2B6E               	goto	u1150
  1887  036D  2B6F               u1151:
  1888  036E                     	goto	l1501
  1889  036E  2B4C               u1150:
  1890  036F                     	goto	l193
  1891  036F  2B70               	
  1892                           l192:	
  1893  0370                     	line	167
  1894                           	
  1895                           l193:	
  1896  0370                     	return
  1897  0370  0008               	opt stack 0
  1898                           GLOBAL	__end_of_lcd_print
  1899                           	__end_of_lcd_print:
  1900  0371                     	signat	_lcd_print,12409
  1901                           	global	_lcd_num
  1902                           
  1903 ;; *************** function _lcd_num *****************
  1904 ;; Defined at:
  1905 ;;		line 178 in file "lcd.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  lin             1    wreg     unsigned char 
  1908 ;;  col             1    4[BANK0 ] unsigned char 
  1909 ;;  num             2    5[BANK0 ] int 
  1910 ;;  tam             1    7[BANK0 ] unsigned char 
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;  lin             1   11[BANK0 ] unsigned char 
  1913 ;;  div             2   14[BANK0 ] int 
  1914 ;;  sinal           1   13[BANK0 ] unsigned char 
  1915 ;;  size            1   12[BANK0 ] unsigned char 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1925 ;;      Params:         0       4       0       0       0
  1926 ;;      Locals:         0       5       0       0       0
  1927 ;;      Temps:          0       3       0       0       0
  1928 ;;      Totals:         0      12       0       0       0
  1929 ;;Total ram usage:       12 bytes
  1930 ;; Hardware stack levels used:    1
  1931 ;; Hardware stack levels required when called:    4
  1932 ;; This function calls:
  1933 ;;		___awdiv
  1934 ;;		___awmod
  1935 ;;		_lcd_dataReg
  1936 ;;		_lcd_lincol
  1937 ;; This function is called by:
  1938 ;;		_main
  1939 ;;		_main2
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1943                           	line	178
  1944                           global __ptext2
  1945                           __ptext2:	;psect for function _lcd_num
  1946  001D                     psect	text2
  1947                           	file	"lcd.c"
  1948                           	line	178
  1949                           	global	__size_of_lcd_num
  1950                           	__size_of_lcd_num	equ	__end_of_lcd_num-_lcd_num
  1951  00EE                     	
  1952                           _lcd_num:	
  1953  001D                     ;incstack = 0
  1954                           	opt	stack 3
  1955                           ; Regs used in _lcd_num: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1956                           ;lcd_num@lin stored from wreg
  1957                           	bcf	status, 5	;RP0=0, select bank0
  1958  001D  1283               	bcf	status, 6	;RP1=0, select bank0
  1959  001E  1303               	movwf	(lcd_num@lin)
  1960  001F  00AB               	line	185
  1961                           	
  1962                           l1509:	
  1963  0020                     ;lcd.c: 178: void lcd_num( unsigned char lin, unsigned char col,;lcd.c: 179:            
                                          int num, unsigned char tam );lcd.c: 180: {;lcd.c: 181:     int div;;lcd.c: 182:
                                      unsigned char size;;lcd.c: 183:     char sinal;;lcd.c: 185:     sinal = num < 0;
  1964                           	btfsc	(lcd_num@num+1),7
  1965  0020  1BA6               	goto	u1161
  1966  0021  2823               	goto	u1160
  1967  0022  2825               u1161:
  1968  0023                     	movlw	1
  1969  0023  3001               	goto	u1170
  1970  0024  2826               u1160:
  1971  0025                     	movlw	0
  1972  0025  3000               u1170:
  1973  0026                     	movwf	(??_lcd_num+0)+0
  1974  0026  00A8               	movf	(??_lcd_num+0)+0,w
  1975  0027  0828               	movwf	(lcd_num@sinal)
  1976  0028  00AD               	line	186
  1977                           	
  1978                           l1511:	
  1979  0029                     ;lcd.c: 186:     if( sinal )
  1980                           	movf	((lcd_num@sinal)),w
  1981  0029  082D               	btfsc	status,2
  1982  002A  1903               	goto	u1181
  1983  002B  282D               	goto	u1180
  1984  002C  282E               u1181:
  1985  002D                     	goto	l1515
  1986  002D  2834               u1180:
  1987  002E                     	line	187
  1988                           	
  1989                           l1513:	
  1990  002E                     ;lcd.c: 187:         num = (~num) + 1;
  1991                           	comf	(lcd_num@num),f
  1992  002E  09A5               	comf	(lcd_num@num+1),f
  1993  002F  09A6               	incf	(lcd_num@num),f
  1994  0030  0AA5               	skipnz
  1995  0031  1903               	incf	(lcd_num@num+1),f
  1996  0032  0AA6               	goto	l1515
  1997  0033  2834               	
  1998                           l196:	
  1999  0034                     	line	189
  2000                           	
  2001                           l1515:	
  2002  0034                     ;lcd.c: 189:     lcd_lincol(lin, col);
  2003                           	movf	(lcd_num@col),w
  2004  0034  0824               	movwf	(??_lcd_num+0)+0
  2005  0035  00A8               	movf	(??_lcd_num+0)+0,w
  2006  0036  0828               	movwf	(lcd_lincol@col)
  2007  0037  00F5               	movf	(lcd_num@lin),w
  2008  0038  082B               	fcall	_lcd_lincol
  2009  0039  120A  118A  2423  120A  118A  	line	191
  2010                           	
  2011                           l1517:	
  2012  003E                     ;lcd.c: 191:     div=10000;
  2013                           	movlw	010h
  2014  003E  3010               	bcf	status, 5	;RP0=0, select bank0
  2015  003F  1283               	bcf	status, 6	;RP1=0, select bank0
  2016  0040  1303               	movwf	(lcd_num@div)
  2017  0041  00AE               	movlw	027h
  2018  0042  3027               	movwf	((lcd_num@div))+1
  2019  0043  00AF               	line	192
  2020                           	
  2021                           l1519:	
  2022  0044                     ;lcd.c: 192:     size = 5;
  2023                           	movlw	low(05h)
  2024  0044  3005               	movwf	(??_lcd_num+0)+0
  2025  0045  00A8               	movf	(??_lcd_num+0)+0,w
  2026  0046  0828               	movwf	(lcd_num@size)
  2027  0047  00AC               	line	193
  2028                           ;lcd.c: 193:     while( div >= 1 )
  2029                           	goto	l1527
  2030  0048  2878               	
  2031                           l198:	
  2032  0049                     	line	195
  2033                           	
  2034                           l1521:	
  2035  0049                     ;lcd.c: 194:     {;lcd.c: 195:         if( num/div == 0 )
  2036                           	bcf	status, 5	;RP0=0, select bank0
  2037  0049  1283               	bcf	status, 6	;RP1=0, select bank0
  2038  004A  1303               	movf	(lcd_num@div+1),w
  2039  004B  082F               	movwf	(___awdiv@divisor+1)
  2040  004C  00F3               	movf	(lcd_num@div),w
  2041  004D  082E               	movwf	(___awdiv@divisor)
  2042  004E  00F2               	movf	(lcd_num@num+1),w
  2043  004F  0826               	movwf	(___awdiv@dividend+1)
  2044  0050  00F5               	movf	(lcd_num@num),w
  2045  0051  0825               	movwf	(___awdiv@dividend)
  2046  0052  00F4               	fcall	___awdiv
  2047  0053  120A  118A  2225  120A  118A  	movf	((0+(?___awdiv))),w
  2048  0058  0872               iorwf	((1+(?___awdiv))),w
  2049  0059  0473               	btfss	status,2
  2050  005A  1D03               	goto	u1191
  2051  005B  285D               	goto	u1190
  2052  005C  285E               u1191:
  2053  005D                     	goto	l1533
  2054  005D  2892               u1190:
  2055  005E                     	line	196
  2056                           	
  2057                           l1523:	
  2058  005E                     ;lcd.c: 196:             --size;
  2059                           	movlw	01h
  2060  005E  3001               	bcf	status, 5	;RP0=0, select bank0
  2061  005F  1283               	bcf	status, 6	;RP1=0, select bank0
  2062  0060  1303               	subwf	(lcd_num@size),f
  2063  0061  02AC               	goto	l1525
  2064  0062  2864               	line	197
  2065                           ;lcd.c: 197:         else
  2066                           	
  2067                           l199:	
  2068  0063                     	line	198
  2069                           ;lcd.c: 198:             break;
  2070                           	goto	l1533
  2071  0063  2892               	
  2072                           l200:	
  2073  0064                     	line	199
  2074                           	
  2075                           l1525:	
  2076  0064                     ;lcd.c: 199:         div/=10;
  2077                           	movlw	0Ah
  2078  0064  300A               	movwf	(___awdiv@divisor)
  2079  0065  00F2               	movlw	0
  2080  0066  3000               	movwf	((___awdiv@divisor))+1
  2081  0067  00F3               	movf	(lcd_num@div+1),w
  2082  0068  082F               	movwf	(___awdiv@dividend+1)
  2083  0069  00F5               	movf	(lcd_num@div),w
  2084  006A  082E               	movwf	(___awdiv@dividend)
  2085  006B  00F4               	fcall	___awdiv
  2086  006C  120A  118A  2225  120A  118A  	movf	(1+(?___awdiv)),w
  2087  0071  0873               	bcf	status, 5	;RP0=0, select bank0
  2088  0072  1283               	bcf	status, 6	;RP1=0, select bank0
  2089  0073  1303               	movwf	(lcd_num@div+1)
  2090  0074  00AF               	movf	(0+(?___awdiv)),w
  2091  0075  0872               	movwf	(lcd_num@div)
  2092  0076  00AE               	goto	l1527
  2093  0077  2878               	line	200
  2094                           ;lcd.c: 200:     }
  2095                           	
  2096                           l197:	
  2097  0078                     	line	193
  2098                           	
  2099                           l1527:	
  2100  0078                     ;lcd.c: 193:     while( div >= 1 )
  2101                           	movf	(lcd_num@div+1),w
  2102  0078  082F               	xorlw	80h
  2103  0079  3A80               	movwf	btemp+1
  2104  007A  00FF               	movlw	(0)^80h
  2105  007B  3080               	subwf	btemp+1,w
  2106  007C  027F               	skipz
  2107  007D  1D03               	goto	u1205
  2108  007E  2881               	movlw	01h
  2109  007F  3001               	subwf	(lcd_num@div),w
  2110  0080  022E               u1205:
  2111  0081                     
  2112                           	skipnc
  2113  0081  1803               	goto	u1201
  2114  0082  2884               	goto	u1200
  2115  0083  2885               u1201:
  2116  0084                     	goto	l1521
  2117  0084  2849               u1200:
  2118  0085                     	goto	l1533
  2119  0085  2892               	
  2120                           l201:	
  2121  0086                     	line	202
  2122                           ;lcd.c: 202:     while( tam > (size+sinal) && tam > 1 )
  2123                           	goto	l1533
  2124  0086  2892               	
  2125                           l203:	
  2126  0087                     	line	204
  2127                           	
  2128                           l1529:	
  2129  0087                     ;lcd.c: 203:     {;lcd.c: 204:         lcd_dataReg(' ');
  2130                           	movlw	low(020h)
  2131  0087  3020               	fcall	_lcd_dataReg
  2132  0088  120A  118A  2371  120A  118A  	line	205
  2133                           	
  2134                           l1531:	
  2135  008D                     ;lcd.c: 205:         --tam;
  2136                           	movlw	01h
  2137  008D  3001               	bcf	status, 5	;RP0=0, select bank0
  2138  008E  1283               	bcf	status, 6	;RP1=0, select bank0
  2139  008F  1303               	subwf	(lcd_num@tam),f
  2140  0090  02A7               	goto	l1533
  2141  0091  2892               	line	206
  2142                           ;lcd.c: 206:     }
  2143                           	
  2144                           l202:	
  2145  0092                     	line	202
  2146                           	
  2147                           l1533:	
  2148  0092                     ;lcd.c: 202:     while( tam > (size+sinal) && tam > 1 )
  2149                           	bcf	status, 5	;RP0=0, select bank0
  2150  0092  1283               	bcf	status, 6	;RP1=0, select bank0
  2151  0093  1303               	movf	(lcd_num@size),w
  2152  0094  082C               	addwf	(lcd_num@sinal),w
  2153  0095  072D               	movwf	(??_lcd_num+0)+0
  2154  0096  00A8               	clrf	(??_lcd_num+0)+0+1
  2155  0097  01A9               	rlf	1+(??_lcd_num+0)+0,f
  2156  0098  0DA9               	
  2157                           	movf	1+(??_lcd_num+0)+0,w
  2158  0099  0829               	xorlw	80h
  2159  009A  3A80               	movwf	(??_lcd_num+2)+0
  2160  009B  00AA               	movlw	80h
  2161  009C  3080               	subwf	(??_lcd_num+2)+0,w
  2162  009D  022A               	skipz
  2163  009E  1D03               	goto	u1215
  2164  009F  28A2               	movf	(lcd_num@tam),w
  2165  00A0  0827               	subwf	0+(??_lcd_num+0)+0,w
  2166  00A1  0228               u1215:
  2167  00A2                     
  2168                           	skipnc
  2169  00A2  1803               	goto	u1211
  2170  00A3  28A5               	goto	u1210
  2171  00A4  28A6               u1211:
  2172  00A5                     	goto	l1537
  2173  00A5  28B0               u1210:
  2174  00A6                     	
  2175                           l1535:	
  2176  00A6                     	movlw	low(02h)
  2177  00A6  3002               	bcf	status, 5	;RP0=0, select bank0
  2178  00A7  1283               	bcf	status, 6	;RP1=0, select bank0
  2179  00A8  1303               	subwf	(lcd_num@tam),w
  2180  00A9  0227               	skipnc
  2181  00AA  1803               	goto	u1221
  2182  00AB  28AD               	goto	u1220
  2183  00AC  28AE               u1221:
  2184  00AD                     	goto	l1529
  2185  00AD  2887               u1220:
  2186  00AE                     	goto	l1537
  2187  00AE  28B0               	
  2188                           l205:	
  2189  00AF                     	goto	l1537
  2190  00AF  28B0               	
  2191                           l206:	
  2192  00B0                     	line	208
  2193                           	
  2194                           l1537:	
  2195  00B0                     ;lcd.c: 208:     if( sinal )
  2196                           	bcf	status, 5	;RP0=0, select bank0
  2197  00B0  1283               	bcf	status, 6	;RP1=0, select bank0
  2198  00B1  1303               	movf	((lcd_num@sinal)),w
  2199  00B2  082D               	btfsc	status,2
  2200  00B3  1903               	goto	u1231
  2201  00B4  28B6               	goto	u1230
  2202  00B5  28B7               u1231:
  2203  00B6                     	goto	l208
  2204  00B6  28BE               u1230:
  2205  00B7                     	line	209
  2206                           	
  2207                           l1539:	
  2208  00B7                     ;lcd.c: 209:         lcd_dataReg('-');
  2209                           	movlw	low(02Dh)
  2210  00B7  302D               	fcall	_lcd_dataReg
  2211  00B8  120A  118A  2371  120A  118A  	goto	l208
  2212  00BD  28BE               	
  2213                           l207:	
  2214  00BE                     	line	211
  2215                           ;lcd.c: 211:     do
  2216                           	
  2217                           l208:	
  2218  00BE                     	line	213
  2219                           ;lcd.c: 212:     {;lcd.c: 213:         lcd_dataReg( (unsigned char)(num / div) + '0' );

  2220                           	bcf	status, 5	;RP0=0, select bank0
  2221  00BE  1283               	bcf	status, 6	;RP1=0, select bank0
  2222  00BF  1303               	movf	(lcd_num@div+1),w
  2223  00C0  082F               	movwf	(___awdiv@divisor+1)
  2224  00C1  00F3               	movf	(lcd_num@div),w
  2225  00C2  082E               	movwf	(___awdiv@divisor)
  2226  00C3  00F2               	movf	(lcd_num@num+1),w
  2227  00C4  0826               	movwf	(___awdiv@dividend+1)
  2228  00C5  00F5               	movf	(lcd_num@num),w
  2229  00C6  0825               	movwf	(___awdiv@dividend)
  2230  00C7  00F4               	fcall	___awdiv
  2231  00C8  120A  118A  2225  120A  118A  	movf	(0+(?___awdiv)),w
  2232  00CD  0872               	addlw	030h
  2233  00CE  3E30               	fcall	_lcd_dataReg
  2234  00CF  120A  118A  2371  120A  118A  	line	214
  2235                           ;lcd.c: 214:         num = num % div;
  2236                           	bcf	status, 5	;RP0=0, select bank0
  2237  00D4  1283               	bcf	status, 6	;RP1=0, select bank0
  2238  00D5  1303               	movf	(lcd_num@div+1),w
  2239  00D6  082F               	movwf	(___awmod@divisor+1)
  2240  00D7  00F3               	movf	(lcd_num@div),w
  2241  00D8  082E               	movwf	(___awmod@divisor)
  2242  00D9  00F2               	movf	(lcd_num@num+1),w
  2243  00DA  0826               	movwf	(___awmod@dividend+1)
  2244  00DB  00F5               	movf	(lcd_num@num),w
  2245  00DC  0825               	movwf	(___awmod@dividend)
  2246  00DD  00F4               	fcall	___awmod
  2247  00DE  120A  118A  2298  120A  118A  	movf	(1+(?___awmod)),w
  2248  00E3  0873               	bcf	status, 5	;RP0=0, select bank0
  2249  00E4  1283               	bcf	status, 6	;RP1=0, select bank0
  2250  00E5  1303               	movwf	(lcd_num@num+1)
  2251  00E6  00A6               	movf	(0+(?___awmod)),w
  2252  00E7  0872               	movwf	(lcd_num@num)
  2253  00E8  00A5               	line	215
  2254                           ;lcd.c: 215:         div/=10;
  2255                           	movlw	0Ah
  2256  00E9  300A               	movwf	(___awdiv@divisor)
  2257  00EA  00F2               	movlw	0
  2258  00EB  3000               	movwf	((___awdiv@divisor))+1
  2259  00EC  00F3               	movf	(lcd_num@div+1),w
  2260  00ED  082F               	movwf	(___awdiv@dividend+1)
  2261  00EE  00F5               	movf	(lcd_num@div),w
  2262  00EF  082E               	movwf	(___awdiv@dividend)
  2263  00F0  00F4               	fcall	___awdiv
  2264  00F1  120A  118A  2225  120A  118A  	movf	(1+(?___awdiv)),w
  2265  00F6  0873               	bcf	status, 5	;RP0=0, select bank0
  2266  00F7  1283               	bcf	status, 6	;RP1=0, select bank0
  2267  00F8  1303               	movwf	(lcd_num@div+1)
  2268  00F9  00AF               	movf	(0+(?___awdiv)),w
  2269  00FA  0872               	movwf	(lcd_num@div)
  2270  00FB  00AE               	line	216
  2271                           	
  2272                           l1541:	
  2273  00FC                     ;lcd.c: 216:     }
  2274                           	movf	(lcd_num@div+1),w
  2275  00FC  082F               	xorlw	80h
  2276  00FD  3A80               	movwf	btemp+1
  2277  00FE  00FF               	movlw	(0)^80h
  2278  00FF  3080               	subwf	btemp+1,w
  2279  0100  027F               	skipz
  2280  0101  1D03               	goto	u1245
  2281  0102  2905               	movlw	01h
  2282  0103  3001               	subwf	(lcd_num@div),w
  2283  0104  022E               u1245:
  2284  0105                     
  2285                           	skipnc
  2286  0105  1803               	goto	u1241
  2287  0106  2908               	goto	u1240
  2288  0107  2909               u1241:
  2289  0108                     	goto	l208
  2290  0108  28BE               u1240:
  2291  0109                     	goto	l210
  2292  0109  290A               	
  2293                           l209:	
  2294  010A                     	line	218
  2295                           	
  2296                           l210:	
  2297  010A                     	return
  2298  010A  0008               	opt stack 0
  2299                           GLOBAL	__end_of_lcd_num
  2300                           	__end_of_lcd_num:
  2301  010B                     	signat	_lcd_num,16505
  2302                           	global	_lcd_lincol
  2303                           
  2304 ;; *************** function _lcd_lincol *****************
  2305 ;; Defined at:
  2306 ;;		line 111 in file "lcd.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;  lin             1    wreg     unsigned char 
  2309 ;;  col             1    5[COMMON] unsigned char 
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;  lin             1    7[COMMON] unsigned char 
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  1    wreg      void 
  2314 ;; Registers used:
  2315 ;;		wreg, status,2, status,0, pclath, cstack
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2321 ;;      Params:         1       0       0       0       0
  2322 ;;      Locals:         1       0       0       0       0
  2323 ;;      Temps:          1       0       0       0       0
  2324 ;;      Totals:         3       0       0       0       0
  2325 ;;Total ram usage:        3 bytes
  2326 ;; Hardware stack levels used:    1
  2327 ;; Hardware stack levels required when called:    3
  2328 ;; This function calls:
  2329 ;;		_lcd_instReg
  2330 ;; This function is called by:
  2331 ;;		_lcd_print
  2332 ;;		_lcd_num
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2336                           	line	111
  2337                           global __ptext3
  2338                           __ptext3:	;psect for function _lcd_lincol
  2339  0423                     psect	text3
  2340                           	file	"lcd.c"
  2341                           	line	111
  2342                           	global	__size_of_lcd_lincol
  2343                           	__size_of_lcd_lincol	equ	__end_of_lcd_lincol-_lcd_lincol
  2344  0013                     	
  2345                           _lcd_lincol:	
  2346  0423                     ;incstack = 0
  2347                           	opt	stack 3
  2348                           ; Regs used in _lcd_lincol: [wreg+status,2+status,0+pclath+cstack]
  2349                           ;lcd_lincol@lin stored from wreg
  2350                           	movwf	(lcd_lincol@lin)
  2351  0423  00F7               	line	113
  2352                           	
  2353                           l1211:	
  2354  0424                     ;lcd.c: 111: void lcd_lincol( unsigned char lin, unsigned char col);lcd.c: 112: {;lcd.c:
                                  113:     lcd_instReg( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  2355                           	movf	(lcd_lincol@lin),w
  2356  0424  0877               	movwf	(??_lcd_lincol+0)+0
  2357  0425  00F6               	movlw	06h
  2358  0426  3006               u675:
  2359  0427                     	clrc
  2360  0427  1003               	rlf	(??_lcd_lincol+0)+0,f
  2361  0428  0DF6               	addlw	-1
  2362  0429  3EFF               	skipz
  2363  042A  1D03               	goto	u675
  2364  042B  2C27               	movf	(lcd_lincol@col),w
  2365  042C  0875               	addwf	0+(??_lcd_lincol+0)+0,w
  2366  042D  0776               	andlw	07Fh
  2367  042E  397F               	addlw	080h
  2368  042F  3E80               	fcall	_lcd_instReg
  2369  0430  120A  118A  219A  120A  118A  	line	114
  2370                           	
  2371                           l181:	
  2372  0435                     	return
  2373  0435  0008               	opt stack 0
  2374                           GLOBAL	__end_of_lcd_lincol
  2375                           	__end_of_lcd_lincol:
  2376  0436                     	signat	_lcd_lincol,8313
  2377                           	global	_lcd_dataReg
  2378                           
  2379 ;; *************** function _lcd_dataReg *****************
  2380 ;; Defined at:
  2381 ;;		line 93 in file "lcd.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  d               1    wreg     unsigned char 
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;  d               1    4[COMMON] unsigned char 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  1    wreg      void 
  2388 ;; Registers used:
  2389 ;;		wreg, status,2, status,0
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2395 ;;      Params:         0       0       0       0       0
  2396 ;;      Locals:         1       0       0       0       0
  2397 ;;      Temps:          2       0       0       0       0
  2398 ;;      Totals:         3       0       0       0       0
  2399 ;;Total ram usage:        3 bytes
  2400 ;; Hardware stack levels used:    1
  2401 ;; Hardware stack levels required when called:    2
  2402 ;; This function calls:
  2403 ;;		Nothing
  2404 ;; This function is called by:
  2405 ;;		_lcd_print
  2406 ;;		_lcd_num
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2410                           	line	93
  2411                           global __ptext4
  2412                           __ptext4:	;psect for function _lcd_dataReg
  2413  0371                     psect	text4
  2414                           	file	"lcd.c"
  2415                           	line	93
  2416                           	global	__size_of_lcd_dataReg
  2417                           	__size_of_lcd_dataReg	equ	__end_of_lcd_dataReg-_lcd_dataReg
  2418  0036                     	
  2419                           _lcd_dataReg:	
  2420  0371                     ;incstack = 0
  2421                           	opt	stack 4
  2422                           ; Regs used in _lcd_dataReg: [wreg+status,2+status,0]
  2423                           ;lcd_dataReg@d stored from wreg
  2424                           	movwf	(lcd_dataReg@d)
  2425  0371  00F4               	line	95
  2426                           	
  2427                           l1193:	
  2428  0372                     ;lcd.c: 93: void lcd_dataReg( unsigned char d );lcd.c: 94: {;lcd.c: 95:     PORTDbits.RD
                                 2 = 1;
  2429                           	bcf	status, 5	;RP0=0, select bank0
  2430  0372  1283               	bcf	status, 6	;RP1=0, select bank0
  2431  0373  1303               	bsf	(8),2	;volatile
  2432  0374  1508               	line	96
  2433                           	
  2434                           l1195:	
  2435  0375                     ;lcd.c: 96:     PORTD = ((PORTD & 0x0F)|(d >> 4<<4));
  2436                           	movf	(lcd_dataReg@d),w
  2437  0375  0874               	movwf	(??_lcd_dataReg+0)+0
  2438  0376  00F2               	movlw	04h
  2439  0377  3004               u645:
  2440  0378                     	clrc
  2441  0378  1003               	rrf	(??_lcd_dataReg+0)+0,f
  2442  0379  0CF2               	addlw	-1
  2443  037A  3EFF               	skipz
  2444  037B  1D03               	goto	u645
  2445  037C  2B78               	movf	0+(??_lcd_dataReg+0)+0,w
  2446  037D  0872               	movwf	(??_lcd_dataReg+1)+0
  2447  037E  00F3               	movlw	04h
  2448  037F  3004               u655:
  2449  0380                     	clrc
  2450  0380  1003               	rlf	(??_lcd_dataReg+1)+0,f
  2451  0381  0DF3               	addlw	-1
  2452  0382  3EFF               	skipz
  2453  0383  1D03               	goto	u655
  2454  0384  2B80               	movf	(8),w	;volatile
  2455  0385  0808               	andlw	0Fh
  2456  0386  390F               	iorwf	0+(??_lcd_dataReg+1)+0,w
  2457  0387  0473               	movwf	(8)	;volatile
  2458  0388  0088               	line	97
  2459                           	
  2460                           l1197:	
  2461  0389                     ;lcd.c: 97:     PORTDbits.RD3 = 0;
  2462                           	bcf	(8),3	;volatile
  2463  0389  1188               	line	98
  2464                           	
  2465                           l1199:	
  2466  038A                     ;lcd.c: 98:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2467                           	opt asmopt_push
  2468                           opt asmopt_off
  2469                           	movlw	13
  2470  038A  300D               movwf	((??_lcd_dataReg+0)+0),f
  2471  038B  00F2               	u1277:
  2472  038C                     decfsz	(??_lcd_dataReg+0)+0,f
  2473  038C  0BF2               	goto	u1277
  2474  038D  2B8C               opt asmopt_pop
  2475                           
  2476                           	line	99
  2477                           	
  2478                           l1201:	
  2479  038E                     ;lcd.c: 99:     PORTDbits.RD3 = 1;
  2480                           	bcf	status, 5	;RP0=0, select bank0
  2481  038E  1283               	bcf	status, 6	;RP1=0, select bank0
  2482  038F  1303               	bsf	(8),3	;volatile
  2483  0390  1588               	line	101
  2484                           	
  2485                           l1203:	
  2486  0391                     ;lcd.c: 101:     PORTDbits.RD2 = 1;
  2487                           	bsf	(8),2	;volatile
  2488  0391  1508               	line	102
  2489                           	
  2490                           l1205:	
  2491  0392                     ;lcd.c: 102:     PORTD = ((PORTD & 0x0F)|(d<<4));
  2492                           	movf	(lcd_dataReg@d),w
  2493  0392  0874               	movwf	(??_lcd_dataReg+0)+0
  2494  0393  00F2               	movlw	04h
  2495  0394  3004               u665:
  2496  0395                     	clrc
  2497  0395  1003               	rlf	(??_lcd_dataReg+0)+0,f
  2498  0396  0DF2               	addlw	-1
  2499  0397  3EFF               	skipz
  2500  0398  1D03               	goto	u665
  2501  0399  2B95               	movf	(8),w	;volatile
  2502  039A  0808               	andlw	0Fh
  2503  039B  390F               	iorwf	0+(??_lcd_dataReg+0)+0,w
  2504  039C  0472               	movwf	(8)	;volatile
  2505  039D  0088               	line	103
  2506                           	
  2507                           l1207:	
  2508  039E                     ;lcd.c: 103:     PORTDbits.RD3 = 0;
  2509                           	bcf	(8),3	;volatile
  2510  039E  1188               	line	104
  2511                           ;lcd.c: 104:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  2512                           	opt asmopt_push
  2513                           opt asmopt_off
  2514                           	movlw	13
  2515  039F  300D               movwf	((??_lcd_dataReg+0)+0),f
  2516  03A0  00F2               	u1287:
  2517  03A1                     decfsz	(??_lcd_dataReg+0)+0,f
  2518  03A1  0BF2               	goto	u1287
  2519  03A2  2BA1               opt asmopt_pop
  2520                           
  2521                           	line	105
  2522                           	
  2523                           l1209:	
  2524  03A3                     ;lcd.c: 105:     PORTDbits.RD3 = 1;
  2525                           	bcf	status, 5	;RP0=0, select bank0
  2526  03A3  1283               	bcf	status, 6	;RP1=0, select bank0
  2527  03A4  1303               	bsf	(8),3	;volatile
  2528  03A5  1588               	line	106
  2529                           	
  2530                           l178:	
  2531  03A6                     	return
  2532  03A6  0008               	opt stack 0
  2533                           GLOBAL	__end_of_lcd_dataReg
  2534                           	__end_of_lcd_dataReg:
  2535  03A7                     	signat	_lcd_dataReg,4217
  2536                           	global	___awmod
  2537                           
  2538 ;; *************** function ___awmod *****************
  2539 ;; Defined at:
  2540 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  divisor         2    2[COMMON] int 
  2543 ;;  dividend        2    4[COMMON] int 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  sign            1    8[COMMON] unsigned char 
  2546 ;;  counter         1    7[COMMON] unsigned char 
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  2    2[COMMON] int 
  2549 ;; Registers used:
  2550 ;;		wreg, status,2, status,0
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2556 ;;      Params:         4       0       0       0       0
  2557 ;;      Locals:         2       0       0       0       0
  2558 ;;      Temps:          1       0       0       0       0
  2559 ;;      Totals:         7       0       0       0       0
  2560 ;;Total ram usage:        7 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; Hardware stack levels required when called:    2
  2563 ;; This function calls:
  2564 ;;		Nothing
  2565 ;; This function is called by:
  2566 ;;		_main
  2567 ;;		_lcd_num
  2568 ;; This function uses a non-reentrant model
  2569 ;;
  2570                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  2571                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  2572                           	line	5
  2573                           global __ptext5
  2574                           __ptext5:	;psect for function ___awmod
  2575  0298                     psect	text5
  2576                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  2577                           	line	5
  2578                           	global	__size_of___awmod
  2579                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  2580  0063                     	
  2581                           ___awmod:	
  2582  0298                     ;incstack = 0
  2583                           	opt	stack 4
  2584                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2585                           	line	12
  2586                           	
  2587                           l1257:	
  2588  0298                     	clrf	(___awmod@sign)
  2589  0298  01F8               	line	13
  2590                           	
  2591                           l1259:	
  2592  0299                     	btfss	(___awmod@dividend+1),7
  2593  0299  1FF5               	goto	u781
  2594  029A  2A9C               	goto	u780
  2595  029B  2A9D               u781:
  2596  029C                     	goto	l1265
  2597  029C  2AA5               u780:
  2598  029D                     	line	14
  2599                           	
  2600                           l1261:	
  2601  029D                     	comf	(___awmod@dividend),f
  2602  029D  09F4               	comf	(___awmod@dividend+1),f
  2603  029E  09F5               	incf	(___awmod@dividend),f
  2604  029F  0AF4               	skipnz
  2605  02A0  1903               	incf	(___awmod@dividend+1),f
  2606  02A1  0AF5               	line	15
  2607                           	
  2608                           l1263:	
  2609  02A2                     	clrf	(___awmod@sign)
  2610  02A2  01F8               	incf	(___awmod@sign),f
  2611  02A3  0AF8               	goto	l1265
  2612  02A4  2AA5               	line	16
  2613                           	
  2614                           l452:	
  2615  02A5                     	line	17
  2616                           	
  2617                           l1265:	
  2618  02A5                     	btfss	(___awmod@divisor+1),7
  2619  02A5  1FF3               	goto	u791
  2620  02A6  2AA8               	goto	u790
  2621  02A7  2AA9               u791:
  2622  02A8                     	goto	l1269
  2623  02A8  2AAF               u790:
  2624  02A9                     	line	18
  2625                           	
  2626                           l1267:	
  2627  02A9                     	comf	(___awmod@divisor),f
  2628  02A9  09F2               	comf	(___awmod@divisor+1),f
  2629  02AA  09F3               	incf	(___awmod@divisor),f
  2630  02AB  0AF2               	skipnz
  2631  02AC  1903               	incf	(___awmod@divisor+1),f
  2632  02AD  0AF3               	goto	l1269
  2633  02AE  2AAF               	
  2634                           l453:	
  2635  02AF                     	line	19
  2636                           	
  2637                           l1269:	
  2638  02AF                     	movf	((___awmod@divisor)),w
  2639  02AF  0872               iorwf	((___awmod@divisor+1)),w
  2640  02B0  0473               	btfsc	status,2
  2641  02B1  1903               	goto	u801
  2642  02B2  2AB4               	goto	u800
  2643  02B3  2AB5               u801:
  2644  02B4                     	goto	l1287
  2645  02B4  2AEA               u800:
  2646  02B5                     	line	20
  2647                           	
  2648                           l1271:	
  2649  02B5                     	clrf	(___awmod@counter)
  2650  02B5  01F7               	incf	(___awmod@counter),f
  2651  02B6  0AF7               	line	21
  2652                           	goto	l1277
  2653  02B7  2AC4               	
  2654                           l456:	
  2655  02B8                     	line	22
  2656                           	
  2657                           l1273:	
  2658  02B8                     	movlw	01h
  2659  02B8  3001               	
  2660                           u815:
  2661  02B9                     	clrc
  2662  02B9  1003               	rlf	(___awmod@divisor),f
  2663  02BA  0DF2               	rlf	(___awmod@divisor+1),f
  2664  02BB  0DF3               	addlw	-1
  2665  02BC  3EFF               	skipz
  2666  02BD  1D03               	goto	u815
  2667  02BE  2AB9               	line	23
  2668                           	
  2669                           l1275:	
  2670  02BF                     	movlw	low(01h)
  2671  02BF  3001               	movwf	(??___awmod+0)+0
  2672  02C0  00F6               	movf	(??___awmod+0)+0,w
  2673  02C1  0876               	addwf	(___awmod@counter),f
  2674  02C2  07F7               	goto	l1277
  2675  02C3  2AC4               	line	24
  2676                           	
  2677                           l455:	
  2678  02C4                     	line	21
  2679                           	
  2680                           l1277:	
  2681  02C4                     	btfss	(___awmod@divisor+1),(15)&7
  2682  02C4  1FF3               	goto	u821
  2683  02C5  2AC7               	goto	u820
  2684  02C6  2AC8               u821:
  2685  02C7                     	goto	l1273
  2686  02C7  2AB8               u820:
  2687  02C8                     	goto	l1279
  2688  02C8  2ACA               	
  2689                           l457:	
  2690  02C9                     	goto	l1279
  2691  02C9  2ACA               	line	25
  2692                           	
  2693                           l458:	
  2694  02CA                     	line	26
  2695                           	
  2696                           l1279:	
  2697  02CA                     	movf	(___awmod@divisor+1),w
  2698  02CA  0873               	subwf	(___awmod@dividend+1),w
  2699  02CB  0275               	skipz
  2700  02CC  1D03               	goto	u835
  2701  02CD  2AD0               	movf	(___awmod@divisor),w
  2702  02CE  0872               	subwf	(___awmod@dividend),w
  2703  02CF  0274               u835:
  2704  02D0                     	skipc
  2705  02D0  1C03               	goto	u831
  2706  02D1  2AD3               	goto	u830
  2707  02D2  2AD4               u831:
  2708  02D3                     	goto	l1283
  2709  02D3  2ADB               u830:
  2710  02D4                     	line	27
  2711                           	
  2712                           l1281:	
  2713  02D4                     	movf	(___awmod@divisor),w
  2714  02D4  0872               	subwf	(___awmod@dividend),f
  2715  02D5  02F4               	movf	(___awmod@divisor+1),w
  2716  02D6  0873               	skipc
  2717  02D7  1C03               	decf	(___awmod@dividend+1),f
  2718  02D8  03F5               	subwf	(___awmod@dividend+1),f
  2719  02D9  02F5               	goto	l1283
  2720  02DA  2ADB               	
  2721                           l459:	
  2722  02DB                     	line	28
  2723                           	
  2724                           l1283:	
  2725  02DB                     	movlw	01h
  2726  02DB  3001               	
  2727                           u845:
  2728  02DC                     	clrc
  2729  02DC  1003               	rrf	(___awmod@divisor+1),f
  2730  02DD  0CF3               	rrf	(___awmod@divisor),f
  2731  02DE  0CF2               	addlw	-1
  2732  02DF  3EFF               	skipz
  2733  02E0  1D03               	goto	u845
  2734  02E1  2ADC               	line	29
  2735                           	
  2736                           l1285:	
  2737  02E2                     	movlw	01h
  2738  02E2  3001               	subwf	(___awmod@counter),f
  2739  02E3  02F7               	btfss	status,2
  2740  02E4  1D03               	goto	u851
  2741  02E5  2AE7               	goto	u850
  2742  02E6  2AE8               u851:
  2743  02E7                     	goto	l1279
  2744  02E7  2ACA               u850:
  2745  02E8                     	goto	l1287
  2746  02E8  2AEA               	
  2747                           l460:	
  2748  02E9                     	goto	l1287
  2749  02E9  2AEA               	line	30
  2750                           	
  2751                           l454:	
  2752  02EA                     	line	31
  2753                           	
  2754                           l1287:	
  2755  02EA                     	movf	((___awmod@sign)),w
  2756  02EA  0878               	btfsc	status,2
  2757  02EB  1903               	goto	u861
  2758  02EC  2AEE               	goto	u860
  2759  02ED  2AEF               u861:
  2760  02EE                     	goto	l1291
  2761  02EE  2AF5               u860:
  2762  02EF                     	line	32
  2763                           	
  2764                           l1289:	
  2765  02EF                     	comf	(___awmod@dividend),f
  2766  02EF  09F4               	comf	(___awmod@dividend+1),f
  2767  02F0  09F5               	incf	(___awmod@dividend),f
  2768  02F1  0AF4               	skipnz
  2769  02F2  1903               	incf	(___awmod@dividend+1),f
  2770  02F3  0AF5               	goto	l1291
  2771  02F4  2AF5               	
  2772                           l461:	
  2773  02F5                     	line	33
  2774                           	
  2775                           l1291:	
  2776  02F5                     	movf	(___awmod@dividend+1),w
  2777  02F5  0875               	movwf	(?___awmod+1)
  2778  02F6  00F3               	movf	(___awmod@dividend),w
  2779  02F7  0874               	movwf	(?___awmod)
  2780  02F8  00F2               	goto	l462
  2781  02F9  2AFA               	
  2782                           l1293:	
  2783  02FA                     	line	34
  2784                           	
  2785                           l462:	
  2786  02FA                     	return
  2787  02FA  0008               	opt stack 0
  2788                           GLOBAL	__end_of___awmod
  2789                           	__end_of___awmod:
  2790  02FB                     	signat	___awmod,8314
  2791                           	global	___awdiv
  2792                           
  2793 ;; *************** function ___awdiv *****************
  2794 ;; Defined at:
  2795 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  divisor         2    2[COMMON] int 
  2798 ;;  dividend        2    4[COMMON] int 
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;  quotient        2    2[BANK0 ] int 
  2801 ;;  sign            1    1[BANK0 ] unsigned char 
  2802 ;;  counter         1    0[BANK0 ] unsigned char 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  2    2[COMMON] int 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2, status,0
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2812 ;;      Params:         4       0       0       0       0
  2813 ;;      Locals:         0       4       0       0       0
  2814 ;;      Temps:          1       0       0       0       0
  2815 ;;      Totals:         5       4       0       0       0
  2816 ;;Total ram usage:        9 bytes
  2817 ;; Hardware stack levels used:    1
  2818 ;; Hardware stack levels required when called:    2
  2819 ;; This function calls:
  2820 ;;		Nothing
  2821 ;; This function is called by:
  2822 ;;		_lcd_num
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           psect	text6,local,class=CODE,delta=2,merge=1,group=1
  2826                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  2827                           	line	5
  2828                           global __ptext6
  2829                           __ptext6:	;psect for function ___awdiv
  2830  0225                     psect	text6
  2831                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  2832                           	line	5
  2833                           	global	__size_of___awdiv
  2834                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  2835  0073                     	
  2836                           ___awdiv:	
  2837  0225                     ;incstack = 0
  2838                           	opt	stack 4
  2839                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2840                           	line	13
  2841                           	
  2842                           l1453:	
  2843  0225                     	bcf	status, 5	;RP0=0, select bank0
  2844  0225  1283               	bcf	status, 6	;RP1=0, select bank0
  2845  0226  1303               	clrf	(___awdiv@sign)
  2846  0227  01A1               	line	14
  2847                           	
  2848                           l1455:	
  2849  0228                     	btfss	(___awdiv@divisor+1),7
  2850  0228  1FF3               	goto	u1051
  2851  0229  2A2B               	goto	u1050
  2852  022A  2A2C               u1051:
  2853  022B                     	goto	l1461
  2854  022B  2A34               u1050:
  2855  022C                     	line	15
  2856                           	
  2857                           l1457:	
  2858  022C                     	comf	(___awdiv@divisor),f
  2859  022C  09F2               	comf	(___awdiv@divisor+1),f
  2860  022D  09F3               	incf	(___awdiv@divisor),f
  2861  022E  0AF2               	skipnz
  2862  022F  1903               	incf	(___awdiv@divisor+1),f
  2863  0230  0AF3               	line	16
  2864                           	
  2865                           l1459:	
  2866  0231                     	clrf	(___awdiv@sign)
  2867  0231  01A1               	incf	(___awdiv@sign),f
  2868  0232  0AA1               	goto	l1461
  2869  0233  2A34               	line	17
  2870                           	
  2871                           l439:	
  2872  0234                     	line	18
  2873                           	
  2874                           l1461:	
  2875  0234                     	btfss	(___awdiv@dividend+1),7
  2876  0234  1FF5               	goto	u1061
  2877  0235  2A37               	goto	u1060
  2878  0236  2A38               u1061:
  2879  0237                     	goto	l1467
  2880  0237  2A42               u1060:
  2881  0238                     	line	19
  2882                           	
  2883                           l1463:	
  2884  0238                     	comf	(___awdiv@dividend),f
  2885  0238  09F4               	comf	(___awdiv@dividend+1),f
  2886  0239  09F5               	incf	(___awdiv@dividend),f
  2887  023A  0AF4               	skipnz
  2888  023B  1903               	incf	(___awdiv@dividend+1),f
  2889  023C  0AF5               	line	20
  2890                           	
  2891                           l1465:	
  2892  023D                     	movlw	low(01h)
  2893  023D  3001               	movwf	(??___awdiv+0)+0
  2894  023E  00F6               	movf	(??___awdiv+0)+0,w
  2895  023F  0876               	xorwf	(___awdiv@sign),f
  2896  0240  06A1               	goto	l1467
  2897  0241  2A42               	line	21
  2898                           	
  2899                           l440:	
  2900  0242                     	line	22
  2901                           	
  2902                           l1467:	
  2903  0242                     	clrf	(___awdiv@quotient)
  2904  0242  01A2               	clrf	(___awdiv@quotient+1)
  2905  0243  01A3               	line	23
  2906                           	
  2907                           l1469:	
  2908  0244                     	movf	((___awdiv@divisor)),w
  2909  0244  0872               iorwf	((___awdiv@divisor+1)),w
  2910  0245  0473               	btfsc	status,2
  2911  0246  1903               	goto	u1071
  2912  0247  2A49               	goto	u1070
  2913  0248  2A4A               u1071:
  2914  0249                     	goto	l1489
  2915  0249  2A87               u1070:
  2916  024A                     	line	24
  2917                           	
  2918                           l1471:	
  2919  024A                     	clrf	(___awdiv@counter)
  2920  024A  01A0               	incf	(___awdiv@counter),f
  2921  024B  0AA0               	line	25
  2922                           	goto	l1477
  2923  024C  2A59               	
  2924                           l443:	
  2925  024D                     	line	26
  2926                           	
  2927                           l1473:	
  2928  024D                     	movlw	01h
  2929  024D  3001               	
  2930                           u1085:
  2931  024E                     	clrc
  2932  024E  1003               	rlf	(___awdiv@divisor),f
  2933  024F  0DF2               	rlf	(___awdiv@divisor+1),f
  2934  0250  0DF3               	addlw	-1
  2935  0251  3EFF               	skipz
  2936  0252  1D03               	goto	u1085
  2937  0253  2A4E               	line	27
  2938                           	
  2939                           l1475:	
  2940  0254                     	movlw	low(01h)
  2941  0254  3001               	movwf	(??___awdiv+0)+0
  2942  0255  00F6               	movf	(??___awdiv+0)+0,w
  2943  0256  0876               	addwf	(___awdiv@counter),f
  2944  0257  07A0               	goto	l1477
  2945  0258  2A59               	line	28
  2946                           	
  2947                           l442:	
  2948  0259                     	line	25
  2949                           	
  2950                           l1477:	
  2951  0259                     	btfss	(___awdiv@divisor+1),(15)&7
  2952  0259  1FF3               	goto	u1091
  2953  025A  2A5C               	goto	u1090
  2954  025B  2A5D               u1091:
  2955  025C                     	goto	l1473
  2956  025C  2A4D               u1090:
  2957  025D                     	goto	l1479
  2958  025D  2A5F               	
  2959                           l444:	
  2960  025E                     	goto	l1479
  2961  025E  2A5F               	line	29
  2962                           	
  2963                           l445:	
  2964  025F                     	line	30
  2965                           	
  2966                           l1479:	
  2967  025F                     	movlw	01h
  2968  025F  3001               	
  2969                           u1105:
  2970  0260                     	clrc
  2971  0260  1003               	rlf	(___awdiv@quotient),f
  2972  0261  0DA2               	rlf	(___awdiv@quotient+1),f
  2973  0262  0DA3               	addlw	-1
  2974  0263  3EFF               	skipz
  2975  0264  1D03               	goto	u1105
  2976  0265  2A60               	line	31
  2977                           	movf	(___awdiv@divisor+1),w
  2978  0266  0873               	subwf	(___awdiv@dividend+1),w
  2979  0267  0275               	skipz
  2980  0268  1D03               	goto	u1115
  2981  0269  2A6C               	movf	(___awdiv@divisor),w
  2982  026A  0872               	subwf	(___awdiv@dividend),w
  2983  026B  0274               u1115:
  2984  026C                     	skipc
  2985  026C  1C03               	goto	u1111
  2986  026D  2A6F               	goto	u1110
  2987  026E  2A70               u1111:
  2988  026F                     	goto	l1485
  2989  026F  2A78               u1110:
  2990  0270                     	line	32
  2991                           	
  2992                           l1481:	
  2993  0270                     	movf	(___awdiv@divisor),w
  2994  0270  0872               	subwf	(___awdiv@dividend),f
  2995  0271  02F4               	movf	(___awdiv@divisor+1),w
  2996  0272  0873               	skipc
  2997  0273  1C03               	decf	(___awdiv@dividend+1),f
  2998  0274  03F5               	subwf	(___awdiv@dividend+1),f
  2999  0275  02F5               	line	33
  3000                           	
  3001                           l1483:	
  3002  0276                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  3003  0276  1422               	goto	l1485
  3004  0277  2A78               	line	34
  3005                           	
  3006                           l446:	
  3007  0278                     	line	35
  3008                           	
  3009                           l1485:	
  3010  0278                     	movlw	01h
  3011  0278  3001               	
  3012                           u1125:
  3013  0279                     	clrc
  3014  0279  1003               	rrf	(___awdiv@divisor+1),f
  3015  027A  0CF3               	rrf	(___awdiv@divisor),f
  3016  027B  0CF2               	addlw	-1
  3017  027C  3EFF               	skipz
  3018  027D  1D03               	goto	u1125
  3019  027E  2A79               	line	36
  3020                           	
  3021                           l1487:	
  3022  027F                     	movlw	01h
  3023  027F  3001               	subwf	(___awdiv@counter),f
  3024  0280  02A0               	btfss	status,2
  3025  0281  1D03               	goto	u1131
  3026  0282  2A84               	goto	u1130
  3027  0283  2A85               u1131:
  3028  0284                     	goto	l1479
  3029  0284  2A5F               u1130:
  3030  0285                     	goto	l1489
  3031  0285  2A87               	
  3032                           l447:	
  3033  0286                     	goto	l1489
  3034  0286  2A87               	line	37
  3035                           	
  3036                           l441:	
  3037  0287                     	line	38
  3038                           	
  3039                           l1489:	
  3040  0287                     	movf	((___awdiv@sign)),w
  3041  0287  0821               	btfsc	status,2
  3042  0288  1903               	goto	u1141
  3043  0289  2A8B               	goto	u1140
  3044  028A  2A8C               u1141:
  3045  028B                     	goto	l1493
  3046  028B  2A92               u1140:
  3047  028C                     	line	39
  3048                           	
  3049                           l1491:	
  3050  028C                     	comf	(___awdiv@quotient),f
  3051  028C  09A2               	comf	(___awdiv@quotient+1),f
  3052  028D  09A3               	incf	(___awdiv@quotient),f
  3053  028E  0AA2               	skipnz
  3054  028F  1903               	incf	(___awdiv@quotient+1),f
  3055  0290  0AA3               	goto	l1493
  3056  0291  2A92               	
  3057                           l448:	
  3058  0292                     	line	40
  3059                           	
  3060                           l1493:	
  3061  0292                     	movf	(___awdiv@quotient+1),w
  3062  0292  0823               	movwf	(?___awdiv+1)
  3063  0293  00F3               	movf	(___awdiv@quotient),w
  3064  0294  0822               	movwf	(?___awdiv)
  3065  0295  00F2               	goto	l449
  3066  0296  2A97               	
  3067                           l1495:	
  3068  0297                     	line	41
  3069                           	
  3070                           l449:	
  3071  0297                     	return
  3072  0297  0008               	opt stack 0
  3073                           GLOBAL	__end_of___awdiv
  3074                           	__end_of___awdiv:
  3075  0298                     	signat	___awdiv,8314
  3076                           	global	_lcd_init
  3077                           
  3078 ;; *************** function _lcd_init *****************
  3079 ;; Defined at:
  3080 ;;		line 121 in file "lcd.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;		None
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, status,2, status,0, pclath, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3094 ;;      Params:         0       0       0       0       0
  3095 ;;      Locals:         0       0       0       0       0
  3096 ;;      Temps:          0       0       0       0       0
  3097 ;;      Totals:         0       0       0       0       0
  3098 ;;Total ram usage:        0 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    3
  3101 ;; This function calls:
  3102 ;;		_delay
  3103 ;;		_lcd_instReg
  3104 ;; This function is called by:
  3105 ;;		_main
  3106 ;;		_main2
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3110                           	file	"lcd.c"
  3111                           	line	121
  3112                           global __ptext7
  3113                           __ptext7:	;psect for function _lcd_init
  3114  02FB                     psect	text7
  3115                           	file	"lcd.c"
  3116                           	line	121
  3117                           	global	__size_of_lcd_init
  3118                           	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  3119  003F                     	
  3120                           _lcd_init:	
  3121  02FB                     ;incstack = 0
  3122                           	opt	stack 4
  3123                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3124                           	line	123
  3125                           	
  3126                           l1295:	
  3127  02FB                     ;lcd.c: 123:     delay(100);
  3128                           	movlw	064h
  3129  02FB  3064               	movwf	(delay@t)
  3130  02FC  00F2               	movlw	0
  3131  02FD  3000               	movwf	((delay@t))+1
  3132  02FE  00F3               	fcall	_delay
  3133  02FF  120A  118A  23F8  120A  118A  	line	124
  3134                           	
  3135                           l1297:	
  3136  0304                     ;lcd.c: 124:     TRISDbits.TRISD2 = 0;
  3137                           	bsf	status, 5	;RP0=1, select bank1
  3138  0304  1683               	bcf	status, 6	;RP1=0, select bank1
  3139  0305  1303               	bcf	(136)^080h,2	;volatile
  3140  0306  1108               	line	125
  3141                           	
  3142                           l1299:	
  3143  0307                     ;lcd.c: 125:     TRISDbits.TRISD3 = 0;
  3144                           	bcf	(136)^080h,3	;volatile
  3145  0307  1188               	line	126
  3146                           	
  3147                           l1301:	
  3148  0308                     ;lcd.c: 126:     TRISDbits.TRISD4 = 0;
  3149                           	bcf	(136)^080h,4	;volatile
  3150  0308  1208               	line	127
  3151                           	
  3152                           l1303:	
  3153  0309                     ;lcd.c: 127:     TRISDbits.TRISD5 = 0;
  3154                           	bcf	(136)^080h,5	;volatile
  3155  0309  1288               	line	128
  3156                           	
  3157                           l1305:	
  3158  030A                     ;lcd.c: 128:     TRISDbits.TRISD6 = 0;
  3159                           	bcf	(136)^080h,6	;volatile
  3160  030A  1308               	line	129
  3161                           	
  3162                           l1307:	
  3163  030B                     ;lcd.c: 129:     TRISDbits.TRISD7 = 0;
  3164                           	bcf	(136)^080h,7	;volatile
  3165  030B  1388               	line	131
  3166                           ;lcd.c: 131:     delay(100);
  3167                           	movlw	064h
  3168  030C  3064               	movwf	(delay@t)
  3169  030D  00F2               	movlw	0
  3170  030E  3000               	movwf	((delay@t))+1
  3171  030F  00F3               	fcall	_delay
  3172  0310  120A  118A  23F8  120A  118A  	line	132
  3173                           	
  3174                           l1309:	
  3175  0315                     ;lcd.c: 132:     PORTDbits.RD3 = 1;
  3176                           	bcf	status, 5	;RP0=0, select bank0
  3177  0315  1283               	bcf	status, 6	;RP1=0, select bank0
  3178  0316  1303               	bsf	(8),3	;volatile
  3179  0317  1588               	line	133
  3180                           ;lcd.c: 133:     lcd_instReg( 0x20|0x00|0x08 );
  3181                           	movlw	low(028h)
  3182  0318  3028               	fcall	_lcd_instReg
  3183  0319  120A  118A  219A  120A  118A  	line	134
  3184                           ;lcd.c: 134:     lcd_instReg( 0x08|0x04|0x00|0x00 );
  3185                           	movlw	low(0Ch)
  3186  031E  300C               	fcall	_lcd_instReg
  3187  031F  120A  118A  219A  120A  118A  	line	135
  3188                           ;lcd.c: 135:     lcd_instReg( 0x01 );
  3189                           	movlw	low(01h)
  3190  0324  3001               	fcall	_lcd_instReg
  3191  0325  120A  118A  219A  120A  118A  	line	136
  3192                           ;lcd.c: 136:     lcd_instReg( 0x02 );
  3193                           	movlw	low(02h)
  3194  032A  3002               	fcall	_lcd_instReg
  3195  032B  120A  118A  219A  120A  118A  	line	137
  3196                           ;lcd.c: 137:     delay(100);
  3197                           	movlw	064h
  3198  0330  3064               	movwf	(delay@t)
  3199  0331  00F2               	movlw	0
  3200  0332  3000               	movwf	((delay@t))+1
  3201  0333  00F3               	fcall	_delay
  3202  0334  120A  118A  23F8  120A  118A  	line	138
  3203                           	
  3204                           l184:	
  3205  0339                     	return
  3206  0339  0008               	opt stack 0
  3207                           GLOBAL	__end_of_lcd_init
  3208                           	__end_of_lcd_init:
  3209  033A                     	signat	_lcd_init,89
  3210                           	global	_lcd_instReg
  3211                           
  3212 ;; *************** function _lcd_instReg *****************
  3213 ;; Defined at:
  3214 ;;		line 58 in file "lcd.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;  i               1    wreg     unsigned char 
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  i               1    4[COMMON] unsigned char 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      void 
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3228 ;;      Params:         0       0       0       0       0
  3229 ;;      Locals:         1       0       0       0       0
  3230 ;;      Temps:          2       0       0       0       0
  3231 ;;      Totals:         3       0       0       0       0
  3232 ;;Total ram usage:        3 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    2
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_lcd_lincol
  3239 ;;		_lcd_init
  3240 ;;		_lcd_clr
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3244                           	line	58
  3245                           global __ptext8
  3246                           __ptext8:	;psect for function _lcd_instReg
  3247  019A                     psect	text8
  3248                           	file	"lcd.c"
  3249                           	line	58
  3250                           	global	__size_of_lcd_instReg
  3251                           	__size_of_lcd_instReg	equ	__end_of_lcd_instReg-_lcd_instReg
  3252  008B                     	
  3253                           _lcd_instReg:	
  3254  019A                     ;incstack = 0
  3255                           	opt	stack 3
  3256                           ; Regs used in _lcd_instReg: [wreg+status,2+status,0]
  3257                           ;lcd_instReg@i stored from wreg
  3258                           	movwf	(lcd_instReg@i)
  3259  019A  00F4               	line	60
  3260                           	
  3261                           l1145:	
  3262  019B                     ;lcd.c: 58: void lcd_instReg( unsigned char i );lcd.c: 59: {;lcd.c: 60:     PORTDbits.RD
                                 2 = 0;
  3263                           	bcf	status, 5	;RP0=0, select bank0
  3264  019B  1283               	bcf	status, 6	;RP1=0, select bank0
  3265  019C  1303               	bcf	(8),2	;volatile
  3266  019D  1108               	line	61
  3267                           	
  3268                           l1147:	
  3269  019E                     ;lcd.c: 61:     PORTD = ((PORTD & 0x0F)|(i>>4<<4));
  3270                           	movf	(lcd_instReg@i),w
  3271  019E  0874               	movwf	(??_lcd_instReg+0)+0
  3272  019F  00F2               	movlw	04h
  3273  01A0  3004               u535:
  3274  01A1                     	clrc
  3275  01A1  1003               	rrf	(??_lcd_instReg+0)+0,f
  3276  01A2  0CF2               	addlw	-1
  3277  01A3  3EFF               	skipz
  3278  01A4  1D03               	goto	u535
  3279  01A5  29A1               	movf	0+(??_lcd_instReg+0)+0,w
  3280  01A6  0872               	movwf	(??_lcd_instReg+1)+0
  3281  01A7  00F3               	movlw	04h
  3282  01A8  3004               u545:
  3283  01A9                     	clrc
  3284  01A9  1003               	rlf	(??_lcd_instReg+1)+0,f
  3285  01AA  0DF3               	addlw	-1
  3286  01AB  3EFF               	skipz
  3287  01AC  1D03               	goto	u545
  3288  01AD  29A9               	movf	(8),w	;volatile
  3289  01AE  0808               	andlw	0Fh
  3290  01AF  390F               	iorwf	0+(??_lcd_instReg+1)+0,w
  3291  01B0  0473               	movwf	(8)	;volatile
  3292  01B1  0088               	line	63
  3293                           	
  3294                           l1149:	
  3295  01B2                     ;lcd.c: 63:     PORTDbits.RD3 = 0;
  3296                           	bcf	(8),3	;volatile
  3297  01B2  1188               	line	64
  3298                           ;lcd.c: 64:     if( i == 0x01 || i == 0x02 )
  3299                           		decf	((lcd_instReg@i)),w
  3300  01B3  0374               	btfsc	status,2
  3301  01B4  1903               	goto	u551
  3302  01B5  29B7               	goto	u550
  3303  01B6  29B8               u551:
  3304  01B7                     	goto	l1153
  3305  01B7  29BF               u550:
  3306  01B8                     	
  3307                           l1151:	
  3308  01B8                     		movlw	2
  3309  01B8  3002               	xorwf	((lcd_instReg@i)),w
  3310  01B9  0674               	btfss	status,2
  3311  01BA  1D03               	goto	u561
  3312  01BB  29BD               	goto	u560
  3313  01BC  29BE               u561:
  3314  01BD                     	goto	l1155
  3315  01BD  29C9               u560:
  3316  01BE                     	goto	l1153
  3317  01BE  29BF               	
  3318                           l168:	
  3319  01BF                     	line	65
  3320                           	
  3321                           l1153:	
  3322  01BF                     ;lcd.c: 65:         _delay((unsigned long)((2)*(4000000/4000.0)));
  3323                           	opt asmopt_push
  3324                           opt asmopt_off
  3325                           movlw	3
  3326  01BF  3003               movwf	((??_lcd_instReg+0)+0+1),f
  3327  01C0  00F3               	movlw	151
  3328  01C1  3097               movwf	((??_lcd_instReg+0)+0),f
  3329  01C2  00F2               	u1297:
  3330  01C3                     decfsz	((??_lcd_instReg+0)+0),f
  3331  01C3  0BF2               	goto	u1297
  3332  01C4  29C3               	decfsz	((??_lcd_instReg+0)+0+1),f
  3333  01C5  0BF3               	goto	u1297
  3334  01C6  29C3               	nop2
  3335  01C7  29C8               opt asmopt_pop
  3336                           
  3337                           	goto	l1157
  3338  01C8  29CE               	line	66
  3339                           ;lcd.c: 66:     else
  3340                           	
  3341                           l166:	
  3342  01C9                     	line	67
  3343                           	
  3344                           l1155:	
  3345  01C9                     ;lcd.c: 67:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  3346                           	opt asmopt_push
  3347                           opt asmopt_off
  3348                           	movlw	13
  3349  01C9  300D               movwf	((??_lcd_instReg+0)+0),f
  3350  01CA  00F2               	u1307:
  3351  01CB                     decfsz	(??_lcd_instReg+0)+0,f
  3352  01CB  0BF2               	goto	u1307
  3353  01CC  29CB               opt asmopt_pop
  3354                           
  3355                           	goto	l1157
  3356  01CD  29CE               	
  3357                           l169:	
  3358  01CE                     	line	68
  3359                           	
  3360                           l1157:	
  3361  01CE                     ;lcd.c: 68:     PORTDbits.RD3 = 1;
  3362                           	bcf	status, 5	;RP0=0, select bank0
  3363  01CE  1283               	bcf	status, 6	;RP1=0, select bank0
  3364  01CF  1303               	bsf	(8),3	;volatile
  3365  01D0  1588               	line	71
  3366                           	
  3367                           l1159:	
  3368  01D1                     ;lcd.c: 71:     if( (i & 0xF0) == (0x20 | 0x00) )
  3369                           	movlw	low(0F0h)
  3370  01D1  30F0               	andwf	(lcd_instReg@i),w
  3371  01D2  0574               	movwf	(??_lcd_instReg+0)+0
  3372  01D3  00F2               		movlw	32
  3373  01D4  3020               	xorwf	((??_lcd_instReg+0)+0),w
  3374  01D5  0672               	btfss	status,2
  3375  01D6  1D03               	goto	u571
  3376  01D7  29D9               	goto	u570
  3377  01D8  29DA               u571:
  3378  01D9                     	goto	l1171
  3379  01D9  29F8               u570:
  3380  01DA                     	line	73
  3381                           	
  3382                           l1161:	
  3383  01DA                     ;lcd.c: 72:     {;lcd.c: 73:         PORTDbits.RD2 = 0;
  3384                           	bcf	(8),2	;volatile
  3385  01DA  1108               	line	74
  3386                           	
  3387                           l1163:	
  3388  01DB                     ;lcd.c: 74:         PORTD = ((PORTD & 0x0F)|(i>>4<<4));
  3389                           	movf	(lcd_instReg@i),w
  3390  01DB  0874               	movwf	(??_lcd_instReg+0)+0
  3391  01DC  00F2               	movlw	04h
  3392  01DD  3004               u585:
  3393  01DE                     	clrc
  3394  01DE  1003               	rrf	(??_lcd_instReg+0)+0,f
  3395  01DF  0CF2               	addlw	-1
  3396  01E0  3EFF               	skipz
  3397  01E1  1D03               	goto	u585
  3398  01E2  29DE               	movf	0+(??_lcd_instReg+0)+0,w
  3399  01E3  0872               	movwf	(??_lcd_instReg+1)+0
  3400  01E4  00F3               	movlw	04h
  3401  01E5  3004               u595:
  3402  01E6                     	clrc
  3403  01E6  1003               	rlf	(??_lcd_instReg+1)+0,f
  3404  01E7  0DF3               	addlw	-1
  3405  01E8  3EFF               	skipz
  3406  01E9  1D03               	goto	u595
  3407  01EA  29E6               	movf	(8),w	;volatile
  3408  01EB  0808               	andlw	0Fh
  3409  01EC  390F               	iorwf	0+(??_lcd_instReg+1)+0,w
  3410  01ED  0473               	movwf	(8)	;volatile
  3411  01EE  0088               	line	75
  3412                           	
  3413                           l1165:	
  3414  01EF                     ;lcd.c: 75:         PORTDbits.RD3 = 0;
  3415                           	bcf	(8),3	;volatile
  3416  01EF  1188               	line	76
  3417                           	
  3418                           l1167:	
  3419  01F0                     ;lcd.c: 76:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  3420                           	opt asmopt_push
  3421                           opt asmopt_off
  3422                           	movlw	13
  3423  01F0  300D               movwf	((??_lcd_instReg+0)+0),f
  3424  01F1  00F2               	u1317:
  3425  01F2                     decfsz	(??_lcd_instReg+0)+0,f
  3426  01F2  0BF2               	goto	u1317
  3427  01F3  29F2               opt asmopt_pop
  3428                           
  3429                           	line	77
  3430                           	
  3431                           l1169:	
  3432  01F4                     ;lcd.c: 77:         PORTDbits.RD3 = 1;
  3433                           	bcf	status, 5	;RP0=0, select bank0
  3434  01F4  1283               	bcf	status, 6	;RP1=0, select bank0
  3435  01F5  1303               	bsf	(8),3	;volatile
  3436  01F6  1588               	goto	l1171
  3437  01F7  29F8               	line	78
  3438                           ;lcd.c: 78:     }
  3439                           	
  3440                           l170:	
  3441  01F8                     	line	80
  3442                           	
  3443                           l1171:	
  3444  01F8                     ;lcd.c: 80:     PORTDbits.RD2 = 0;
  3445                           	bcf	(8),2	;volatile
  3446  01F8  1108               	line	81
  3447                           	
  3448                           l1173:	
  3449  01F9                     ;lcd.c: 81:     PORTD = ((PORTD & 0x0F)|(i<<4));
  3450                           	movf	(lcd_instReg@i),w
  3451  01F9  0874               	movwf	(??_lcd_instReg+0)+0
  3452  01FA  00F2               	movlw	04h
  3453  01FB  3004               u605:
  3454  01FC                     	clrc
  3455  01FC  1003               	rlf	(??_lcd_instReg+0)+0,f
  3456  01FD  0DF2               	addlw	-1
  3457  01FE  3EFF               	skipz
  3458  01FF  1D03               	goto	u605
  3459  0200  29FC               	movf	(8),w	;volatile
  3460  0201  0808               	andlw	0Fh
  3461  0202  390F               	iorwf	0+(??_lcd_instReg+0)+0,w
  3462  0203  0472               	movwf	(8)	;volatile
  3463  0204  0088               	line	82
  3464                           	
  3465                           l1175:	
  3466  0205                     ;lcd.c: 82:     PORTDbits.RD3 = 0;
  3467                           	bcf	(8),3	;volatile
  3468  0205  1188               	line	83
  3469                           	
  3470                           l1177:	
  3471  0206                     ;lcd.c: 83:     if( i == 0x01 || i == 0x02 )
  3472                           		decf	((lcd_instReg@i)),w
  3473  0206  0374               	btfsc	status,2
  3474  0207  1903               	goto	u611
  3475  0208  2A0A               	goto	u610
  3476  0209  2A0B               u611:
  3477  020A                     	goto	l1181
  3478  020A  2A12               u610:
  3479  020B                     	
  3480                           l1179:	
  3481  020B                     		movlw	2
  3482  020B  3002               	xorwf	((lcd_instReg@i)),w
  3483  020C  0674               	btfss	status,2
  3484  020D  1D03               	goto	u621
  3485  020E  2A10               	goto	u620
  3486  020F  2A11               u621:
  3487  0210                     	goto	l1183
  3488  0210  2A1C               u620:
  3489  0211                     	goto	l1181
  3490  0211  2A12               	
  3491                           l173:	
  3492  0212                     	line	84
  3493                           	
  3494                           l1181:	
  3495  0212                     ;lcd.c: 84:         _delay((unsigned long)((2)*(4000000/4000.0)));
  3496                           	opt asmopt_push
  3497                           opt asmopt_off
  3498                           movlw	3
  3499  0212  3003               movwf	((??_lcd_instReg+0)+0+1),f
  3500  0213  00F3               	movlw	151
  3501  0214  3097               movwf	((??_lcd_instReg+0)+0),f
  3502  0215  00F2               	u1327:
  3503  0216                     decfsz	((??_lcd_instReg+0)+0),f
  3504  0216  0BF2               	goto	u1327
  3505  0217  2A16               	decfsz	((??_lcd_instReg+0)+0+1),f
  3506  0218  0BF3               	goto	u1327
  3507  0219  2A16               	nop2
  3508  021A  2A1B               opt asmopt_pop
  3509                           
  3510                           	goto	l1185
  3511  021B  2A21               	line	85
  3512                           ;lcd.c: 85:     else
  3513                           	
  3514                           l171:	
  3515  021C                     	line	86
  3516                           	
  3517                           l1183:	
  3518  021C                     ;lcd.c: 86:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  3519                           	opt asmopt_push
  3520                           opt asmopt_off
  3521                           	movlw	13
  3522  021C  300D               movwf	((??_lcd_instReg+0)+0),f
  3523  021D  00F2               	u1337:
  3524  021E                     decfsz	(??_lcd_instReg+0)+0,f
  3525  021E  0BF2               	goto	u1337
  3526  021F  2A1E               opt asmopt_pop
  3527                           
  3528                           	goto	l1185
  3529  0220  2A21               	
  3530                           l174:	
  3531  0221                     	line	87
  3532                           	
  3533                           l1185:	
  3534  0221                     ;lcd.c: 87:     PORTDbits.RD3 = 1;
  3535                           	bcf	status, 5	;RP0=0, select bank0
  3536  0221  1283               	bcf	status, 6	;RP1=0, select bank0
  3537  0222  1303               	bsf	(8),3	;volatile
  3538  0223  1588               	line	88
  3539                           	
  3540                           l175:	
  3541  0224                     	return
  3542  0224  0008               	opt stack 0
  3543                           GLOBAL	__end_of_lcd_instReg
  3544                           	__end_of_lcd_instReg:
  3545  0225                     	signat	_lcd_instReg,4217
  3546                           	global	_delay
  3547                           
  3548 ;; *************** function _delay *****************
  3549 ;; Defined at:
  3550 ;;		line 7 in file "delay.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;  t               2    2[COMMON] unsigned int 
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;		None
  3555 ;; Return value:  Size  Location     Type
  3556 ;;                  1    wreg      void 
  3557 ;; Registers used:
  3558 ;;		wreg, status,2, status,0
  3559 ;; Tracked objects:
  3560 ;;		On entry : 0/0
  3561 ;;		On exit  : 0/0
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3564 ;;      Params:         2       0       0       0       0
  3565 ;;      Locals:         0       0       0       0       0
  3566 ;;      Temps:          1       0       0       0       0
  3567 ;;      Totals:         3       0       0       0       0
  3568 ;;Total ram usage:        3 bytes
  3569 ;; Hardware stack levels used:    1
  3570 ;; Hardware stack levels required when called:    2
  3571 ;; This function calls:
  3572 ;;		Nothing
  3573 ;; This function is called by:
  3574 ;;		_lcd_init
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3578                           	file	"delay.c"
  3579                           	line	7
  3580                           global __ptext9
  3581                           __ptext9:	;psect for function _delay
  3582  03F8                     psect	text9
  3583                           	file	"delay.c"
  3584                           	line	7
  3585                           	global	__size_of_delay
  3586                           	__size_of_delay	equ	__end_of_delay-_delay
  3587  0017                     	
  3588                           _delay:	
  3589  03F8                     ;incstack = 0
  3590                           	opt	stack 4
  3591                           ; Regs used in _delay: [wreg+status,2+status,0]
  3592                           	line	9
  3593                           	
  3594                           l1187:	
  3595  03F8                     ;delay.c: 7: void delay( unsigned int t );delay.c: 8: {;delay.c: 9:     while( t )
  3596                           	goto	l1191
  3597  03F8  2C07               	
  3598                           l151:	
  3599  03F9                     	line	11
  3600                           	
  3601                           l1189:	
  3602  03F9                     ;delay.c: 10:     {;delay.c: 11:         _delay((unsigned long)((1)*(4000000/4000.0)));

  3603                           	opt asmopt_push
  3604                           opt asmopt_off
  3605                           	movlw	199
  3606  03F9  30C7               movwf	((??_delay+0)+0),f
  3607  03FA  00F4               	u1347:
  3608  03FB                     	nop2
  3609  03FB  2BFC               decfsz	(??_delay+0)+0,f
  3610  03FC  0BF4               	goto	u1347
  3611  03FD  2BFB               	nop2
  3612  03FE  2BFF               	nop2
  3613  03FF  2C00               opt asmopt_pop
  3614                           
  3615                           	line	12
  3616                           ;delay.c: 12:         --t;
  3617                           	movlw	01h
  3618  0400  3001               	subwf	(delay@t),f
  3619  0401  02F2               	movlw	0
  3620  0402  3000               	skipc
  3621  0403  1C03               	decf	(delay@t+1),f
  3622  0404  03F3               	subwf	(delay@t+1),f
  3623  0405  02F3               	goto	l1191
  3624  0406  2C07               	line	13
  3625                           ;delay.c: 13:     }
  3626                           	
  3627                           l150:	
  3628  0407                     	line	9
  3629                           	
  3630                           l1191:	
  3631  0407                     ;delay.c: 9:     while( t )
  3632                           	movf	((delay@t)),w
  3633  0407  0872               iorwf	((delay@t+1)),w
  3634  0408  0473               	btfss	status,2
  3635  0409  1D03               	goto	u631
  3636  040A  2C0C               	goto	u630
  3637  040B  2C0D               u631:
  3638  040C                     	goto	l1189
  3639  040C  2BF9               u630:
  3640  040D                     	goto	l153
  3641  040D  2C0E               	
  3642                           l152:	
  3643  040E                     	line	14
  3644                           	
  3645                           l153:	
  3646  040E                     	return
  3647  040E  0008               	opt stack 0
  3648                           GLOBAL	__end_of_delay
  3649                           	__end_of_delay:
  3650  040F                     	signat	_delay,4217
  3651                           	global	_T0_status
  3652                           
  3653 ;; *************** function _T0_status *****************
  3654 ;; Defined at:
  3655 ;;		line 59 in file "timers.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;		None
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;		None
  3660 ;; Return value:  Size  Location     Type
  3661 ;;                  2    2[COMMON] unsigned int 
  3662 ;; Registers used:
  3663 ;;		wreg
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3669 ;;      Params:         2       0       0       0       0
  3670 ;;      Locals:         0       0       0       0       0
  3671 ;;      Temps:          0       0       0       0       0
  3672 ;;      Totals:         2       0       0       0       0
  3673 ;;Total ram usage:        2 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; Hardware stack levels required when called:    2
  3676 ;; This function calls:
  3677 ;;		Nothing
  3678 ;; This function is called by:
  3679 ;;		_main
  3680 ;;		_main2
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3684                           	file	"timers.c"
  3685                           	line	59
  3686                           global __ptext10
  3687                           __ptext10:	;psect for function _T0_status
  3688  0472                     psect	text10
  3689                           	file	"timers.c"
  3690                           	line	59
  3691                           	global	__size_of_T0_status
  3692                           	__size_of_T0_status	equ	__end_of_T0_status-_T0_status
  3693  0008                     	
  3694                           _T0_status:	
  3695  0472                     ;incstack = 0
  3696                           	opt	stack 5
  3697                           ; Regs used in _T0_status: [wreg]
  3698                           	line	61
  3699                           	
  3700                           l1327:	
  3701  0472                     ;timers.c: 61:     return( T0count );
  3702                           	bcf	status, 5	;RP0=0, select bank0
  3703  0472  1283               	bcf	status, 6	;RP1=0, select bank0
  3704  0473  1303               	movf	(_T0count+1),w
  3705  0474  0839               	movwf	(?_T0_status+1)
  3706  0475  00F3               	movf	(_T0count),w
  3707  0476  0838               	movwf	(?_T0_status)
  3708  0477  00F2               	goto	l89
  3709  0478  2C79               	
  3710                           l1329:	
  3711  0479                     	line	62
  3712                           	
  3713                           l89:	
  3714  0479                     	return
  3715  0479  0008               	opt stack 0
  3716                           GLOBAL	__end_of_T0_status
  3717                           	__end_of_T0_status:
  3718  047A                     	signat	_T0_status,90
  3719                           	global	_T0_start
  3720                           
  3721 ;; *************** function _T0_start *****************
  3722 ;; Defined at:
  3723 ;;		line 42 in file "timers.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;  c               2    2[COMMON] unsigned int 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;		None
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      void 
  3730 ;; Registers used:
  3731 ;;		wreg
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3737 ;;      Params:         2       0       0       0       0
  3738 ;;      Locals:         0       0       0       0       0
  3739 ;;      Temps:          0       0       0       0       0
  3740 ;;      Totals:         2       0       0       0       0
  3741 ;;Total ram usage:        2 bytes
  3742 ;; Hardware stack levels used:    1
  3743 ;; Hardware stack levels required when called:    2
  3744 ;; This function calls:
  3745 ;;		Nothing
  3746 ;; This function is called by:
  3747 ;;		_main
  3748 ;;		_main2
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3752                           	line	42
  3753                           global __ptext11
  3754                           __ptext11:	;psect for function _T0_start
  3755  0468                     psect	text11
  3756                           	file	"timers.c"
  3757                           	line	42
  3758                           	global	__size_of_T0_start
  3759                           	__size_of_T0_start	equ	__end_of_T0_start-_T0_start
  3760  000A                     	
  3761                           _T0_start:	
  3762  0468                     ;incstack = 0
  3763                           	opt	stack 5
  3764                           ; Regs used in _T0_start: [wreg]
  3765                           	line	44
  3766                           	
  3767                           l1323:	
  3768  0468                     ;timers.c: 42: void T0_start( unsigned int c );timers.c: 43: {;timers.c: 44:     TMR0 = 
                                 (256-250);
  3769                           	movlw	low(06h)
  3770  0468  3006               	bcf	status, 5	;RP0=0, select bank0
  3771  0469  1283               	bcf	status, 6	;RP1=0, select bank0
  3772  046A  1303               	movwf	(1)	;volatile
  3773  046B  0081               	line	45
  3774                           ;timers.c: 45:     T0count = c;
  3775                           	movf	(T0_start@c+1),w
  3776  046C  0873               	movwf	(_T0count+1)
  3777  046D  00B9               	movf	(T0_start@c),w
  3778  046E  0872               	movwf	(_T0count)
  3779  046F  00B8               	line	46
  3780                           	
  3781                           l1325:	
  3782  0470                     ;timers.c: 46:     INTCONbits.T0IE = 1;
  3783                           	bsf	(11),5	;volatile
  3784  0470  168B               	line	47
  3785                           	
  3786                           l80:	
  3787  0471                     	return
  3788  0471  0008               	opt stack 0
  3789                           GLOBAL	__end_of_T0_start
  3790                           	__end_of_T0_start:
  3791  0472                     	signat	_T0_start,4217
  3792                           	global	_T0_init
  3793                           
  3794 ;; *************** function _T0_init *****************
  3795 ;; Defined at:
  3796 ;;		line 21 in file "timers.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;		None
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		wreg, status,2, status,0
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3810 ;;      Params:         0       0       0       0       0
  3811 ;;      Locals:         0       0       0       0       0
  3812 ;;      Temps:          0       0       0       0       0
  3813 ;;      Totals:         0       0       0       0       0
  3814 ;;Total ram usage:        0 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; Hardware stack levels required when called:    2
  3817 ;; This function calls:
  3818 ;;		Nothing
  3819 ;; This function is called by:
  3820 ;;		_main
  3821 ;;		_main2
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3825                           	line	21
  3826                           global __ptext12
  3827                           __ptext12:	;psect for function _T0_init
  3828  0448                     psect	text12
  3829                           	file	"timers.c"
  3830                           	line	21
  3831                           	global	__size_of_T0_init
  3832                           	__size_of_T0_init	equ	__end_of_T0_init-_T0_init
  3833  0010                     	
  3834                           _T0_init:	
  3835  0448                     ;incstack = 0
  3836                           	opt	stack 5
  3837                           ; Regs used in _T0_init: [wreg+status,2+status,0]
  3838                           	line	23
  3839                           	
  3840                           l949:	
  3841  0448                     ;timers.c: 23:     INTCONbits.GIE = 0;
  3842                           	bcf	(11),7	;volatile
  3843  0448  138B               	line	24
  3844                           ;timers.c: 24:     OPTION_REGbits.PSA = 0;
  3845                           	bsf	status, 5	;RP0=1, select bank1
  3846  0449  1683               	bcf	status, 6	;RP1=0, select bank1
  3847  044A  1303               	bcf	(129)^080h,3	;volatile
  3848  044B  1181               	line	25
  3849                           	
  3850                           l951:	
  3851  044C                     ;timers.c: 25:     OPTION_REGbits.PS = 0x1;
  3852                           	movf	(129)^080h,w	;volatile
  3853  044C  0801               	andlw	not (((1<<3)-1)<<0)
  3854  044D  39F8               	iorlw	(01h & ((1<<3)-1))<<0
  3855  044E  3801               	movwf	(129)^080h	;volatile
  3856  044F  0081               	line	26
  3857                           	
  3858                           l953:	
  3859  0450                     ;timers.c: 26:     OPTION_REGbits.T0CS = 0;
  3860                           	bcf	(129)^080h,5	;volatile
  3861  0450  1281               	line	27
  3862                           	
  3863                           l955:	
  3864  0451                     ;timers.c: 27:     TMR0 = (256-250);
  3865                           	movlw	low(06h)
  3866  0451  3006               	bcf	status, 5	;RP0=0, select bank0
  3867  0452  1283               	bcf	status, 6	;RP1=0, select bank0
  3868  0453  1303               	movwf	(1)	;volatile
  3869  0454  0081               	line	28
  3870                           	
  3871                           l957:	
  3872  0455                     ;timers.c: 28:     INTCONbits.T0IE = 0;
  3873                           	bcf	(11),5	;volatile
  3874  0455  128B               	line	29
  3875                           	
  3876                           l959:	
  3877  0456                     ;timers.c: 29:     INTCONbits.GIE = 1;
  3878                           	bsf	(11),7	;volatile
  3879  0456  178B               	line	30
  3880                           	
  3881                           l73:	
  3882  0457                     	return
  3883  0457  0008               	opt stack 0
  3884                           GLOBAL	__end_of_T0_init
  3885                           	__end_of_T0_init:
  3886  0458                     	signat	_T0_init,89
  3887                           	global	_isr
  3888                           
  3889 ;; *************** function _isr *****************
  3890 ;; Defined at:
  3891 ;;		line 7 in file "interrupt.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;		None
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;		None
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  1    wreg      void 
  3898 ;; Registers used:
  3899 ;;		wreg, status,2, status,0, pclath, cstack
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3905 ;;      Params:         0       0       0       0       0
  3906 ;;      Locals:         0       0       0       0       0
  3907 ;;      Temps:          2       0       0       0       0
  3908 ;;      Totals:         2       0       0       0       0
  3909 ;;Total ram usage:        2 bytes
  3910 ;; Hardware stack levels used:    1
  3911 ;; Hardware stack levels required when called:    1
  3912 ;; This function calls:
  3913 ;;		_T0_int
  3914 ;;		_T1_int
  3915 ;;		_T2_int
  3916 ;; This function is called by:
  3917 ;;		Interrupt level 1
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  3921                           	file	"interrupt.c"
  3922                           	line	7
  3923                           global __ptext13
  3924                           __ptext13:	;psect for function _isr
  3925  03A7                     psect	text13
  3926                           	file	"interrupt.c"
  3927                           	line	7
  3928                           	global	__size_of_isr
  3929                           	__size_of_isr	equ	__end_of_isr-_isr
  3930  002C                     	
  3931                           _isr:	
  3932  03A7                     ;incstack = 0
  3933                           	opt	stack 3
  3934                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  3935                           psect	intentry,class=CODE,delta=2
  3936                           global __pintentry
  3937                           __pintentry:
  3938  0004                     global interrupt_function
  3939                           interrupt_function:
  3940  0004                     	global saved_w
  3941                           	saved_w	set	btemp+0
  3942  007E                     	movwf	saved_w
  3943  0004  00FE               	swapf	status,w
  3944  0005  0E03               	movwf	(??_isr+0)
  3945  0006  00F0               	movf	pclath,w
  3946  0007  080A               	movwf	(??_isr+1)
  3947  0008  00F1               	ljmp	_isr
  3948  0009  120A  118A  2BA7   psect	text13
  3949                           	line	9
  3950                           	
  3951                           i1l1433:	
  3952  03A7                     ;interrupt.c: 9:     if( INTCONbits.T0IF )
  3953                           	btfss	(11),2	;volatile
  3954  03A7  1D0B               	goto	u102_21
  3955  03A8  2BAA               	goto	u102_20
  3956  03A9  2BAB               u102_21:
  3957  03AA                     	goto	i1l1439
  3958  03AA  2BB2               u102_20:
  3959  03AB                     	line	11
  3960                           	
  3961                           i1l1435:	
  3962  03AB                     ;interrupt.c: 10:     {;interrupt.c: 11:         INTCONbits.T0IF = 0;
  3963                           	bcf	(11),2	;volatile
  3964  03AB  110B               	line	12
  3965                           	
  3966                           i1l1437:	
  3967  03AC                     ;interrupt.c: 12:         T0_int();
  3968                           	fcall	_T0_int
  3969  03AC  120A  118A  2436  120A  118A  	goto	i1l1439
  3970  03B1  2BB2               	line	13
  3971                           ;interrupt.c: 13:     }
  3972                           	
  3973                           i1l142:	
  3974  03B2                     	line	14
  3975                           	
  3976                           i1l1439:	
  3977  03B2                     ;interrupt.c: 14:     if( PIR1bits.TMR1IF )
  3978                           	bcf	status, 5	;RP0=0, select bank0
  3979  03B2  1283               	bcf	status, 6	;RP1=0, select bank0
  3980  03B3  1303               	btfss	(12),0	;volatile
  3981  03B4  1C0C               	goto	u103_21
  3982  03B5  2BB7               	goto	u103_20
  3983  03B6  2BB8               u103_21:
  3984  03B7                     	goto	i1l1445
  3985  03B7  2BBF               u103_20:
  3986  03B8                     	line	16
  3987                           	
  3988                           i1l1441:	
  3989  03B8                     ;interrupt.c: 15:     {;interrupt.c: 16:         PIR1bits.TMR1IF = 0;
  3990                           	bcf	(12),0	;volatile
  3991  03B8  100C               	line	17
  3992                           	
  3993                           i1l1443:	
  3994  03B9                     ;interrupt.c: 17:         T1_int();
  3995                           	fcall	_T1_int
  3996  03B9  120A  118A  240F  120A  118A  	goto	i1l1445
  3997  03BE  2BBF               	line	18
  3998                           ;interrupt.c: 18:     }
  3999                           	
  4000                           i1l143:	
  4001  03BF                     	line	19
  4002                           	
  4003                           i1l1445:	
  4004  03BF                     ;interrupt.c: 19:     if( PIR1bits.TMR2IF )
  4005                           	bcf	status, 5	;RP0=0, select bank0
  4006  03BF  1283               	bcf	status, 6	;RP1=0, select bank0
  4007  03C0  1303               	btfss	(12),1	;volatile
  4008  03C1  1C8C               	goto	u104_21
  4009  03C2  2BC4               	goto	u104_20
  4010  03C3  2BC5               u104_21:
  4011  03C4                     	goto	i1l145
  4012  03C4  2BCC               u104_20:
  4013  03C5                     	line	21
  4014                           	
  4015                           i1l1447:	
  4016  03C5                     ;interrupt.c: 20:     {;interrupt.c: 21:         PIR1bits.TMR2IF = 0;
  4017                           	bcf	(12),1	;volatile
  4018  03C5  108C               	line	22
  4019                           	
  4020                           i1l1449:	
  4021  03C6                     ;interrupt.c: 22:         T2_int();
  4022                           	fcall	_T2_int
  4023  03C6  120A  118A  2458  120A  118A  	goto	i1l145
  4024  03CB  2BCC               	line	23
  4025                           ;interrupt.c: 23:     }
  4026                           	
  4027                           i1l144:	
  4028  03CC                     	line	24
  4029                           	
  4030                           i1l145:	
  4031  03CC                     	movf	(??_isr+1),w
  4032  03CC  0871               	movwf	pclath
  4033  03CD  008A               	swapf	(??_isr+0)^0FFFFFF80h,w
  4034  03CE  0E70               	movwf	status
  4035  03CF  0083               	swapf	saved_w,f
  4036  03D0  0EFE               	swapf	saved_w,w
  4037  03D1  0E7E               	retfie
  4038  03D2  0009               	opt stack 0
  4039                           GLOBAL	__end_of_isr
  4040                           	__end_of_isr:
  4041  03D3                     	signat	_isr,89
  4042                           	global	_T2_int
  4043                           
  4044 ;; *************** function _T2_int *****************
  4045 ;; Defined at:
  4046 ;;		line 132 in file "timers.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;		None
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;		None
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  1    wreg      void 
  4053 ;; Registers used:
  4054 ;;		wreg, status,2, status,0
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4060 ;;      Params:         0       0       0       0       0
  4061 ;;      Locals:         0       0       0       0       0
  4062 ;;      Temps:          0       0       0       0       0
  4063 ;;      Totals:         0       0       0       0       0
  4064 ;;Total ram usage:        0 bytes
  4065 ;; Hardware stack levels used:    1
  4066 ;; This function calls:
  4067 ;;		Nothing
  4068 ;; This function is called by:
  4069 ;;		_isr
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4073                           	file	"timers.c"
  4074                           	line	132
  4075                           global __ptext14
  4076                           __ptext14:	;psect for function _T2_int
  4077  0458                     psect	text14
  4078                           	file	"timers.c"
  4079                           	line	132
  4080                           	global	__size_of_T2_int
  4081                           	__size_of_T2_int	equ	__end_of_T2_int-_T2_int
  4082  0010                     	
  4083                           _T2_int:	
  4084  0458                     ;incstack = 0
  4085                           	opt	stack 3
  4086                           ; Regs used in _T2_int: [wreg+status,2+status,0]
  4087                           	line	134
  4088                           	
  4089                           i1l1377:	
  4090  0458                     ;timers.c: 134:     if( T2count )
  4091                           	bcf	status, 5	;RP0=0, select bank0
  4092  0458  1283               	bcf	status, 6	;RP1=0, select bank0
  4093  0459  1303               	movf	((_T2count)),w
  4094  045A  0834               iorwf	((_T2count+1)),w
  4095  045B  0435               	btfsc	status,2
  4096  045C  1903               	goto	u99_21
  4097  045D  2C5F               	goto	u99_20
  4098  045E  2C60               u99_21:
  4099  045F                     	goto	i1l115
  4100  045F  2C67               u99_20:
  4101  0460                     	line	136
  4102                           	
  4103                           i1l1379:	
  4104  0460                     ;timers.c: 135:     {;timers.c: 136:         --T2count;
  4105                           	movlw	01h
  4106  0460  3001               	subwf	(_T2count),f
  4107  0461  02B4               	movlw	0
  4108  0462  3000               	skipc
  4109  0463  1C03               	decf	(_T2count+1),f
  4110  0464  03B5               	subwf	(_T2count+1),f
  4111  0465  02B5               	goto	i1l115
  4112  0466  2C67               	line	137
  4113                           ;timers.c: 137:     }
  4114                           	
  4115                           i1l114:	
  4116  0467                     	line	138
  4117                           	
  4118                           i1l115:	
  4119  0467                     	return
  4120  0467  0008               	opt stack 0
  4121                           GLOBAL	__end_of_T2_int
  4122                           	__end_of_T2_int:
  4123  0468                     	signat	_T2_int,89
  4124                           	global	_T1_int
  4125                           
  4126 ;; *************** function _T1_int *****************
  4127 ;; Defined at:
  4128 ;;		line 80 in file "timers.c"
  4129 ;; Parameters:    Size  Location     Type
  4130 ;;		None
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;		None
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  1    wreg      void 
  4135 ;; Registers used:
  4136 ;;		wreg, status,2, status,0
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4142 ;;      Params:         0       0       0       0       0
  4143 ;;      Locals:         0       0       0       0       0
  4144 ;;      Temps:          0       0       0       0       0
  4145 ;;      Totals:         0       0       0       0       0
  4146 ;;Total ram usage:        0 bytes
  4147 ;; Hardware stack levels used:    1
  4148 ;; This function calls:
  4149 ;;		Nothing
  4150 ;; This function is called by:
  4151 ;;		_isr
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  4155                           	line	80
  4156                           global __ptext15
  4157                           __ptext15:	;psect for function _T1_int
  4158  040F                     psect	text15
  4159                           	file	"timers.c"
  4160                           	line	80
  4161                           	global	__size_of_T1_int
  4162                           	__size_of_T1_int	equ	__end_of_T1_int-_T1_int
  4163  0014                     	
  4164                           _T1_int:	
  4165  040F                     ;incstack = 0
  4166                           	opt	stack 3
  4167                           ; Regs used in _T1_int: [wreg+status,2+status,0]
  4168                           	line	82
  4169                           	
  4170                           i1l1371:	
  4171  040F                     ;timers.c: 82:     TMR1H = ((0xFFFF-1000+1) >> 8) & 0x00FF;
  4172                           	movlw	low(0FCh)
  4173  040F  30FC               	bcf	status, 5	;RP0=0, select bank0
  4174  0410  1283               	bcf	status, 6	;RP1=0, select bank0
  4175  0411  1303               	movwf	(15)	;volatile
  4176  0412  008F               	line	83
  4177                           ;timers.c: 83:     TMR1L = ((0xFFFF-1000+1) >> 0) & 0x00FF;
  4178                           	movlw	low(018h)
  4179  0413  3018               	movwf	(14)	;volatile
  4180  0414  008E               	line	84
  4181                           	
  4182                           i1l1373:	
  4183  0415                     ;timers.c: 84:     if( T1count )
  4184                           	movf	((_T1count)),w
  4185  0415  0836               iorwf	((_T1count+1)),w
  4186  0416  0437               	btfsc	status,2
  4187  0417  1903               	goto	u98_21
  4188  0418  2C1A               	goto	u98_20
  4189  0419  2C1B               u98_21:
  4190  041A                     	goto	i1l96
  4191  041A  2C22               u98_20:
  4192  041B                     	line	86
  4193                           	
  4194                           i1l1375:	
  4195  041B                     ;timers.c: 85:     {;timers.c: 86:         --T1count;
  4196                           	movlw	01h
  4197  041B  3001               	subwf	(_T1count),f
  4198  041C  02B6               	movlw	0
  4199  041D  3000               	skipc
  4200  041E  1C03               	decf	(_T1count+1),f
  4201  041F  03B7               	subwf	(_T1count+1),f
  4202  0420  02B7               	goto	i1l96
  4203  0421  2C22               	line	87
  4204                           ;timers.c: 87:     }
  4205                           	
  4206                           i1l95:	
  4207  0422                     	line	88
  4208                           	
  4209                           i1l96:	
  4210  0422                     	return
  4211  0422  0008               	opt stack 0
  4212                           GLOBAL	__end_of_T1_int
  4213                           	__end_of_T1_int:
  4214  0423                     	signat	_T1_int,89
  4215                           	global	_T0_int
  4216                           
  4217 ;; *************** function _T0_int *****************
  4218 ;; Defined at:
  4219 ;;		line 33 in file "timers.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;		None
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;		None
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1    wreg      void 
  4226 ;; Registers used:
  4227 ;;		wreg, status,2, status,0
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4233 ;;      Params:         0       0       0       0       0
  4234 ;;      Locals:         0       0       0       0       0
  4235 ;;      Temps:          0       0       0       0       0
  4236 ;;      Totals:         0       0       0       0       0
  4237 ;;Total ram usage:        0 bytes
  4238 ;; Hardware stack levels used:    1
  4239 ;; This function calls:
  4240 ;;		Nothing
  4241 ;; This function is called by:
  4242 ;;		_isr
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  4246                           	line	33
  4247                           global __ptext16
  4248                           __ptext16:	;psect for function _T0_int
  4249  0436                     psect	text16
  4250                           	file	"timers.c"
  4251                           	line	33
  4252                           	global	__size_of_T0_int
  4253                           	__size_of_T0_int	equ	__end_of_T0_int-_T0_int
  4254  0012                     	
  4255                           _T0_int:	
  4256  0436                     ;incstack = 0
  4257                           	opt	stack 3
  4258                           ; Regs used in _T0_int: [wreg+status,2+status,0]
  4259                           	line	35
  4260                           	
  4261                           i1l1365:	
  4262  0436                     ;timers.c: 35:     TMR0 = (256-250);
  4263                           	movlw	low(06h)
  4264  0436  3006               	bcf	status, 5	;RP0=0, select bank0
  4265  0437  1283               	bcf	status, 6	;RP1=0, select bank0
  4266  0438  1303               	movwf	(1)	;volatile
  4267  0439  0081               	line	36
  4268                           	
  4269                           i1l1367:	
  4270  043A                     ;timers.c: 36:     if( T0count )
  4271                           	movf	((_T0count)),w
  4272  043A  0838               iorwf	((_T0count+1)),w
  4273  043B  0439               	btfsc	status,2
  4274  043C  1903               	goto	u97_21
  4275  043D  2C3F               	goto	u97_20
  4276  043E  2C40               u97_21:
  4277  043F                     	goto	i1l77
  4278  043F  2C47               u97_20:
  4279  0440                     	line	38
  4280                           	
  4281                           i1l1369:	
  4282  0440                     ;timers.c: 37:     {;timers.c: 38:         --T0count;
  4283                           	movlw	01h
  4284  0440  3001               	subwf	(_T0count),f
  4285  0441  02B8               	movlw	0
  4286  0442  3000               	skipc
  4287  0443  1C03               	decf	(_T0count+1),f
  4288  0444  03B9               	subwf	(_T0count+1),f
  4289  0445  02B9               	goto	i1l77
  4290  0446  2C47               	line	39
  4291                           ;timers.c: 39:     }
  4292                           	
  4293                           i1l76:	
  4294  0447                     	line	40
  4295                           	
  4296                           i1l77:	
  4297  0447                     	return
  4298  0447  0008               	opt stack 0
  4299                           GLOBAL	__end_of_T0_int
  4300                           	__end_of_T0_int:
  4301  0448                     	signat	_T0_int,89
  4302                           global	___latbits
  4303                           ___latbits	equ	2
  4304  0002                     	global	btemp
  4305                           	btemp set 07Eh
  4306  007E                     
  4307                           	DABS	1,126,2	;btemp
  4308                           	global	wtemp0
  4309                           	wtemp0 set btemp+0
  4310  007E                     	end


Data Sizes:
    Strings     31
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     20      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_print@str	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[14]), 


Critical Paths under _main in COMMON

    _main->_lcd_print
    _lcd_print->_lcd_lincol
    _lcd_num->___awmod
    _lcd_lincol->_lcd_instReg
    _lcd_init->_delay
    _lcd_init->_lcd_instReg

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_num
    _lcd_num->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    6395
                                             16 BANK0      4     4      0
                            _T0_init
                           _T0_start
                          _T0_status
                            ___awmod
                           _lcd_init
                            _lcd_num
                          _lcd_print
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            5     3      2     940
                                              8 COMMON     2     0      2
                                              0 BANK0      3     3      0
                        _lcd_dataReg
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (1) _lcd_num                                             12     8      4    4178
                                              4 BANK0     12     8      4
                            ___awdiv
                            ___awmod
                        _lcd_dataReg
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (2) _lcd_lincol                                           3     2      1     372
                                              5 COMMON     3     2      1
                        _lcd_instReg
 ---------------------------------------------------------------------------------
 (2) _lcd_dataReg                                          3     3      0      44
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1165
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     427
                              _delay
                        _lcd_instReg
 ---------------------------------------------------------------------------------
 (3) _lcd_instReg                                          3     3      0     176
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     251
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _T0_status                                            2     0      2       0
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _T0_start                                             2     0      2     250
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _T0_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
                             _T0_int
                             _T1_int
                             _T2_int
 ---------------------------------------------------------------------------------
 (5) _T2_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _T1_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _T0_int                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _T0_init
   _T0_start
   _T0_status
   ___awmod
   _lcd_init
     _delay
     _lcd_instReg
   _lcd_num
     ___awdiv
     ___awmod
     _lcd_dataReg
     _lcd_lincol
       _lcd_instReg
   _lcd_print
     _lcd_dataReg
     _lcd_lincol
       _lcd_instReg

 _isr (ROOT)
   _T0_int
   _T1_int
   _T2_int

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      26       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      1A       5       32.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      26      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Mar 25 11:12:20 2022

                       pc 0002               __CFG_CP$OFF 0000              lcd_dataReg@d 0074  
                      l33 012C                        l34 0167                        l35 0166  
                      l36 0196                        l37 0197                        l38 0197  
                      l80 0471                        l73 0457                        l89 0479  
            ___awdiv@sign 0021                        fsr 0004                       l200 0064  
                     l201 0086                       l210 010A                       l202 0092  
                     l203 0087                       l205 00AF                       l150 0407  
                     l206 00B0                       l151 03F9                       l207 00BE  
                     l152 040E                       l208 00BE                       l153 040E  
                     l209 010A                       l170 01F8                       l171 021C  
                     l173 0212                       l181 0435                       l174 0221  
                     l166 01C9                       l190 0363                       l175 0224  
                     l191 034C                       l168 01BF                       l184 0339  
                     l440 0242                       l192 0370                       l169 01CE  
                     l441 0287                       l193 0370                       l442 0259  
                     l178 03A6                       l443 024D                       l444 025E  
                     l460 02E9                       l452 02A5                       l196 0034  
                     l445 025F                       l461 02F5                       l453 02AF  
                     l197 0078                       l446 0278                       l462 02FA  
                     l454 02EA                       l198 0049                       l447 0286  
                     l439 0234                       l455 02C4                       l199 0063  
                     l448 0292                       l456 02B8                       l449 0297  
                     l457 02C9                       l458 02CA                       l459 02DB  
                     l951 044C                       l953 0450                       l955 0451  
                     l957 0455                       l949 0448                       l959 0456  
                     _PR2 0092                       u610 020B              __CFG_CPD$OFF 0000  
                     u611 020A                       u620 0211                       u621 0210  
                     u605 01FC                       u630 040D                       u550 01B8  
                     u631 040C                       u551 01B7                       u535 01A1  
                     u560 01BE                       u800 02B5                       u561 01BD  
                     u545 01A9                       u801 02B4                       u570 01DA  
                     u571 01D9                       u820 02C8                       u821 02C7  
                     u645 0378                       u830 02D4                       u831 02D3  
                     u815 02B9                       u655 0380                       u585 01DE  
                     u665 0395                       u850 02E8                       u595 01E6  
                     u851 02E7                       u835 02D0                       u675 0427  
                     u860 02EF                       u780 029D                       u861 02EE  
                     u845 02DC                       u781 029C                       u790 02A9  
                     u791 02A8                       _min 007B                       _isr 03A7  
                     _seg 007A                       fsr0 0004              ___awmod@sign 0078  
            __CFG_LVP$OFF 0000               lcd_num@size 002C                      l1201 038E  
                    l1203 0391                      l1211 0424                      l1301 0308  
                    l1205 0392                      l1151 01B8                      l1303 0309  
                    l1207 039E                      l1161 01DA                      l1153 01BF  
                    l1145 019B                      l1305 030A                      l1209 03A3  
                    l1323 0468                      l1163 01DB                      l1171 01F8  
                    l1155 01C9                      l1147 019E                      l1307 030B  
                    l1325 0470                      l1181 0212                      l1173 01F9  
                    l1165 01EF                      l1157 01CE                      l1149 01B2  
                    l1309 0315                      l1261 029D                      l1501 034C  
                    l1327 0472                      l1191 0407                      l1183 021C  
                    l1175 0205                      l1167 01F0                      l1159 01D1  
                    l1271 02B5                      l1263 02A2                      l1511 0029  
                    l1503 0358                      l1329 0479                      l1185 0221  
                    l1177 0206                      l1169 01F4                      l1281 02D4  
                    l1273 02B8                      l1265 02A5                      l1257 0298  
                    l1193 0372                      l1521 0049                      l1513 002E  
                    l1505 035E                      l1187 03F8                      l1179 020B  
                    l1291 02F5                      l1283 02DB                      l1275 02BF  
                    l1267 02A9                      l1259 0299                      l1195 0375  
                    l1531 008D                      l1523 005E                      l1515 0034  
                    l1507 0363                      l1189 03F9                      l1461 0234  
                    l1453 0225                      l1293 02FA                      l1285 02E2  
                    l1277 02C4                      l1269 02AF                      l1197 0389  
                    l1541 00FC                      l1525 0064                      l1533 0092  
                    l1517 003E                      l1509 0020                      l1295 02FB  
                    l1471 024A                      l1463 0238                      l1455 0228  
                    l1279 02CA                      l1287 02EA                      l1199 038A  
                    l1535 00A6                      l1527 0078                      l1519 0044  
                    l1551 0137                      l1543 010B                      l1297 0304  
                    l1481 0270                      l1473 024D                      l1465 023D  
                    l1457 022C                      l1289 02EF                      l1537 00B0  
                    l1529 0087                      l1553 015C                      l1545 0115  
                    l1299 0307                      l1491 028C                      l1483 0276  
                    l1475 0254                      l1467 0242                      l1459 0231  
                    l1539 00B7                      l1555 0161                      l1547 0122  
                    l1493 0292                      l1485 0278                      l1477 0259  
                    l1469 0244                      l1557 0167                      l1549 012C  
                    l1495 0297                      l1487 027F                      l1479 025F  
                    l1559 017E                      l1489 0287                      l1497 033D  
                    l1499 0341                      ?_isr 0070                      STR_1 03EA  
                    STR_2 03D9                      u1110 0270                      u1111 026F  
                    u1200 0085                      u1105 0260                      u1201 0084  
                    u1130 0285                      u1050 022C                      u1210 00A6  
                    u1131 0284                      u1115 026C                      u1051 022B  
                    u1211 00A5                      u1140 028C                      u1060 0238  
                    u1220 00AE                      u1141 028B                      u1125 0279  
                    u1061 0237                      u1221 00AD                      u1205 0081  
                    u1070 024A                      u1230 00B7                      u1150 036F  
                    u1071 0249                      u1231 00B6                      u1215 00A2  
                    u1151 036E                      u1240 0109                      u1160 0025  
                    u1241 0108                      u1161 0023                      u1090 025D  
                    u1170 0026                      u1250 0137                      u1307 01CB  
                    u1091 025C                      u1251 0136                      u1180 002E  
                    u1260 0161                      u1317 01F2                      u1085 024E  
                    u1245 0105                      u1181 002D                      u1261 0160  
                    u1190 005E                      u1327 0216                      u1191 005D  
                    u1337 021E                      u1347 03FB                      u1277 038C  
                    u1287 03A1                      u1297 01C3                      i1l76 0447  
                    i1l77 0447                      i1l95 0422                      i1l96 0422  
                    _TMR0 0001                      _TMR2 0011           __end_of_T0_init 0458  
            __CFG_WRT$OFF 0000                      _main 010B                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000              lcd_instReg@i 0074  
                   ??_isr 0070              lcd_num@sinal 002D                     ?_main 0070  
         __end_of___awdiv 0298             __CFG_WDTE$OFF 0000           __end_of___awmod 02FB  
         ___awdiv@divisor 0072                     i1l114 0467                     i1l115 0467  
                   i1l142 03B2                     i1l143 03BF                     i1l144 03CC  
                   i1l145 03CC           ___awdiv@counter 0020                     _TMR1H 000F  
                   _TMR1L 000E                     _PORTD 0008                     u97_20 0440  
                   u97_21 043F                     u98_20 041B                     u98_21 041A  
                   u99_20 0460                     u99_21 045F              lcd_print@col 0078  
            lcd_print@lin 0022            __CFG_FCMEN$OFF 0000              lcd_print@pos 0021  
            lcd_print@str 0079        __size_of_T0_status 0008          __end_of_T0_start 0472  
         __end_of_lcd_num 010B                     _delay 03F8            __CFG_BOREN$OFF 0000  
                   pclath 000A                     status 0003                     wtemp0 007E  
           lcd_lincol@col 0075             lcd_lincol@lin 0077            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 019A                    ??_main 0030  
               ??_T0_init 0072                    ?_delay 0072          ___awdiv@dividend 0074  
                  u102_20 03AB                    u102_21 03AA                    u103_20 03B8  
                  u103_21 03B7                    u104_20 03C5                    u104_21 03C4  
                  i1l1441 03B8                    i1l1433 03A7                    i1l1371 040F  
                  i1l1443 03B9                    i1l1435 03AB                    i1l1365 0436  
                  i1l1373 0415                    i1l1445 03BF                    i1l1437 03AC  
                  i1l1367 043A                    i1l1375 041B                    i1l1447 03C5  
                  i1l1439 03B2                    i1l1369 0440                    i1l1377 0458  
                  i1l1449 03C6                    i1l1379 0460                    _T0_int 0436  
                  _T1_int 040F                    _T2_int 0458            __CFG_PWRTE$OFF 0000  
    __size_of_lcd_dataReg 0036         __end_of_T0_status 047A          __end_of_lcd_init 033A  
               ??___awdiv 0076                 ??___awmod 0076      __size_of_lcd_instReg 008B  
                  delay@t 0072          ___awdiv@quotient 0022           ___awmod@divisor 0072  
         ___awmod@counter 0077                 ??_lcd_num 0028                    saved_w 007E  
 __end_of__initialization 0019            __pcstackCOMMON 0070                 ?_T0_start 0072  
           __end_of_delay 040F            _OPTION_REGbits 0081                   ??_delay 0074  
      __size_of_lcd_print 0037                __pbssBANK0 0034                   ?_T0_int 0070  
                 ?_T1_int 0070                   ?_T2_int 0070                __pmaintext 010B  
              ??_T0_start 0074                __pintentry 0004                 T0_start@c 0072  
              _lcd_lincol 0423                   _T0_init 0448                   _T0count 0038  
                 _T1count 0036                   _T2count 0034                 ?_lcd_init 0070  
              __stringtab 03D3           __size_of_T0_int 0012           __size_of_T1_int 0014  
         __size_of_T2_int 0010         __end_of_lcd_print 0371                   ___awdiv 0225  
                 ___awmod 0298                   __ptext1 033A                   __ptext2 001D  
                 __ptext3 0423                   __ptext4 0371                   __ptext5 0298  
                 __ptext6 0225                   __ptext7 02FB                   __ptext8 019A  
                 __ptext9 03F8                   _lcd_num 001D                 _T1CONbits 0010  
               _T2CONbits 0012              __size_of_isr 002C          ___awmod@dividend 0074  
              ??_lcd_init 0075      end_of_initialization 0019                 _T0_status 0472  
               _PORTDbits 0008               ?_lcd_lincol 0075                 _TRISDbits 0088  
           ??_lcd_dataReg 0072                lcd_num@col 0024                lcd_num@div 002E  
              lcd_num@lin 002B                lcd_num@tam 0027                lcd_num@num 0025  
          __end_of_T0_int 0448            __end_of_T1_int 0423            __end_of_T2_int 0468  
           ??_lcd_instReg 0072                ?_T0_status 0072         __size_of_T0_start 000A  
     start_initialization 000F               __end_of_isr 03D3                  ??_T0_int 0070  
                ??_T1_int 0070                  ??_T2_int 0070  __CFG_FOSC$INTRC_NOCLKOUT 0000  
     __end_of_lcd_dataReg 03A7       __size_of_lcd_lincol 0013       __end_of_lcd_instReg 0225  
             __pbssCOMMON 007A                 ___latbits 0002             __pcstackBANK0 0020  
                ?_T0_init 0070         __size_of_lcd_init 003F                  ?___awdiv 0072  
                ?___awmod 0072               ??_T0_status 0074                 __pstrings 03D3  
               _lcd_print 033A                  ?_lcd_num 0024            __size_of_delay 0017  
       interrupt_function 0004               _lcd_dataReg 0371                  _PIE1bits 008C  
                _PIR1bits 000C               _lcd_instReg 019A                  _T0_start 0468  
              ?_lcd_print 0078               __stringbase 03D8              ??_lcd_lincol 0076  
        __size_of_T0_init 0010        __end_of_lcd_lincol 0436          __size_of___awdiv 0073  
        __size_of___awmod 0063        __end_of__stringtab 03D9          __size_of_lcd_num 00EE  
                __ptext10 0472                  __ptext11 0468                  __ptext12 0448  
                __ptext13 03A7                  __ptext14 0458                  __ptext15 040F  
                __ptext16 0436         __CFG_BOR4V$BOR40V 0000                  _lcd_init 02FB  
           __size_of_main 008F               ??_lcd_print 0020                _INTCONbits 000B  
                intlevel1 0000                 stringcode 03D3                  stringdir 03D3  
                stringtab 03D3              ?_lcd_dataReg 0070              ?_lcd_instReg 0070  
